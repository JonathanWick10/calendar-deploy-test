{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?8bd2","webpack:///./src/components/CalendarRecurrence.vue?fa61","webpack:///./src/components/CalendarToolbar.vue?5738","webpack:///./src/components/VSwitch.vue?5da1","webpack:///./src/components/Permissions.vue?cee4","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/components/Calendar.vue?4972","webpack:///./src/components/Color.vue?83e7","webpack:///./src/components/ColorCircle.vue?3ffb","webpack:///./src/App.vue","webpack:///./src/components/Calendar.vue","webpack:///./src/components/CalendarToolbar.vue","webpack:///./src/components/CalendarSettings.vue","webpack:///./src/utils/symbols.ts","webpack:///./src/components/ManageCalendar.vue","webpack:///./src/components/Color.vue","webpack:///./src/components/ColorCircle.vue","webpack:///./src/components/ColorCircle.vue?d521","webpack:///./src/components/ColorCircle.vue?6e52","webpack:///./src/components/Color.vue?4fc9","webpack:///./src/components/Color.vue?8bec","webpack:///./src/utils/enums/global.enum.ts","webpack:///./src/composables/use-time.ts","webpack:///./src/helpers/date.helper.ts","webpack:///./src/utils/constants.ts","webpack:///./src/utils/functions.ts","webpack:///./src/helpers/calendar.helper.ts","webpack:///./src/utils/enums/colors.enum.ts","webpack:///./src/helpers/custom-recurrence.helper.ts","webpack:///./src/composables/use-global.ts","webpack:///./src/api/create-instance.ts","webpack:///./src/api/prima.ts","webpack:///./src/graphql/calendar.graphql.ts","webpack:///./src/graphql/event.graphql.ts","webpack:///./src/graphql/user.graphql.ts","webpack:///./src/helpers/permissions.helper.ts","webpack:///./src/services/calendar.service.ts","webpack:///./src/composables/use-users.ts","webpack:///./src/composables/use-mode-filter.ts","webpack:///./src/composables/use-calendar-sources.ts","webpack:///./src/composables/use-calendar.ts","webpack:///./src/composables/use-calendar-events.ts","webpack:///./src/components/Permissions.vue","webpack:///./src/services/contacts.service.ts","webpack:///./src/services/cases.service.ts","webpack:///./src/components/Permissions.vue?93c8","webpack:///./src/services/calendar-notify.service.ts","webpack:///./src/components/Permissions.vue?30a0","webpack:///./src/components/ManageCalendar.vue?fabe","webpack:///./src/components/ManageCalendar.vue?22e0","webpack:///./src/components/CalendarSettings.vue?84e3","webpack:///./src/components/CalendarSettings.vue?aba4","webpack:///./src/components/CalendarToolbar.vue?ade8","webpack:///./src/components/CalendarToolbar.vue?dd74","webpack:///./src/components/CalendarEventForm.vue","webpack:///./src/components/CalendarRecurrence.vue","webpack:///./src/components/VSwitch.vue","webpack:///./src/components/VSwitch.vue?83bd","webpack:///./src/components/VSwitch.vue?3e9d","webpack:///./src/components/CalendarRecurrence.vue?4f29","webpack:///./src/components/CalendarRecurrence.vue?c35a","webpack:///./src/components/SelectContact.vue","webpack:///./src/components/SelectContact.vue?7e3e","webpack:///./src/components/SelectContact.vue?9665","webpack:///./src/components/SelectCase.vue","webpack:///./src/components/SelectCase.vue?6512","webpack:///./src/components/SelectCase.vue?bc71","webpack:///./src/components/Editor.vue","webpack:///./src/components/Editor.vue?f5a2","webpack:///./src/components/Editor.vue?f720","webpack:///./src/components/CalendarEventForm.vue?7df0","webpack:///./src/components/CalendarEventForm.vue?0010","webpack:///./src/components/CalendarForm.vue","webpack:///./src/components/CalendarForm.vue?4153","webpack:///./src/components/CalendarForm.vue?4000","webpack:///./src/components/CalendarModalEventInfo.vue","webpack:///./src/components/CalendarModalEventInfo.vue?0f49","webpack:///./src/components/CalendarModalEventInfo.vue?4767","webpack:///./src/components/Calendar.vue?b35b","webpack:///./src/components/Calendar.vue?3665","webpack:///./src/utils/enums/http.enum.ts","webpack:///./src/App.vue?1d14","webpack:///./src/App.vue?889f","webpack:///./src/plugins/ant-design.ts","webpack:///./src/main.ts","webpack:///./src/components/CalendarEventForm.vue?f869","webpack:///./src/components/CalendarSettings.vue?b9c1"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","map","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","resolve","class","style","isLoading","showCalendar","tip","size","hasError","status","title","sub-title","sources","calendarToolbar","modalActionTitle","visible","modal","ok-text","confirm-loading","cancel-button-props","closable","mask-closable","after-close","onAfterCloseModal","writeEvent","body-style","ref","is-display","type","eventToForm","new-event-range","state","newEventRange","edit-recurring-type","editRecurringType","isEventSelected","info","edit-recurrence-type","hide-following-check-item","hideFollowingCheckItem","hide-current-check-item","hideCurrentItem","onConfirmEditEvent","handleDeleteEvents","moveRecurrence","restartRecurringEventPosition","handleUpdateRecurringMouseActions","calendar","ok-button-props","calendarFormData","destroy-on-close","onCreateNewCalendar","onCancelNewCalendar","color","isDisplayInputSearch","onClickHideSearchBar","keyword","placeholder","onInputSearch","$event","target","prefix","suffix","onClickClearKeyword","showCalendarsDropdown","trigger","overlay","sourcesToRender","own","disabled","sourcesToFilter","sourceToFilter","checked","onCheckedCalendarSearch","shared","user","fullName","isHideTitle","today","onSetToday","paginationLabel","prev","isPrevDisabled","onChangeViewPage","next","isNextDisabled","content","popover","hover","handlePopoverCustomDateChange","overlayClassName","click","popoverDateData","component","popoverCustomDate","format","allow-clear","onGotoCustomDate","$props","viewTitle","timezoneLabel","onClickChangeTimezone","isModeFilter","onClickShowSearchBar","onClickSettings","show","onCalendarChecked","google","viewName","onChangeView","views","view","label","onCreate","modalSettings","width","footer","refCalendarSettings","tab","timezone-autofocus","timezoneAutofocus","onChangeSource","active-key","tab-position","layout","settings","timezone","show-search","timezones","onChangeCalendarData","onCreateCalendar","CalendarSettingsSymbol","CalendarInstanceSymbol","CalendarFormSymbol","CalendarCurrentDataSymbol","ModalSettingsSymbol","gutter","span","calendarId","onChangeCalendar","source","required","nameStatus","onChangeName","colors-data","colors","default","loading","isReadyForUpdate","onClickSave","fixedColor","outColor","onClickFixedColor","index","onClickColor","isColorAllowed","selectedColor","active","__default__","components","CheckOutlined","props","String","validator","includes","Boolean","animate","setup","Sizes","circleSize","isAnimated","_ctx","__setup__","ctx","render","__scopeId","ColorCircle","modelValue","fixed","colorsData","Array","actve","emits","emit","updateModelValue","setActiveColor","item","newColors","undefined","listColors","_color","isOut","deep","immediate","val","isDefaultColor","isCurrentColorSelected","isColorDisabled","stopPropagation","getFirstAllowedColor","onCreated","Theme","WeekDayMin","EventFrequency","DayPosition","CalendarContext","Permission","PermissionsType","_timezone","date","tz","getTimeZoneLabel","setTimezone","zone","guess","time","getMomentInstance","_moment","clone","getWeeksOfMonth","current","endOf","week","startOf","getCurrentWeekOfMonth","getDayPositionOfMonth","currentDate","startMonth","endMonth","monthDay","match","found","position","day","count","isSameOrBefore","isSame","dayString","add","weekday","getDateByPositionInMonth","month","year","byweekday","utc","set","fullDay","DAYS","find","min","ocurrences","numeric","fullcalendar","toISOString","matchDate","dateUTCToTimezone","addOffset","formatTimezoneHours","symb","substr","nums","split","numberStr","Number","filter","num","join","generateTimezoneLabel","momentFormat","firstPart","lastPart","isHourFormat","test","getWeekday","eventApiDateToEventZone","eventApiDate","eventTimezone","UNAUTHORIZED_ERROR","rrule","SU","Su","short","full","MO","Mo","TU","Tu","WE","We","TH","Th","FR","Fr","SA","Sa","EVENT_EDITABLE_PROPS_OBJ","freeze","prop","optional","FORMAT_EVENT","names","cloneObject","obj","JSON","parse","stringify","createDebounce","timeout","callback","delay","clearTimeout","setTimeout","capitalize","text","charAt","toUpperCase","isoDateWithoutTime","instance","removeObjectProps","propsToRemove","reduce","newObj","isObject","toString","arraysAreEquals","arr1","arr2","every","objectsAreEquals","isArray","obj1","obj2","obj1Keys","obj2Keys","getObjChangedProps","oldObj","oldKeys","newKeys","evaluateKeys","changes","removeNullableProps","exclude","isArrayEmpty","array","isArrayAndHasItems","isUndefined","isObjectEmpty","valueIs","options","isValidEmail","email","re","allDay","dateAbsulute","eventNewPosition","eventOldPosition","oldMonth","Date","getUTCMonth","newMonth","isRecurrenceMonthlyByDay","freq","byweekdayPropToStr","formatEventToFullCalendar","event","start","end","newEvent","dtstart","until","exdate","formatBackendEvent","isRecurringEvent","eventObject","getCurrentAvailableTimeRange","now","minutes","seconds","milliseconds","convertOffsetTimeToUTC","strDate","EventColors","CalendarColors","frequency","FREQUENCIES","findIndex","between","toDate","newRRule","rule","interval","dates","all","params","realStart","offset","local","date1","date2","diff","recurringEvent","betweenDates","subtract","matches","res","first","last","oldUntil","newUntil","hours","dateToAnalize","firstDate","lastDate","isDurationDifferent","duration1","duration2","some","selectedDays","filtered","idx","floor","duration","days","Math","parseInt","daysDiff","isDurationEmpty","getDaysOfDuration","newDate","currentDay","addDaysCount","isSum","newIndexDay","abs","updateByweekdayProp","weekdays","getWeekNumberNameInMonth","prefixes","exclusions","new","_rrule","_getByweekday","this","_matchByweekday","minDay","_generateWeeklyLabel","labels","_areSeletionDaysWeekdays","_gerateMonthlyByweekday","Last","First","Second","Third","Fourth","_generateSelectionAsString","Daily","Weekly","isWeekdays","rest","Monthly","getCustomSelectedDays","getLabel","isCustom","todayIndex","awaitLoading","mutations","setLoading","toggleLoading","setAwaitLoading","globalStore","createInstance","config","_axios","a","GRAPHQL_PROPS","setBaseURL","url","defaults","baseURL","setToken","forEach","header","headers","common","getToken","headersObject","graphql","post","isGraphql","interceptors","request","use","error","Promise","reject","response","CalendarGQL","fragments","CalendarFullFragment","CalendarWithoutPermissionsFragment","EventGQL","FullEventFragment","UserGQL","UserBasicsFragment","generateBackendNotation","action","permissions","read","edit","delete","quit","permission","userIds","returnEvent","localEvent","fullCalendarEvent","searchEvents","search","calendars","events","prima","query","variables","errors","calendarEvents","calendarSearch","calendarsResult","sourceIndex","fullCalendarEvents","getCalendars","whoami","whoAmI","users","isDefault","userId","sort","getEvents","func","field","getEventsFromOneCalendar","context","updateCalendarVisibility","mutation","calendarWriteShowFor","updateCalendar","editCalendar","calendarEdit","createCalendar","newCalendar","calendarAdd","createEvent","calendarEventAdd","updateEvents","criteria","calendarEventsEdit","deleteEvents","filters","calendarEventsDelete","args","calendarPermissionWrite","setWhoami","getUserFullName","setUsers","getUserLocal","lastName","firstName","middleName","enable","isActiveView","loaded","displayInputSearch","filterAppliedWithKeyword","contact","pagination","skip","total","cache","cases","activeModeFilter","setFilterViewAsActive","setCalendarsToFilter","setFilterData","setCasesInCache","setContactInCache","setVisibilityInputSearch","setKeyword","setContactData","setPaginationSkip","resetPagination","paginationStatus","pag","filterEvent","toLowerCase","description","createdBy","casesMatch","primaCase","caseTypeName","mapSources","getFilteredSources","getFilterArgs","getFilteredEvents","from","sourceEvents","results","globalFilter","isFilterAppliedWithKeyword","contactData","isFilterViewActive","filteredSources","setSources","transformSource","displayedSources","getPermission","All","Read","transformPermission","newPermissions","admin","global","individual","acc","basics","Google","defaultSource","cal","usedColors","sourceColors","values","isUsedColor","getSourcePermission","permissionTypes","permissionType","isSourceDisplayed","sourceId","isCalendarOwn","addNewEventInSource","deleteEventInSource","eventId","addNewSource","getSourceById","getOppositeSourceById","opposite","oppositeIndex","oppositeSource","removeSource","updateSource","newSource","oldRecurringPosition","activeDateRange","isSourcesLoaded","isChildEvent","parentId","selectedSource","getCurrentSource","getCurrentEventDataFromSources","addRecurrenceExclusion","startDate","parent","getCurrentFullEvent","getFullEventById","getEventDate","eventApi","startStr","endStr","getActiveDatesRange","activeRange","currentData","dateProfile","updateEventRuleAndDuration","currentEvent","updateDateFromDuration","updateWeekday","isByWeekdayDifferent","setCalendarInstance","setCurrentCalendarId","setActiveDateRange","setOldRecurringPosition","setDataOfCurrentEvent","refetchSources","ids","_sources","getEventSourceById","batchRendering","remove","addEventSource","addCalendarSource","addNewCalendarSource","currentEventApi","getEventFromSource","eventIndex","getRecurrenceChildren","_source","getPropsToUpdateInChildren","changedProps","isAssigned","isRemoved","getChildrenDataToUpdate","children","editableProps","child","propsToModify","newData","splitExdate","splitDate","regenerateByweekday","currentByweekday","eventSelectedDate","renewLocalEvent","oldCalendarId","modalAddPeople","addPermission","addUserPermission","onCancelModalAddPeople","filter-option","userFilterOption","option-label-prop","availableUsers","specialPermissions","icon","setPermission","revokePermission","cancel-text","setCalendarAsGlobal","onChangePopConfirm","isVisibleTooltipRevokeGlobal","isVisiblePopConfirm","overlay-style","sharedWith","isOwner","Individual","getCases","casesStr","contacts","getAll","contactId","_events","notifications","schedulers","_today","run","getEventsToNotify","console","log","addEventScheduler","startAt","isBefore","_registerScheduler","valueOf","childEventId","childId","notification","tenMinutesBefore","isSameOrAfter","timeoutId","_showNotification","message","placement","_removeNotification","notificationIndex","schedulerIndex","scheduler","getEventsToNotifyOfRecurrence","isActive","_isActiveEvent","_getFrequencyNumber","recurrenceDates","eventsActiveToday","isExcluded","exDate","changeTitle","isToday","isAfter","UserOutlined","PlusOutlined","KeyOutlined","TeamOutlined","CloseOutlined","LockOutlined","refSelectUser","isOpenSelectUser","isOpen","focus","ignoreUser","input","option","trim","currentUser","usersToAdd","Global","Color","Permissions","_","modalData","refNewCalendarName","isNameTouched","owner","help","validateStatus","_colors","hasOutColor","calendarSelected","activeTab","updated","oldSource","CalendarOutlined","SettingOutlined","ManageCalendar","isDisplay","refCalendarForm","refTimezones","success","CalendarSettings","RightOutlined","LeftOutlined","DownOutlined","AimOutlined","FormOutlined","GlobalOutlined","SearchOutlined","ArrowLeftOutlined","viewSelectedLabel","createType","debounce","viewLabel","refInputKeyword","setViewTitle","hasFilter","handleMenuClick","trimStart","model","form","rules","autocomplete","dateCols","isSplitCurrentEvent","dateRange","dateFormat","separator","onChangeDates","use12-hours","onChangeAllDay","includeContact","isHideRecurrenceOptions","isOriginalEventRecurring","onChangeEventType","recurrence","ends","byDay","onChangeUntil","onChangeContact","case","caseId","isRequiredCaseField","onFilterCalendars","sharedCalendars","location","attendees","token-separators","compact","max","$emit","onChangeFreq","periodLabel","Yearly","onChangeByDay","internalByWeekday","monthly","onChangeMonthlyWeekday","allDays","isDayChecked","onChangeByweekday","onChangeEnds","disabled-date","disabledDate","untilDateLabel","updateValue","$attrs","inheritAttrs","VSwitch","parentForm","refForm","weekly","setWeekday","firstTime","itemDay","validateField","errorFields","sortDays","newDays","v","sorted","validateForm","isEmptyByweekday","selectProps","readonly","defaultContacts","searchContact","condition","limit","getContact","onChange","_props","filterOption","showSearch","allowClear","open","onSearch","exists","generateCaseFullName","defaultCases","disabledField","isDisabled","currentCase","fullname","caseFilterOption","model-value","editor","editorConfig","onInput","CKEditor","defaultToolbar","_data","toolbar","link","addTargetToExternalLinks","defaultProtocol","CalendarRecurrence","Editor","SelectContact","SelectCase","refRecurrence","isEndDateChangedByUser","newEnd","isDatesSameDay","dayOfYear","setDates","resetForm","oldTimezone","cols","appendColor","unshift","arrColors","isSourceColor","allCalendars","clearValidate","getEventDuration","tempStart","generateEventDuration","formToRecurringEvent","tmpUntil","getFormattedRuleDates","getEvent","isUpdateAll","isUpdateCurrent","attendeesValidator","onChangeStartDate","endTemp","onChangeEndDate","startTemp","newStart","currentCalendar","promises","validate","formItemProps","formProps","defaultColor","formItem","wrapperCol","labelCol","sourceColor","resetFieldName","onChangeVisiblePopConfirm","editRecurrenceType","updateEditRecurrenceType","hideCurrentCheckItem","onConfirmDeleteEvent","closeModal","eventLabel","isGoogleEvent","recurrenceLabel","showDescription","EditOutlined","DeleteOutlined","UserAddOutlined","isConfirmed","createdById","helper","calendarContext","eventDate","CalendarToolbar","CalendarEventForm","CalendarForm","CalendarModalEventInfo","refFormEvent","eventDateLabel","eventAction","showRecurrenceSelect","formatEventDates","keepCurrentDate","extendedProps","setStart","setEnd","getVisibleRange","foreverEvent","flat","range","temp","fetchEvents","removeAllEvents","visibleRange","setOption","calendarSource","oldVal","hasActiveDateRange","showAlert","revertEventChangePosition","subtractDate","getRuleMatches","generateDateRange","methods","invertField","invert","method","recurrenceStart","isFirstEventOfRecurrence","isLastEventOfRecurrence","onEventClick","getEventOldPosition","addEventToView","addEvent","updateEventsTimeInView","refreshEventsInView","eventUI","getEventById","eventsUI","needUpdate","isSameTimezone","getPrevEventEndDate","getCalendarsToRefeatch","eventCalendarId","calendarIds","isCurrentCalendarId","cutRecurrence","isEditViaModal","prevEventEnd","newCount","currentEventStartDate","distance","isEventMoved","hasByweekday","untilByCount","formatEventDayByAllDay","childrenToUpdate","getCurrentEventChanges","currentEventBackend","childrenBackend","eventToUpdate","onChangeCalendarVisibility","manageUnauthorizedError","hasUnauthorizedError","updateVisibleRangeOnFilterView","_event","handleUpdateEventFromModal","onSelect","onNewEventFromCustomButton","temptEvent","getRuleDates","onClickDeleteEvent","deleteEvent","deleteEventFromRecurrence","deleteThisAndFollowingEvents","ex","deletedEvent","deleteAllEvents","toDelete","splitEventFromRecurrence","oldPosition","parentUpdated","newChildEvent","newEventData","compareData","updateMonthlyByDay","getRecurrenceNewMonth","currentStart","tmpStart","newDtstart","getUTCFullYear","monthU","timeEnd","setCurrentActiveRange","areDatesEquals","manageEventOnResizeOrMoving","oldEvent","onEventResizeStart","onEventResize","revert","onEventDragStart","onEventDrop","fullSource","belongsToCalendar","fullEvent","setProp","removed","changeView","onGotoDate","gotoDate","onFetchEvents","el","document","getElementById","aspectRatio","plugins","initialView","timeZone","headerToolbar","editable","selectable","dayMaxEvents","slotDuration","allDayText","slotLabelFormat","hour","minute","omitZeroMinute","meridiem","select","eventDragStart","eventDrop","eventResize","eventResizeStart","eventClick","viewClassNames","CalendarHttpHeader","PrimaHttpHeader","Calendar","bgModal","hasUserCalendars","fetchData","LapisLazuli","Blush","ForestGreenCrayola","firm","personal","appointments","getParams","bgParam","searchParams","modeParam","isNaN","URL","href","token","TOKEN","body","classList","app","App","mount"],"mappings":"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","file":"js/app.8b7b5549.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/apps/calendar/staging/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=c9853290&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CalendarRecurrence.vue?vue&type=style&index=0&id=1ae24390&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CalendarToolbar.vue?vue&type=style&index=0&id=31cc7e82&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./VSwitch.vue?vue&type=style&index=0&id=afe305b8&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Permissions.vue?vue&type=style&index=0&id=f14bbbaa&lang=scss&scoped=true\"","var map = {\n\t\"./af\": \"2bfb\",\n\t\"./af.js\": \"2bfb\",\n\t\"./ar\": \"8e73\",\n\t\"./ar-dz\": \"a356\",\n\t\"./ar-dz.js\": \"a356\",\n\t\"./ar-kw\": \"423e\",\n\t\"./ar-kw.js\": \"423e\",\n\t\"./ar-ly\": \"1cfd\",\n\t\"./ar-ly.js\": \"1cfd\",\n\t\"./ar-ma\": \"0a84\",\n\t\"./ar-ma.js\": \"0a84\",\n\t\"./ar-sa\": \"8230\",\n\t\"./ar-sa.js\": \"8230\",\n\t\"./ar-tn\": \"6d83\",\n\t\"./ar-tn.js\": \"6d83\",\n\t\"./ar.js\": \"8e73\",\n\t\"./az\": \"485c\",\n\t\"./az.js\": \"485c\",\n\t\"./be\": \"1fc1\",\n\t\"./be.js\": \"1fc1\",\n\t\"./bg\": \"84aa\",\n\t\"./bg.js\": \"84aa\",\n\t\"./bm\": \"a7fa\",\n\t\"./bm.js\": \"a7fa\",\n\t\"./bn\": \"9043\",\n\t\"./bn-bd\": \"9686\",\n\t\"./bn-bd.js\": \"9686\",\n\t\"./bn.js\": \"9043\",\n\t\"./bo\": \"d26a\",\n\t\"./bo.js\": \"d26a\",\n\t\"./br\": \"6887\",\n\t\"./br.js\": \"6887\",\n\t\"./bs\": \"2554\",\n\t\"./bs.js\": \"2554\",\n\t\"./ca\": \"d716\",\n\t\"./ca.js\": \"d716\",\n\t\"./cs\": \"3c0d\",\n\t\"./cs.js\": \"3c0d\",\n\t\"./cv\": \"03ec\",\n\t\"./cv.js\": \"03ec\",\n\t\"./cy\": \"9797\",\n\t\"./cy.js\": \"9797\",\n\t\"./da\": \"0f14\",\n\t\"./da.js\": \"0f14\",\n\t\"./de\": \"b469\",\n\t\"./de-at\": \"b3eb\",\n\t\"./de-at.js\": \"b3eb\",\n\t\"./de-ch\": \"bb71\",\n\t\"./de-ch.js\": \"bb71\",\n\t\"./de.js\": \"b469\",\n\t\"./dv\": \"598a\",\n\t\"./dv.js\": \"598a\",\n\t\"./el\": \"8d47\",\n\t\"./el.js\": \"8d47\",\n\t\"./en-au\": \"0e6b\",\n\t\"./en-au.js\": \"0e6b\",\n\t\"./en-ca\": \"3886\",\n\t\"./en-ca.js\": \"3886\",\n\t\"./en-gb\": \"39a6\",\n\t\"./en-gb.js\": \"39a6\",\n\t\"./en-ie\": \"e1d3\",\n\t\"./en-ie.js\": \"e1d3\",\n\t\"./en-il\": \"7333\",\n\t\"./en-il.js\": \"7333\",\n\t\"./en-in\": \"ec2e\",\n\t\"./en-in.js\": \"ec2e\",\n\t\"./en-nz\": \"6f50\",\n\t\"./en-nz.js\": \"6f50\",\n\t\"./en-sg\": \"b7e9\",\n\t\"./en-sg.js\": \"b7e9\",\n\t\"./eo\": \"65db\",\n\t\"./eo.js\": \"65db\",\n\t\"./es\": \"898b\",\n\t\"./es-do\": \"0a3c\",\n\t\"./es-do.js\": \"0a3c\",\n\t\"./es-mx\": \"b5b7\",\n\t\"./es-mx.js\": \"b5b7\",\n\t\"./es-us\": \"55c9\",\n\t\"./es-us.js\": \"55c9\",\n\t\"./es.js\": \"898b\",\n\t\"./et\": \"ec18\",\n\t\"./et.js\": \"ec18\",\n\t\"./eu\": \"0ff2\",\n\t\"./eu.js\": \"0ff2\",\n\t\"./fa\": \"8df4\",\n\t\"./fa.js\": \"8df4\",\n\t\"./fi\": \"81e9\",\n\t\"./fi.js\": \"81e9\",\n\t\"./fil\": \"d69a\",\n\t\"./fil.js\": \"d69a\",\n\t\"./fo\": \"0721\",\n\t\"./fo.js\": \"0721\",\n\t\"./fr\": \"9f26\",\n\t\"./fr-ca\": \"d9f8\",\n\t\"./fr-ca.js\": \"d9f8\",\n\t\"./fr-ch\": \"0e49\",\n\t\"./fr-ch.js\": \"0e49\",\n\t\"./fr.js\": \"9f26\",\n\t\"./fy\": \"7118\",\n\t\"./fy.js\": \"7118\",\n\t\"./ga\": \"5120\",\n\t\"./ga.js\": \"5120\",\n\t\"./gd\": \"f6b4\",\n\t\"./gd.js\": \"f6b4\",\n\t\"./gl\": \"8840\",\n\t\"./gl.js\": \"8840\",\n\t\"./gom-deva\": \"aaf2\",\n\t\"./gom-deva.js\": \"aaf2\",\n\t\"./gom-latn\": \"0caa\",\n\t\"./gom-latn.js\": \"0caa\",\n\t\"./gu\": \"e0c5\",\n\t\"./gu.js\": \"e0c5\",\n\t\"./he\": \"c7aa\",\n\t\"./he.js\": \"c7aa\",\n\t\"./hi\": \"dc4d\",\n\t\"./hi.js\": \"dc4d\",\n\t\"./hr\": \"4ba9\",\n\t\"./hr.js\": \"4ba9\",\n\t\"./hu\": \"5b14\",\n\t\"./hu.js\": \"5b14\",\n\t\"./hy-am\": \"d6b6\",\n\t\"./hy-am.js\": \"d6b6\",\n\t\"./id\": \"5038\",\n\t\"./id.js\": \"5038\",\n\t\"./is\": \"0558\",\n\t\"./is.js\": \"0558\",\n\t\"./it\": \"6e98\",\n\t\"./it-ch\": \"6f12\",\n\t\"./it-ch.js\": \"6f12\",\n\t\"./it.js\": \"6e98\",\n\t\"./ja\": \"079e\",\n\t\"./ja.js\": \"079e\",\n\t\"./jv\": \"b540\",\n\t\"./jv.js\": \"b540\",\n\t\"./ka\": \"201b\",\n\t\"./ka.js\": \"201b\",\n\t\"./kk\": \"6d79\",\n\t\"./kk.js\": \"6d79\",\n\t\"./km\": \"e81d\",\n\t\"./km.js\": \"e81d\",\n\t\"./kn\": \"3e92\",\n\t\"./kn.js\": \"3e92\",\n\t\"./ko\": \"22f8\",\n\t\"./ko.js\": \"22f8\",\n\t\"./ku\": \"2421\",\n\t\"./ku.js\": \"2421\",\n\t\"./ky\": \"9609\",\n\t\"./ky.js\": \"9609\",\n\t\"./lb\": \"440c\",\n\t\"./lb.js\": \"440c\",\n\t\"./lo\": \"b29d\",\n\t\"./lo.js\": \"b29d\",\n\t\"./lt\": \"26f9\",\n\t\"./lt.js\": \"26f9\",\n\t\"./lv\": \"b97c\",\n\t\"./lv.js\": \"b97c\",\n\t\"./me\": \"293c\",\n\t\"./me.js\": \"293c\",\n\t\"./mi\": \"688b\",\n\t\"./mi.js\": \"688b\",\n\t\"./mk\": \"6909\",\n\t\"./mk.js\": \"6909\",\n\t\"./ml\": \"02fb\",\n\t\"./ml.js\": \"02fb\",\n\t\"./mn\": \"958b\",\n\t\"./mn.js\": \"958b\",\n\t\"./mr\": \"39bd\",\n\t\"./mr.js\": \"39bd\",\n\t\"./ms\": \"ebe4\",\n\t\"./ms-my\": \"6403\",\n\t\"./ms-my.js\": \"6403\",\n\t\"./ms.js\": \"ebe4\",\n\t\"./mt\": \"1b45\",\n\t\"./mt.js\": \"1b45\",\n\t\"./my\": \"8689\",\n\t\"./my.js\": \"8689\",\n\t\"./nb\": \"6ce3\",\n\t\"./nb.js\": \"6ce3\",\n\t\"./ne\": \"3a39\",\n\t\"./ne.js\": \"3a39\",\n\t\"./nl\": \"facd\",\n\t\"./nl-be\": \"db29\",\n\t\"./nl-be.js\": \"db29\",\n\t\"./nl.js\": \"facd\",\n\t\"./nn\": \"b84c\",\n\t\"./nn.js\": \"b84c\",\n\t\"./oc-lnc\": \"167b\",\n\t\"./oc-lnc.js\": \"167b\",\n\t\"./pa-in\": \"f3ff\",\n\t\"./pa-in.js\": \"f3ff\",\n\t\"./pl\": \"8d57\",\n\t\"./pl.js\": \"8d57\",\n\t\"./pt\": \"f260\",\n\t\"./pt-br\": \"d2d4\",\n\t\"./pt-br.js\": \"d2d4\",\n\t\"./pt.js\": \"f260\",\n\t\"./ro\": \"972c\",\n\t\"./ro.js\": \"972c\",\n\t\"./ru\": \"957c\",\n\t\"./ru.js\": \"957c\",\n\t\"./sd\": \"6784\",\n\t\"./sd.js\": \"6784\",\n\t\"./se\": \"ffff\",\n\t\"./se.js\": \"ffff\",\n\t\"./si\": \"eda5\",\n\t\"./si.js\": \"eda5\",\n\t\"./sk\": \"7be6\",\n\t\"./sk.js\": \"7be6\",\n\t\"./sl\": \"8155\",\n\t\"./sl.js\": \"8155\",\n\t\"./sq\": \"c8f3\",\n\t\"./sq.js\": \"c8f3\",\n\t\"./sr\": \"cf1e\",\n\t\"./sr-cyrl\": \"13e9\",\n\t\"./sr-cyrl.js\": \"13e9\",\n\t\"./sr.js\": \"cf1e\",\n\t\"./ss\": \"52bd\",\n\t\"./ss.js\": \"52bd\",\n\t\"./sv\": \"5fbd\",\n\t\"./sv.js\": \"5fbd\",\n\t\"./sw\": \"74dc\",\n\t\"./sw.js\": \"74dc\",\n\t\"./ta\": \"3de5\",\n\t\"./ta.js\": \"3de5\",\n\t\"./te\": \"5cbb\",\n\t\"./te.js\": \"5cbb\",\n\t\"./tet\": \"576c\",\n\t\"./tet.js\": \"576c\",\n\t\"./tg\": \"3b1b\",\n\t\"./tg.js\": \"3b1b\",\n\t\"./th\": \"10e8\",\n\t\"./th.js\": \"10e8\",\n\t\"./tk\": \"5aff\",\n\t\"./tk.js\": \"5aff\",\n\t\"./tl-ph\": \"0f38\",\n\t\"./tl-ph.js\": \"0f38\",\n\t\"./tlh\": \"cf75\",\n\t\"./tlh.js\": \"cf75\",\n\t\"./tr\": \"0e81\",\n\t\"./tr.js\": \"0e81\",\n\t\"./tzl\": \"cf51\",\n\t\"./tzl.js\": \"cf51\",\n\t\"./tzm\": \"c109\",\n\t\"./tzm-latn\": \"b53d\",\n\t\"./tzm-latn.js\": \"b53d\",\n\t\"./tzm.js\": \"c109\",\n\t\"./ug-cn\": \"6117\",\n\t\"./ug-cn.js\": \"6117\",\n\t\"./uk\": \"ada2\",\n\t\"./uk.js\": \"ada2\",\n\t\"./ur\": \"5294\",\n\t\"./ur.js\": \"5294\",\n\t\"./uz\": \"2e8c\",\n\t\"./uz-latn\": \"010e\",\n\t\"./uz-latn.js\": \"010e\",\n\t\"./uz.js\": \"2e8c\",\n\t\"./vi\": \"2921\",\n\t\"./vi.js\": \"2921\",\n\t\"./x-pseudo\": \"fd7e\",\n\t\"./x-pseudo.js\": \"fd7e\",\n\t\"./yo\": \"7f33\",\n\t\"./yo.js\": \"7f33\",\n\t\"./zh-cn\": \"5c3a\",\n\t\"./zh-cn.js\": \"5c3a\",\n\t\"./zh-hk\": \"49ab\",\n\t\"./zh-hk.js\": \"49ab\",\n\t\"./zh-mo\": \"3a6c\",\n\t\"./zh-mo.js\": \"3a6c\",\n\t\"./zh-tw\": \"90ea\",\n\t\"./zh-tw.js\": \"90ea\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"4678\";","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Calendar.vue?vue&type=style&index=0&id=261a596e&lang=scss\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Color.vue?vue&type=style&index=0&id=0e7e247f&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ColorCircle.vue?vue&type=style&index=0&id=e91ce874&lang=scss&scoped=true\"","<template>\n  <div v-if=\"isLoading && !showCalendar\" class=\"center\">\n    <ASpin tip=\"Fetching events...\" size=\"large\" />\n  </div>\n\n  <div v-if=\"showCalendar && !hasError\" style=\"margin: 10px\">\n    <Calendar />\n  </div>\n\n  <div v-else-if=\"hasError && !isLoading\" class=\"center\">\n    <AResult\n      status=\"403\"\n      title=\"403\"\n      sub-title=\"Sorry, you are not authorized to access this page.\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref } from 'vue';\nimport Calendar from '@/components/Calendar.vue';\nimport { primaApi } from './api';\nimport { PrimaHttpHeader } from './utils/enums/http.enum';\nimport { useCalendarSources, useGlobalProps, useModeFilter, useUsers } from './composables';\nimport { calendarService, ContactsService } from './services';\nimport { CalendarMode, CalendarOriginalSource } from './types/calendar.type';\nimport { CalendarColors } from './utils/enums/colors.enum';\nimport { ModalBackground } from './types/types';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Calendar,\n  },\n  setup() {\n    const { setWhoami, setUsers } = useUsers();\n    const { isLoading, setAwaitLoading } = useGlobalProps();\n    const { setSources } = useCalendarSources();\n    const {\n      activeModeFilter,\n      setFilterData,\n      setContactData,\n      isModeFilter,\n      contactData,\n      setCasesInCache,\n      setContactInCache,\n    } = useModeFilter();\n\n    const bgModal = ref<ModalBackground>('active');\n\n    /** Params for list events */\n    const showCalendar = ref(false);\n    const hasError = ref(false);\n\n    const hasUserCalendars = (userId: number, calendars: CalendarOriginalSource[]) => {\n      return calendars.some(calendar => calendar.userId === userId);\n    };\n\n    const fetchData = async () => {\n      try {\n        setAwaitLoading(true);\n\n        const { calendars, whoami, users } = await calendarService.getCalendars();\n        setWhoami(whoami);\n        setUsers(users);\n\n        // Create default calendars\n        if (!hasUserCalendars(whoami.id, calendars)) {\n          const [firm, personal, appointments] = await Promise.all([\n            calendarService.createCalendar({\n              name: 'Firm Calendar',\n              isDefault: true,\n              color: CalendarColors.LapisLazuli,\n            }),\n\n            calendarService.createCalendar({\n              name: 'Personal',\n              isDefault: false,\n              color: CalendarColors.Blush,\n            }),\n\n            calendarService.createCalendar({\n              name: 'Appointments',\n              isDefault: false,\n              color: CalendarColors.ForestGreenCrayola,\n            }),\n          ]);\n\n          calendars.unshift(firm);\n          calendars.push(personal, appointments);\n        }\n\n        setSources(calendars, isModeFilter.value);\n        showCalendar.value = true;\n      } catch (error: any) {\n        console.error(error);\n        hasError.value = true;\n      } finally {\n        setAwaitLoading(false);\n      }\n    };\n\n    const getParams = async (url: URL) => {\n      const bgParam = url.searchParams.get('modal-bg') as ModalBackground;\n      const modeParam = url.searchParams.get('mode') as CalendarMode;\n      bgModal.value = !bgParam || !['active', 'blank'].includes(bgParam) ? 'active' : bgParam;\n\n      if (modeParam === 'filter') {\n        let contactId = url.searchParams.get('contact');\n        let caseId = url.searchParams.get('case');\n\n        if (!caseId && !contactId) {\n          throw new Error(`[Filter Mode]: The params \"contact\" or \"case\" are required!`);\n        }\n\n        if (caseId && !contactId) {\n          throw new Error(`[Filter Mode]: The param \"contact\" is required`);\n        }\n\n        if (isNaN(contactId as any) || (caseId && isNaN(caseId as any))) {\n          throw new Error(`[Filter Mode]: The params \"contact\" and \"case\" should be a numbers!`);\n        }\n\n        activeModeFilter(true);\n\n        const field = caseId ? 'caseId' : 'contactId';\n        const value = field === 'caseId' ? caseId : contactId;\n\n        setFilterData(field, Number(value));\n        setContactData({ id: Number(contactId), caseId: Number(caseId) });\n      }\n    };\n\n    const onCreated = async () => {\n      const url = new URL(window.location.href);\n\n      getParams(url);\n\n      const baseURL = url.searchParams.get('base-url');\n      const token = url.searchParams.get('token');\n      // const token = localStorage.getItem('token');\n\n      baseURL && primaApi.setBaseURL(baseURL);\n\n      if (token) {\n        primaApi.setToken({ [PrimaHttpHeader.TOKEN]: token });\n\n        fetchData();\n      } else {\n        hasError.value = true;\n\n        return;\n      }\n\n      if (!isModeFilter.value) {\n        return;\n      }\n\n      const getCases = !!contactData.value!.caseId;\n\n      const [result] = await ContactsService.search(\n        { filter: [{ field: 'id', value: contactData.value!.id }] },\n        getCases,\n      );\n\n      if (!result) {\n        throw new Error(`Contact not found`);\n      }\n\n      const { cases = [], ...contact } = result;\n\n      setCasesInCache(cases);\n      setContactInCache(contact);\n    };\n\n    onMounted(() => {\n      if (bgModal.value === 'blank') {\n        document.body.classList.add('blank-modal');\n      }\n    });\n\n    onCreated();\n\n    return { showCalendar, isLoading, hasError };\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.center {\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1051 !important;\n  position: absolute;\n}\n\n#app {\n  overflow-y: hidden;\n}\n</style>\n","<template>\n  <template v-if=\"sources.length\">\n    <CalendarToolbar v-bind=\"calendarToolbar\" />\n\n    <!-- Create/edit event modal -->\n    <AModal\n      :title=\"modalActionTitle\"\n      v-model:visible=\"modal.visible\"\n      ok-text=\"Save\"\n      :confirm-loading=\"isLoading\"\n      :cancel-button-props=\"{ disabled: isLoading }\"\n      :closable=\"!isLoading\"\n      :mask-closable=\"!isLoading\"\n      :after-close=\"onAfterCloseModal\"\n      @ok=\"writeEvent\"\n      style=\"top: 50px\"\n      :body-style=\"{ maxHeight: '761px', overflowY: 'auto', paddingBottom: 0 }\"\n    >\n      <CalendarEventForm\n        ref=\"refFormEvent\"\n        :is-display=\"modal.visible\"\n        :type=\"modal.type\"\n        :data=\"eventToForm\"\n        :new-event-range=\"state.newEventRange\"\n        :edit-recurring-type=\"editRecurringType\"\n      />\n    </AModal>\n    <!-- Create/edit event modal -->\n\n    <!-- Modal info -->\n    <CalendarModalEventInfo\n      v-if=\"isEventSelected\"\n      v-model:visible=\"modal.info\"\n      v-model:edit-recurrence-type=\"editRecurringType\"\n      :hide-following-check-item=\"hideFollowingCheckItem\"\n      :hide-current-check-item=\"hideCurrentItem\"\n      class=\"ant-modal-event-info\"\n      @confirm-edit-event=\"onConfirmEditEvent\"\n      @confirm-delete-event=\"handleDeleteEvents\"\n      @close=\"modal.info = false\"\n    />\n    <!-- End modal info -->\n\n    <AModal\n      v-model:visible=\"modal.moveRecurrence\"\n      title=\"Edit recurring event\"\n      :confirm-loading=\"isLoading\"\n      :cancel-button-props=\"{ disabled: isLoading }\"\n      :closable=\"!isLoading\"\n      :mask-closable=\"!isLoading\"\n      style=\"max-width: 365px\"\n      @cancel=\"restartRecurringEventPosition\"\n      @ok=\"handleUpdateRecurringMouseActions\"\n    >\n      <ARadioGroup v-model:value=\"editRecurringType\" style=\"display: flex; flex-direction: column\">\n        <ARadio v-if=\"!hideCurrentItem\" value=\"current\" class=\"radio-vertical\">This event</ARadio>\n        <ARadio v-if=\"!hideFollowingCheckItem\" value=\"following\" class=\"radio-vertical\">\n          This and following events\n        </ARadio>\n        <ARadio value=\"all\" class=\"radio-vertical\">All events</ARadio>\n      </ARadioGroup>\n    </AModal>\n\n    <AModal\n      v-model:visible=\"modal.calendar\"\n      title=\"New calendar\"\n      :confirm-loading=\"isLoading\"\n      :ok-button-props=\"{ disabled: isLoading || !calendarFormData.name }\"\n      :cancel-button-props=\"{ disabled: isLoading }\"\n      :closable=\"!isLoading\"\n      :mask-closable=\"!isLoading\"\n      destroy-on-close\n      style=\"max-width: 365px\"\n      @ok=\"onCreateNewCalendar\"\n      @cancel=\"onCancelNewCalendar\"\n    >\n      <CalendarForm v-model:name=\"calendarFormData.name\" v-model:color=\"calendarFormData.color\" />\n    </AModal>\n  </template>\n\n  <div class=\"Calendar\" id=\"calendar\" />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, reactive, ref, watch, provide, nextTick } from 'vue';\nimport CalendarToolbar from '@/components/CalendarToolbar.vue';\nimport CalendarEventForm from '@/components/CalendarEventForm.vue';\nimport CalendarForm from '@/components/CalendarForm.vue';\nimport CalendarModalEventInfo from '@/components/CalendarModalEventInfo.vue';\nimport { Calendar, DateSelectArg, EventApi, EventDropArg } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listGridPlugin from '@fullcalendar/list';\nimport interactionPlugin, {\n  EventDragStartArg,\n  EventResizeDoneArg,\n  EventResizeStartArg,\n} from '@fullcalendar/interaction';\nimport rrulePlugin from '@fullcalendar/rrule';\nimport moment from 'moment-timezone';\n\nimport {\n  useCalendar,\n  useTime,\n  useGlobalProps,\n  useCalendarEvents,\n  useCalendarSources,\n  useModeFilter,\n} from '@/composables';\nimport {\n  capitalize,\n  removeObjectProps,\n  isoDateWithoutTime,\n  cloneObject,\n  getObjChangedProps,\n  isArrayEmpty,\n  isArrayAndHasItems,\n  isUndefined,\n  isObjectEmpty,\n} from '@/utils/functions';\nimport {\n  Byweekday,\n  CalendarCreate,\n  CalendarEvent,\n  CalendarSettings,\n  CalendarWriteShowFor,\n  ChangeSource,\n  EditRecurringType,\n  FilterDeleteEvent,\n  GenerateDateRangeParams,\n  ReturnCalendarEvent,\n  ToggleCalendarVisibilityParams,\n  UpdateEvent,\n} from '@/types/calendar.type';\nimport { notification } from 'ant-design-vue';\nimport {\n  CalendarInstanceSymbol,\n  CalendarSettingsSymbol,\n  CalendarCurrentDataSymbol,\n} from '@/utils/symbols';\nimport { calendarService } from '@/services';\nimport { calendarHelper, dateHelper } from '@/helpers';\nimport { AntNotificationType } from '@/types/ant-design.type';\nimport { FORMAT_EVENT, UNAUTHORIZED_ERROR } from '@/utils/constants';\nimport { EventFrequency, Permission } from '@/utils/enums/global.enum';\nimport { eventApiDateToEventZone } from '@/helpers/date.helper';\nimport { FetchEventsMap } from '@/types/services.type';\n\nexport default defineComponent({\n  components: {\n    CalendarToolbar,\n    CalendarEventForm,\n    CalendarForm,\n    CalendarModalEventInfo,\n  },\n  setup() {\n    let calendar = {} as Calendar;\n    provide(CalendarInstanceSymbol, calendar);\n\n    const { isModeFilter, getFilteredEvents, globalFilter } = useModeFilter();\n\n    const {\n      getRecurrenceChildren,\n      getChildrenDataToUpdate,\n      getEventFromSource,\n      splitExdate,\n      regenerateByweekday,\n      renewLocalEvent,\n    } = useCalendarEvents();\n\n    const {\n      isSourceDisplayed,\n      getSourceById,\n      sourcesToRender,\n      isCalendarOwn,\n      addNewEventInSource,\n      deleteEventInSource,\n    } = useCalendarSources();\n\n    const {\n      sources,\n      permission,\n      setCalendarInstance,\n      setDataOfCurrentEvent,\n      setActiveDateRange,\n      setCurrentCalendarId,\n      setOldRecurringPosition,\n      addNewCalendarSource,\n      getCurrentFullEvent,\n      getEventDate,\n      getActiveDatesRange,\n      selectedSource,\n      defaultSource,\n      isRecurringEvent,\n      isChildEvent,\n      currentData,\n      currentEventApi,\n    } = useCalendar();\n\n    const { isLoading, setLoading, setAwaitLoading, awaitLoading } = useGlobalProps();\n\n    const refFormEvent = ref();\n    const eventToForm = ref<CalendarEvent | null>(null);\n\n    const state = reactive({\n      recurrenceLabel: '',\n      eventDateLabel: '',\n      newEventRange: { start: '', end: '' },\n    });\n\n    const settings: CalendarSettings = reactive({\n      timezone: moment.tz.guess(),\n    });\n\n    const { time, setTimezone, timezoneLabel } = useTime(settings.timezone);\n\n    const modal = reactive({\n      visible: false,\n      type: 'create' as 'create' | 'edit',\n      calendar: false,\n      /** Modal information visible */\n      info: false,\n      recurrence: false,\n      moveRecurrence: false,\n    });\n\n    const editRecurringType = ref<EditRecurringType>('current');\n    /** Know where the current action is running from **/\n    const eventAction = ref<'modal' | 'dragAndDrop' | 'resize'>('modal');\n\n    const showRecurrenceSelect = computed(() => {\n      if (isChildEvent.value) {\n        return false;\n      }\n\n      if (modal.type === 'create' || !isRecurringEvent.value) {\n        return true;\n      }\n\n      return editRecurringType.value !== 'current';\n    });\n\n    const modalActionTitle = computed(() => {\n      return `${capitalize(modal.type)} ${isRecurringEvent.value ? 'Recurring' : ''} Event`;\n    });\n\n    const formatEventDates = (oldTimezone?: string) => {\n      const events = calendar.getEvents();\n\n      for (const event of events) {\n        /* Without old timezone and calendar timezone is equals to calendar's */\n        const keepCurrentDate = !oldTimezone && settings.timezone === event.extendedProps.timezone;\n\n        if (event.allDay || keepCurrentDate) {\n          continue;\n        }\n\n        // Convert event date to old timezone selected or a his own's\n        const start = moment.tz(event.startStr, oldTimezone || event.extendedProps.timezone);\n        const end = moment.tz(event.endStr, oldTimezone || event.extendedProps.timezone);\n\n        // Convert date to new timezone selected and update event date\n        event.setStart(time(start).format(FORMAT_EVENT));\n        event.setEnd(time(end).format(FORMAT_EVENT));\n      }\n    };\n\n    const getVisibleRange = (calendars: FetchEventsMap[]) => {\n      let foreverEvent = false;\n      const events = calendars.map(calendar => calendar.events).flat();\n\n      const range = events.reduce(\n        (range, current) => {\n          const start = current.start || current.rrule!.dtstart!;\n          const end = current.end || current.rrule!.until!;\n\n          if (!range.start && !range.end) {\n            if (events.length === 1) {\n              foreverEvent = !end && !foreverEvent;\n            }\n\n            return { start, end };\n          }\n\n          if (!end && !foreverEvent) {\n            foreverEvent = true;\n          }\n\n          const temp: any = {};\n\n          if (new Date(start) < new Date(range.start)) {\n            temp.start = start;\n          }\n\n          if (end && range.end && new Date(end) > new Date(range.end)) {\n            temp.end = end;\n          }\n\n          return { ...range, ...temp };\n        },\n        { start: '', end: '' },\n      );\n\n      if (foreverEvent) {\n        range.end = moment(range.end || new Date())\n          .add(13, 'months')\n          .toISOString();\n      }\n\n      range.start = moment(range.start).subtract(10, 'days').toISOString();\n      range.end = moment(range.end).add(10, 'days').toISOString();\n\n      return range;\n    };\n\n    const fetchEvents = async () => {\n      try {\n        let results: FetchEventsMap[];\n        const isFilter = isModeFilter.value && calendar.view.type === 'filter';\n        let filterFrom: 'backend' | 'local' = 'backend';\n\n        if (isFilter) {\n          calendar.removeAllEvents();\n\n          const { from, sourceEvents } = await getFilteredEvents(sources.value);\n          filterFrom = from as 'backend' | 'local';\n\n          const visibleRange = getVisibleRange(sourceEvents);\n          calendar.setOption('visibleRange', visibleRange);\n\n          results = sourceEvents;\n        } else {\n          const { start, end } = getActiveDatesRange();\n\n          results = await calendarService.getEvents({ start, end }, globalFilter.value);\n        }\n\n        calendar.batchRendering(() => {\n          for (const result of results) {\n            const index = sources.value.findIndex(source => source.id === result.id);\n\n            if (index === -1) {\n              throw new Error(`Calendar with the ID \"${result.id}\" was not found`);\n            }\n\n            const source = sources.value[index];\n\n            if (!isFilter || filterFrom === 'backend') {\n              source.events = result.events;\n            }\n\n            if (source.show || isFilter) {\n              const calendarSource = calendar.getEventSourceById(result.id)!;\n\n              if (!calendarSource) {\n                calendar.addEventSource({ ...source, events: result.fullCalendarEvents } as any);\n              } else {\n                calendarSource.remove();\n                calendar.addEventSource({ ...source, events: result.fullCalendarEvents } as any);\n              }\n            }\n          }\n\n          formatEventDates();\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    watch(awaitLoading, (val, oldVal) => {\n      // Stop loading\n      if (!val && oldVal) {\n        setLoading(false);\n      }\n    });\n\n    watch(\n      () => currentData.activeDateRange,\n      activeDateRange => {\n        const hasActiveDateRange = 'start' in activeDateRange;\n\n        hasActiveDateRange && fetchEvents();\n      },\n    );\n\n    const showAlert = (message: string, type: AntNotificationType = 'success') => {\n      notification[type]({\n        message: message,\n        placement: 'bottomRight',\n      });\n    };\n\n    // Update timezone\n    watch(\n      () => settings.timezone,\n      (timezone, oldTimezone) => {\n        setTimezone(timezone);\n        calendar.setOption('timeZone', timezone);\n\n        calendar.batchRendering(() => formatEventDates(oldTimezone));\n\n        showAlert(`Timezone changed to ${timezoneLabel.value}`, 'info');\n      },\n    );\n\n    /** Hide item \"Current\" */\n    const hideCurrentItem = computed(() => {\n      if (!isRecurringEvent.value) {\n        return false;\n      }\n\n      const currentEvent = getCurrentFullEvent();\n\n      // Forever event\n      if (!currentEvent.rrule!.until) {\n        return false;\n      }\n\n      let until = '';\n\n      if (currentEvent.allDay) {\n        until = isoDateWithoutTime(currentEvent.rrule!.until);\n      } else {\n        until = calendarHelper.subtractDate({\n          date: currentEvent.rrule!.until,\n          duration: currentEvent.duration!,\n          allDay: currentEvent.allDay,\n        });\n      }\n\n      if (moment.utc(until).isSame(moment.utc(currentEvent.rrule!.dtstart))) {\n        return true;\n      }\n\n      if (!isUndefined(currentEvent.rrule!.count) && currentEvent.rrule!.count === 1) {\n        return true;\n      }\n\n      const dates = calendarHelper.getRuleMatches({ recurringEvent: currentEvent });\n      return dates.length === 1;\n    });\n\n    const generateDateRange = ({ date, rrule, field }: GenerateDateRangeParams) => {\n      // Base range\n      const between = {\n        start: date,\n        end: date,\n      };\n\n      // Get method according field\n      const methods = {\n        start: 'subtract',\n        end: 'add',\n      };\n\n      // Get invert field\n      const invertField = {\n        start: 'end',\n        end: 'start',\n      };\n\n      // Get moment unit according to event frequency\n      const frequency: any = {\n        [EventFrequency['Daily']]: 'days',\n        [EventFrequency['Weekly']]: 'weeks',\n        [EventFrequency['Monthly']]: 'months',\n        [EventFrequency['Yearly']]: 'years',\n      };\n\n      // Example: field = start\n\n      // end\n      const invert = invertField[field] as 'start' | 'end';\n      // subtract\n      const method = methods[field] as 'add' | 'subtract';\n\n      // between.start\n      between[field] = moment\n        // between.end\n        .utc(between[invert])\n        // subtract                   // days | weeks | mponths | years\n        [method](rrule!.interval * 2, frequency[rrule!.freq])\n        .toISOString();\n\n      return between;\n    };\n\n    /** Hide item \"This and following events\" **/\n    const hideFollowingCheckItem = computed(() => {\n      if (!currentData || !currentData.oldRecurringPosition || !isRecurringEvent.value) {\n        return false;\n      }\n\n      const currentEvent = getCurrentFullEvent();\n      const range = { ...currentData.oldRecurringPosition! };\n\n      const rrule = currentEvent.rrule!;\n      const recurrenceStart = moment.utc(rrule!.dtstart);\n\n      // Current selected event date is the first\n      if (recurrenceStart.isSame(range.start)) {\n        return true;\n      }\n\n      let betweenDates = generateDateRange({\n        date: recurrenceStart.toISOString(),\n        rrule,\n        field: 'end',\n      });\n\n      // Start: deep validation\n      if (calendarHelper.isFirstEventOfRecurrence(range.start, betweenDates, currentEvent)) {\n        return true;\n      }\n\n      // Wihout finish date, skip\n      if (!rrule!.until) {\n        return false;\n      }\n\n      if (currentData.event!.allDay) {\n        range.end = time(range.end).subtract(1, 'days').toISOString();\n      }\n\n      // Current selected event date is the end\n      if (moment.utc(rrule!.until).isSame(range.end)) {\n        return true;\n      }\n\n      betweenDates = generateDateRange({\n        date: moment.utc(rrule!.until).toISOString(),\n        rrule,\n        field: 'start',\n      });\n\n      // End: deep validation\n      return calendarHelper.isLastEventOfRecurrence(range.start, betweenDates, currentEvent);\n    });\n\n    // ----- Calendar events -----\n    const onEventClick = (e: EventApi) => {\n      setDataOfCurrentEvent(e);\n      eventAction.value = 'modal';\n\n      setOldRecurringPosition(getEventOldPosition(e));\n      modal.info = true;\n\n      // Select item according disponibility\n      nextTick(() => {\n        if (isRecurringEvent.value) {\n          if (!hideCurrentItem.value) {\n            editRecurringType.value = 'current';\n          } else if (!hideFollowingCheckItem.value) {\n            editRecurringType.value = 'following';\n          } else {\n            editRecurringType.value = 'all';\n          }\n        }\n      });\n    };\n\n    const addEventToView = (event: CalendarEvent) => {\n      // If the source is displayed\n      if (isSourceDisplayed(event.calendarId)) {\n        // Add, doesn't exists\n        calendar.addEvent(event as any, event.calendarId);\n      }\n    };\n\n    const updateEventsTimeInView = (events: EventApi[]) => {\n      events.forEach(event => {\n        // Convert event date to old timezone selected or a his own's\n        const start = moment.tz(event.startStr, event.extendedProps.timezone);\n\n        const end = moment.tz(event.endStr, event.extendedProps.timezone);\n\n        // Convert date to new timezone selected and update event date\n        event.setStart(time(start).format(FORMAT_EVENT));\n        event.setEnd(time(end).format(FORMAT_EVENT));\n      });\n    };\n\n    const refreshEventsInView = (...events: CalendarEvent[]) => {\n      calendar.batchRendering(() => {\n        events.forEach(event => {\n          const eventUI = calendar.getEventById(event.id);\n\n          // Exists, remove and replace\n          !!eventUI && eventUI.remove();\n          addEventToView(event);\n        });\n\n        // Update time\n        const eventsUI = calendar.getEvents().filter(event => {\n          const needUpdate = events.some(item => item.id === event.id);\n          const isSameTimezone = event.extendedProps.timezone === settings.timezone;\n\n          return !event.allDay && !isSameTimezone && needUpdate;\n        });\n\n        updateEventsTimeInView(eventsUI);\n      });\n    };\n\n    /** Get previous event end date in the current recurrence according to event selected */\n    const getPrevEventEndDate = () => {\n      const activeRange = getActiveDatesRange();\n      const dates = currentData.oldRecurringPosition!;\n\n      const currentEvent = getCurrentFullEvent();\n\n      const between = {\n        start: activeRange.start,\n        // Set invalid date to get the last allowed date in recurrence\n        end: moment.utc(dates.start).subtract(1, 'days').toISOString(),\n      };\n\n      // Subtract time according to event interval and frequency\n      switch (currentEvent.rrule!.freq) {\n        case 'DAILY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'days')\n            .toISOString();\n          break;\n\n        case 'WEEKLY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'weeks')\n            .toISOString();\n          break;\n\n        case 'MONTHLY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'months')\n            .toISOString();\n          break;\n\n        default:\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'years')\n            .toISOString();\n          break;\n      }\n\n      const matches = calendarHelper.getRuleMatches({\n        recurringEvent: currentData!.event!,\n        betweenDates: between,\n        exclude: false,\n      });\n\n      let until = matches[matches.length - 1];\n\n      if (currentData.event!.allDay) {\n        until = isoDateWithoutTime(until);\n      } else {\n        until = calendarHelper.updateDateFromDuration({\n          date: until,\n          duration: currentData.event!.duration!,\n          allDay: false,\n        });\n      }\n\n      return until;\n    };\n\n    const getCalendarsToRefeatch = (eventCalendarId: string) => {\n      const calendarIds = [currentData.event.calendarId!];\n      let oldCalendarId: string | undefined = undefined;\n\n      // Move event to another source\n      if (!isCurrentCalendarId(eventCalendarId)) {\n        calendarIds.push(eventCalendarId);\n\n        oldCalendarId = currentData.event.calendarId!;\n      }\n\n      return { calendarIds, oldCalendarId };\n    };\n\n    /** Cut recurrence via modal or drag and drop */\n    const cutRecurrence = async (data?: CalendarEvent) => {\n      const isEditViaModal = !!data;\n      const currentEvent = removeObjectProps<CalendarEvent>(\n        getCurrentFullEvent(),\n        'createdBy',\n        'calendarContext',\n      );\n      const newEvent =\n        data || removeObjectProps(getCurrentFullEvent(), 'id', 'createdBy', 'calendarContext')!;\n\n      const prevEventEnd = getPrevEventEndDate();\n      let newCount = undefined as undefined | number;\n\n      let { until } = { ...currentEvent.rrule };\n      currentEvent.rrule!.until = prevEventEnd;\n\n      // Current event ends by \"count\" field, recalc\n      if (!isUndefined(currentEvent.rrule!.count)) {\n        const dates = calendarHelper.getRuleMatches({\n          recurringEvent: {\n            ...currentEvent,\n            rrule: { ...currentEvent.rrule!, count: undefined },\n          },\n          exclude: false,\n        });\n\n        newCount = currentEvent.rrule!.count! - dates.length;\n        // Assing new \"count\" to old current recurrence\n        currentEvent.rrule!.count = dates.length;\n      }\n\n      const currentEventStartDate = eventApiDateToEventZone(\n        currentEventApi.value.startStr,\n        newEvent.timezone,\n      );\n\n      // Distance between old and new position\n      const distance = calendarHelper.generateEventDuration(\n        currentData.oldRecurringPosition!.start,\n        currentEventStartDate,\n      );\n\n      let splitDate = '';\n\n      if (!currentEvent.allDay) {\n        splitDate = calendarHelper.subtractDate({\n          date: prevEventEnd,\n          duration: currentEvent.duration!,\n          allDay: false,\n        });\n      } else {\n        splitDate = moment.utc(prevEventEnd).toISOString();\n      }\n\n      // manage exdate property\n      if (isArrayAndHasItems(currentEvent.exdate)) {\n        const exdate = splitExdate(currentEvent.exdate!, splitDate);\n\n        currentEvent.exdate = exdate.current;\n        newEvent.exdate = exdate.new;\n      }\n\n      const isEventMoved = distance.daysDiff !== 0;\n      const hasByweekday = isArrayAndHasItems(currentEvent.rrule!.byweekday);\n\n      // Date changes, update \"byweekday\"\n      if (!isEditViaModal && isEventMoved && hasByweekday) {\n        newEvent.rrule!.byweekday = regenerateByweekday({\n          currentByweekday: newEvent.rrule!.byweekday! as Byweekday[],\n          daysDiff: distance.daysDiff,\n          freq: newEvent.rrule!.freq,\n          eventSelectedDate: currentEventApi.value.startStr,\n        });\n      }\n\n      // Via mouse actions\n      if (!isEditViaModal) {\n        newEvent.rrule!.dtstart = newEvent.allDay\n          ? currentEventApi.value.startStr\n          : time(currentEventApi.value.startStr).toISOString();\n\n        // Has \"count\" field\n        if (newCount) {\n          newEvent.rrule!.count = newCount;\n          const dates = calendarHelper.getRuleMatches({ recurringEvent: newEvent, exclude: false });\n\n          let untilByCount = calendarHelper.formatEventDayByAllDay(\n            dates[dates.length - 1],\n            newEvent.allDay,\n          );\n\n          untilByCount = calendarHelper.updateDateFromDuration({\n            date: untilByCount,\n            duration: newEvent.duration!,\n            allDay: newEvent.allDay,\n          });\n\n          // Assign and format \"until\", required for backend filtering\n          newEvent.rrule!.until = untilByCount;\n        } else if (until) {\n          // Finish with \"until\" field, update according to moved days\n          until = calendarHelper.updateDateFromDuration({\n            date: until,\n            duration: removeObjectProps(distance, 'daysDiff'),\n            allDay: newEvent.allDay,\n          });\n\n          newEvent.rrule!.until = calendarHelper.formatEventDayByAllDay(until, newEvent.allDay);\n        }\n      }\n\n      let childrenToUpdate = [] as UpdateEvent[];\n      let children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n\n      // Children to new recurrence\n      if (!isArrayEmpty(children)) {\n        // children = children.filter(child => moment(child.start).isSameOrAfter(splitDate));\n        children = children.filter(child => moment.utc(child.start!).isAfter(splitDate));\n      }\n\n      // Data to update of children\n      if (isEditViaModal && !isArrayEmpty(children)) {\n        // Manage children\n        childrenToUpdate = getChildrenDataToUpdate({ currentEvent, newEvent, children });\n      }\n\n      try {\n        newEvent.createdBy && delete (newEvent as any).createdBy;\n\n        const [[currentEventBackend], newEventBackend] = await Promise.all([\n          // Update current recurrence\n          calendarService.updateEvents({\n            filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n            newData: getCurrentEventChanges(currentEvent),\n          }),\n          // Create new recurrence\n          calendarService.createEvent(newEvent),\n        ]);\n\n        const eventsToLocalUpdate = [currentEventBackend.localEvent];\n\n        const fullCalendarEvents = [\n          currentEventBackend.fullCalendarEvent,\n          newEventBackend.fullCalendarEvent,\n        ];\n\n        // Update children events\n        if (!isArrayEmpty(children)) {\n          // Add new \"parentId\" to generated data for update (via modal)\n          if (!isArrayEmpty(childrenToUpdate)) {\n            childrenToUpdate = childrenToUpdate.map(child => ({\n              ...child,\n              newData: { ...child.newData, parentId: newEventBackend.localEvent.id },\n            }));\n          } else {\n            // Generate data for update (via modal (without apply changes) or drag and dropd)\n            childrenToUpdate = children.map(child => ({\n              filter: { id: child.id, calendarId: child.calendarId },\n              newData: { parentId: newEventBackend.localEvent.id },\n            }));\n          }\n\n          const childrenBackend = await calendarService.updateEvents(...childrenToUpdate);\n\n          childrenBackend.forEach(item => {\n            eventsToLocalUpdate.push(item.localEvent);\n            fullCalendarEvents.push(item.fullCalendarEvent);\n          });\n        }\n\n        const { oldCalendarId } = getCalendarsToRefeatch(newEventBackend.localEvent.calendarId);\n\n        // Update events locally\n        eventsToLocalUpdate.forEach(eventToUpdate => renewLocalEvent(eventToUpdate, oldCalendarId));\n        // Add new recurrence\n        // addLocalEvent(newEventBackend.localEvent);\n        addNewEventInSource(newEventBackend.localEvent);\n\n        if (!isSourceDisplayed(newEventBackend.localEvent.calendarId)) {\n          await onChangeCalendarVisibility({\n            calendarId: newEventBackend.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        refreshEventsInView(...fullCalendarEvents);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const isCurrentCalendarId = (calendarId: string) => {\n      if (currentData.event.calendarId === undefined) {\n        return false;\n      }\n\n      return currentData.event.calendarId === calendarId;\n    };\n\n    const manageUnauthorizedError = (errors: any[]) => {\n      const hasUnauthorizedError = errors.some(error => {\n        return error.message && error.message.includes(UNAUTHORIZED_ERROR);\n      });\n\n      if (hasUnauthorizedError) {\n        showAlert(`You don't have permission for this action`, 'warning');\n      }\n\n      return { hasUnauthorizedError };\n    };\n\n    const updateVisibleRangeOnFilterView = async () => {\n      // update filter view range\n      if (isModeFilter.value && calendar.view.type === 'filter') {\n        const { sourceEvents } = await getFilteredEvents(sources.value);\n\n        const visibleRange = getVisibleRange(sourceEvents);\n        calendar.setOption('visibleRange', visibleRange);\n      }\n    };\n\n    const writeEvent = async () => {\n      try {\n        await refFormEvent.value.validateForm();\n        const _event = refFormEvent.value.getEvent();\n\n        setAwaitLoading(true);\n        if (modal.type === 'edit') {\n          return await handleUpdateEventFromModal(_event);\n        }\n\n        const newEvent = await calendarService.createEvent(_event);\n\n        if (isSourceDisplayed(newEvent.localEvent.calendarId)) {\n          // addLocalEvent(newEvent.localEvent);\n          addNewEventInSource(newEvent.localEvent);\n\n          // update filter view range\n          updateVisibleRangeOnFilterView();\n\n          if (newEvent.localEvent.allDay) {\n            addEventToView(newEvent.fullCalendarEvent);\n          } else {\n            // Add and update the time if is necessary (timezone not equals to global)\n            refreshEventsInView(newEvent.fullCalendarEvent);\n          }\n        } else {\n          // Hidden source, display and fetch events\n          await onChangeCalendarVisibility({\n            calendarId: newEvent.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        if (isModeFilter.value && calendar.view.type === 'filter') {\n          fetchEvents();\n        }\n\n        showAlert('Event created!');\n        modal.visible = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        Array.isArray(error) && manageUnauthorizedError(error);\n      } finally {\n        setAwaitLoading(false);\n      }\n    };\n\n    /** Select date (or range) to create new event */\n    const onSelect = (args: DateSelectArg) => {\n      eventAction.value = 'modal';\n      setCurrentCalendarId(defaultSource.value.id);\n      state.newEventRange = { start: args.startStr, end: args.endStr };\n\n      modal.type = 'create';\n      modal.visible = true;\n    };\n\n    /** Click on custom button \"New Event\" */\n    const onNewEventFromCustomButton = () => {\n      modal.type = 'create';\n      const today = moment();\n\n      state.newEventRange = {\n        start: today.toISOString(),\n        end: today.clone().add(1, 'days').toISOString(),\n      };\n\n      modal.visible = true;\n      refFormEvent.value && refFormEvent.value.clearValidate();\n    };\n\n    const onConfirmEditEvent = () => {\n      eventToForm.value = getCurrentFullEvent();\n\n      // Cut recurrence\n      if (isRecurringEvent.value && editRecurringType.value === 'following') {\n        const temptEvent = getCurrentFullEvent();\n\n        if (typeof temptEvent.rrule!.count !== 'undefined') {\n          const end = getPrevEventEndDate();\n\n          temptEvent.rrule!.until = end;\n          const dates = calendarHelper.getRuleDates({\n            ...temptEvent,\n            rrule: { ...temptEvent.rrule!, count: undefined },\n          });\n\n          const count = temptEvent.rrule!.count - dates.length;\n\n          eventToForm.value.rrule!.count = count;\n          eventToForm.value.rrule!.dtstart = currentEventApi.value.startStr;\n        }\n      }\n\n      modal.info = false;\n      modal.type = 'edit';\n      modal.visible = true;\n    };\n\n    /** Hook of create/edit modal */\n    const onAfterCloseModal = () => {\n      editRecurringType.value = 'current';\n    };\n\n    const onClickDeleteEvent = () => {\n      editRecurringType.value = 'current';\n    };\n\n    /** Remove normal event */\n    const deleteEvent = async () => {\n      const { id, calendarId } = getCurrentFullEvent();\n\n      try {\n        // Remove in backend\n        await calendarService.deleteEvents({\n          field: 'id',\n          value: id,\n          calendarId,\n        });\n\n        // Remove in local data\n        // deleteLocalEvent(id, calendarId);\n        deleteEventInSource(id, calendarId);\n        // Remove from view\n        calendar.getEventById(id)?.remove();\n\n        showAlert('Event removed!');\n        modal.info = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteEventFromRecurrence = async () => {\n      const currentEvent = getCurrentFullEvent();\n      const { start } = currentData.oldRecurringPosition!;\n\n      const exdate = [...(currentEvent.exdate || []), start];\n\n      try {\n        const [updated] = await calendarService.updateEvents({\n          filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n          newData: { exdate },\n        });\n\n        renewLocalEvent(updated.localEvent);\n        refreshEventsInView(updated.fullCalendarEvent);\n\n        showAlert('Event updated!');\n\n        modal.info = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteThisAndFollowingEvents = async () => {\n      const currentEvent = getCurrentFullEvent();\n      const end = getPrevEventEndDate();\n\n      currentEvent.rrule!.until = end;\n\n      // Current event ends by \"count\" field, recalc\n      if (!isUndefined(currentEvent.rrule!.count)) {\n        const dates = calendarHelper.getRuleMatches({\n          recurringEvent: { ...currentEvent, rrule: { ...currentEvent.rrule!, count: undefined } },\n          exclude: false,\n        });\n\n        // Assing new \"count\" to old current recurrence\n        currentEvent.rrule!.count = dates.length;\n      }\n\n      let splitDate = '';\n\n      if (!currentEvent.allDay) {\n        splitDate = calendarHelper.subtractDate({\n          date: end,\n          duration: currentEvent.duration!,\n          allDay: false,\n        });\n      } else {\n        splitDate = moment.utc(end).toISOString();\n      }\n\n      // Manage \"exdate\" property\n      if (isArrayAndHasItems(currentEvent.exdate!)) {\n        const ex = splitExdate(currentEvent.exdate!, splitDate);\n\n        currentEvent.exdate = ex.current;\n      }\n\n      let children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n\n      // Get children to delete\n      if (!isArrayEmpty(children)) {\n        children = children.filter(child => moment.utc(child.start!).isAfter(splitDate));\n      }\n\n      try {\n        const promises: [Promise<ReturnCalendarEvent[]>, Promise<CalendarEvent[]>] = [] as any;\n\n        promises.push(\n          calendarService.updateEvents({\n            filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n            newData: { exdate: currentEvent.exdate!, rrule: currentEvent.rrule! },\n          }),\n        );\n\n        // Remove children\n        if (!isArrayEmpty(children)) {\n          // Add request\n          promises.push(\n            // Generate data for children deleting\n            calendarService.deleteEvents(\n              ...children.map(child => {\n                return {\n                  field: 'id',\n                  value: child.id,\n                  calendarId: child.calendarId,\n                } as FilterDeleteEvent;\n              }),\n            ),\n          );\n        }\n\n        const [[updated], childrenDeleted] = await Promise.all(promises);\n\n        renewLocalEvent(updated.localEvent);\n        refreshEventsInView(updated.fullCalendarEvent);\n\n        if (childrenDeleted) {\n          const { source } = getSourceById(currentEvent.calendarId);\n          // Remove events of local and UI\n          calendar.batchRendering(() => {\n            childrenDeleted.forEach(deletedEvent => {\n              // UI\n              calendar.getEventById(deletedEvent.id)?.remove();\n              // Local\n              deleteEventInSource(deletedEvent.id, source.id);\n            });\n          });\n        }\n\n        modal.info = false;\n        showAlert('Event removed!');\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteAllEvents = async () => {\n      const event = getCurrentFullEvent();\n\n      const toDelete: FilterDeleteEvent[] = [\n        { field: 'id', value: event.id, calendarId: event.calendarId },\n      ];\n\n      const children = getRecurrenceChildren(event.calendarId, event.id);\n\n      if (children.length) {\n        // Remove children\n        toDelete.unshift({\n          field: 'parentId',\n          value: event.id,\n          calendarId: event.calendarId,\n        });\n      }\n\n      try {\n        const { source } = getSourceById(event.calendarId);\n        const deletedEvents = await calendarService.deleteEvents(...toDelete);\n\n        // Remove events of local and UI\n        calendar.batchRendering(() => {\n          deletedEvents.forEach(deletedEvent => {\n            // UI\n            calendar.getEventById(deletedEvent.id)?.remove();\n            // Local\n            deleteEventInSource(deletedEvent.id, source.id);\n          });\n        });\n\n        modal.info = false;\n        showAlert(`${children.length ? 'Events' : 'Event'} removed!`);\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const handleDeleteEvents = async () => {\n      // Remove normal event\n      if (!isRecurringEvent.value) {\n        return deleteEvent();\n      }\n\n      // Remove only event selected of recurrence\n      if (editRecurringType.value === 'current') {\n        return deleteEventFromRecurrence();\n      }\n\n      // Remove this and following events\n      switch (editRecurringType.value) {\n        case 'following':\n          await deleteThisAndFollowingEvents();\n          break;\n\n        default:\n          // Remove all events\n          await deleteAllEvents();\n          break;\n      }\n    };\n\n    /** Split event from recurrence via modal or drag and drop */\n    const splitEventFromRecurrence = async (data?: CalendarEvent) => {\n      // Split from mouse events, drag and drop\n      if (!data) {\n        data = removeObjectProps<CalendarEvent>(\n          getCurrentFullEvent(),\n          'id',\n          'duration',\n          'rrule',\n          'exdate',\n          'createdBy',\n          'calendarContext',\n        );\n\n        /** Current dates range */\n        const { start, end } = getEventDate();\n\n        data.start = start;\n        data.end = end;\n      }\n\n      const parent = cloneObject(currentData.event);\n      const oldPosition = time(currentData.oldRecurringPosition!.start).toISOString();\n\n      // Exclude from parent\n      parent.exdate = [...parent.exdate!, oldPosition];\n\n      const { oldCalendarId } = getCalendarsToRefeatch(data.calendarId);\n\n      if (!oldCalendarId) {\n        // Assign parent\n        data.parentId = parent.id;\n      }\n\n      try {\n        // Update recurring event and create a new child in backend.\n        const [[parentUpdated], newChildEvent] = await Promise.all([\n          calendarService.updateEvents({\n            filter: { id: parent.id, calendarId: parent.calendarId },\n            newData: { exdate: parent.exdate },\n          }),\n          calendarService.createEvent(data),\n        ]);\n\n        addNewEventInSource(newChildEvent.localEvent);\n        renewLocalEvent(parentUpdated.localEvent, oldCalendarId);\n        refreshEventsInView(parentUpdated.fullCalendarEvent);\n\n        if (isSourceDisplayed(newChildEvent.localEvent.calendarId)) {\n          refreshEventsInView(newChildEvent.fullCalendarEvent);\n        } else {\n          // Hidden source, display and fetch events\n          await onChangeCalendarVisibility({\n            calendarId: newChildEvent.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        showAlert('Event updated!');\n\n        modal.visible = false;\n\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const getCurrentEventChanges = (newEventData: CalendarEvent) => {\n      let compareData = cloneObject(newEventData);\n\n      const currentEvent = removeObjectProps<CalendarEvent>(\n        getCurrentFullEvent(),\n        'createdBy',\n        'calendarContext',\n      );\n\n      if (compareData.description === null && currentEvent.description === undefined) {\n        (currentEvent as any).description = null;\n      }\n\n      // Quit color\n      if (currentEvent.color && isUndefined(compareData.color)) {\n        (compareData.color as any) = null;\n      }\n\n      if (isUndefined(currentEvent.location)) {\n        (currentEvent.location as any) = null;\n      }\n\n      if (isUndefined(currentEvent.attendees)) {\n        (currentEvent.attendees as any) = null;\n      }\n\n      return getObjChangedProps<CalendarEvent>(currentEvent, compareData);\n    };\n\n    /** Update events from modal */\n    const handleUpdateEventFromModal = async (data: CalendarEvent) => {\n      // Edit normal event\n      if (!isRecurringEvent.value) {\n        try {\n          let oldCalendarId = undefined as string | undefined;\n\n          if (data.calendarId !== currentData.event.calendarId) {\n            oldCalendarId = currentData.event.calendarId!;\n\n            data.parentId && ((data as any).parentId = null);\n          }\n\n          const changes = getCurrentEventChanges(data);\n\n          if (isObjectEmpty(changes)) {\n            return showAlert('Please apply any change to current event before', 'warning');\n          }\n\n          const [newData] = await calendarService.updateEvents({\n            filter: { id: data.id, calendarId: currentData.event.calendarId },\n            newData: changes,\n          });\n\n          if (isSourceDisplayed(newData.localEvent.calendarId)) {\n            renewLocalEvent(newData.localEvent, oldCalendarId);\n\n            // update filter view range\n            updateVisibleRangeOnFilterView();\n\n            refreshEventsInView(newData.fullCalendarEvent);\n          } else {\n            calendar.getEventById(data.id)?.remove();\n            // Hidden source, display and fetch events\n            await onChangeCalendarVisibility({\n              calendarId: newData.localEvent.calendarId,\n              checked: true,\n            });\n          }\n\n          showAlert('Event updated!');\n\n          modal.visible = false;\n        } catch (error: any) {\n          console.error(error);\n\n          manageUnauthorizedError(error);\n        }\n\n        return;\n      }\n\n      // Split event from recurrence\n      if (editRecurringType.value === 'current') {\n        return splitEventFromRecurrence({ ...data });\n      }\n\n      // Cut current recurrence\n      if (editRecurringType.value === 'following') {\n        return cutRecurrence({ ...data });\n      }\n\n      // ------- Update all recurrence ------\n      const currentEvent = getCurrentFullEvent();\n\n      const newData = getCurrentEventChanges(data);\n\n      if (isObjectEmpty(newData)) {\n        return showAlert('Please apply any change to current event before', 'warning');\n      }\n\n      const { oldCalendarId } = getCalendarsToRefeatch(data.calendarId);\n\n      const children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n      let childrenToUpdate = [] as UpdateEvent[];\n\n      if (isArrayAndHasItems(children)) {\n        childrenToUpdate = getChildrenDataToUpdate({\n          currentEvent,\n          newEvent: data,\n          children,\n        });\n      }\n\n      try {\n        const events = await calendarService.updateEvents(\n          {\n            // Send current calendarId, not new if this is changed\n            filter: { id: data.id, calendarId: currentEvent.calendarId },\n            newData,\n          },\n          ...childrenToUpdate,\n        );\n\n        const fullCalendarEvents: CalendarEvent[] = [];\n\n        events.forEach(event => {\n          renewLocalEvent(event.localEvent, oldCalendarId);\n          fullCalendarEvents.push(event.fullCalendarEvent);\n        });\n\n        // update filter view range\n        updateVisibleRangeOnFilterView();\n\n        refreshEventsInView(...fullCalendarEvents);\n\n        if (!isSourceDisplayed(data.calendarId)) {\n          await onChangeCalendarVisibility({\n            calendarId: data.calendarId,\n            checked: true,\n          });\n        }\n\n        showAlert('Event updated!');\n        modal.visible = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const updateMonthlyByDay = async () => {\n      const newEvent = getCurrentFullEvent();\n\n      const month = calendarHelper.getRecurrenceNewMonth({\n        dateAbsulute: newEvent.rrule!.dtstart,\n        eventOldPosition: currentData.oldRecurringPosition!.start,\n        eventNewPosition: currentEventApi.value.startStr,\n      });\n\n      let currentStart = currentEventApi.value.startStr;\n\n      if (!newEvent.allDay) {\n        const tmpStart = eventApiDateToEventZone(currentStart, newEvent.timezone);\n\n        currentStart = tmpStart.format(FORMAT_EVENT);\n      }\n\n      const position = dateHelper.getDayPositionOfMonth(currentStart);\n\n      const newDtstart = dateHelper.getDateByPositionInMonth({\n        month,\n        year: new Date(newEvent.rrule!.dtstart).getUTCFullYear(),\n        byweekday: position,\n      });\n\n      // Update \"dtstart\" field\n      if (!newEvent.allDay) {\n        // Add time for to correct formating\n        let temp = `${newDtstart.substr(0, 10)}T${currentStart.split('T')[1]}`;\n\n        newEvent.rrule!.dtstart = time(temp, newEvent.timezone).toISOString();\n      } else {\n        newEvent.rrule!.dtstart = moment.utc(newDtstart).format('YYYY-MM-DD');\n      }\n\n      (newEvent.rrule!.byweekday as any) = [position];\n\n      // Has finish\n      if (!isUndefined(newEvent.rrule!.until)) {\n        // Ends by \"count\" field\n        if (!isUndefined(newEvent.rrule?.count)) {\n          const matches = calendarHelper.getRuleMatches({\n            recurringEvent: newEvent,\n            exclude: false,\n          });\n\n          newEvent.rrule!.until = matches[matches.length - 1];\n\n          if (!newEvent.allDay) {\n            newEvent.rrule!.until = calendarHelper.updateDateFromDuration({\n              date: newEvent.rrule!.until!,\n              duration: newEvent.duration!,\n              allDay: newEvent.allDay,\n            });\n          } else {\n            newEvent.rrule!.until = isoDateWithoutTime(newEvent.rrule!.until);\n          }\n        } else {\n          // Ends by \"until\" field\n          const monthU = calendarHelper.getRecurrenceNewMonth({\n            dateAbsulute: newEvent.rrule!.until!,\n            eventOldPosition: currentData.oldRecurringPosition!.start,\n            eventNewPosition: currentEventApi.value.startStr,\n          });\n\n          const newUntil = dateHelper.getDateByPositionInMonth({\n            month: monthU,\n            year: new Date(newEvent.rrule!.until!).getUTCFullYear(),\n            byweekday: position,\n          });\n\n          // Update \"dtstart\" field\n          if (!newEvent.allDay) {\n            // Add time for to correct formating\n            let temp = `${newUntil.substr(0, 10)}T${newEvent.rrule!.until!.split('T')[1]}`;\n\n            newEvent.rrule!.until = time(temp, newEvent.timezone).toISOString();\n          } else {\n            newEvent.rrule!.until = moment.utc(newUntil).format('YYYY-MM-DD');\n          }\n        }\n      }\n\n      try {\n        const [result] = await calendarService.updateEvents({\n          filter: { id: newEvent.id, calendarId: newEvent.calendarId },\n          newData: { rrule: newEvent.rrule },\n        });\n\n        // Update events locally\n        renewLocalEvent(result.localEvent);\n\n        refreshEventsInView(result.fullCalendarEvent);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    /** Update recurring event from resizing and drag and drop */\n    const handleUpdateRecurringMouseActions = async () => {\n      try {\n        console.time('WRITE MOUSE');\n        setAwaitLoading(true);\n        // Split one event of the recurrence\n        if (editRecurringType.value === 'current') {\n          await splitEventFromRecurrence();\n          return;\n        }\n\n        if (editRecurringType.value === 'following') {\n          return await cutRecurrence();\n        }\n\n        // ----- Move all recurrence ----\n        const newEvent = removeObjectProps<CalendarEvent>(getCurrentFullEvent(), 'createdBy');\n\n        // Update monthly by day\n        if (newEvent.rrule!.freq === 'MONTHLY' && isArrayAndHasItems(newEvent.rrule!.byweekday)) {\n          return updateMonthlyByDay();\n        }\n\n        // Rest of cases\n\n        const currentEventStartDate = eventApiDateToEventZone(\n          currentEventApi.value.startStr,\n          newEvent.timezone,\n        );\n\n        // Distance between old and new position\n        const distance = calendarHelper.generateEventDuration(\n          currentData.oldRecurringPosition!.start,\n          currentEventStartDate,\n        );\n\n        // New dtstart\n        newEvent.rrule!.dtstart = calendarHelper.updateDateFromDuration({\n          date: newEvent.rrule!.dtstart,\n          duration: removeObjectProps(distance, 'daysDiff'),\n          allDay: newEvent.allDay,\n        });\n\n        // Update \"byweekday\" field\n        if (isArrayAndHasItems(newEvent.rrule!.byweekday!)) {\n          newEvent.rrule!.byweekday = regenerateByweekday({\n            currentByweekday: newEvent.rrule!.byweekday! as Byweekday[],\n            daysDiff: distance.daysDiff,\n            freq: newEvent.rrule!.freq,\n            eventSelectedDate: currentEventApi.value.startStr,\n          });\n        }\n\n        // Recurring event ends by \"count\" field\n        if (!isUndefined(newEvent.rrule!.count)) {\n          const dates = calendarHelper.getRuleMatches({ recurringEvent: newEvent, exclude: false });\n\n          newEvent.rrule!.until = dates[dates.length - 1];\n        } else if (newEvent.rrule!.until) {\n          // Recurring event ends by \"until\" field\n          newEvent.rrule!.until = calendarHelper.updateDateFromDuration({\n            date: newEvent.rrule!.until,\n            duration: removeObjectProps(distance, 'daysDiff'),\n            allDay: newEvent.allDay,\n          });\n        }\n\n        const [result] = await calendarService.updateEvents({\n          filter: { id: newEvent.id, calendarId: newEvent.calendarId },\n          newData: { rrule: newEvent.rrule },\n        });\n\n        // Update events locally\n        renewLocalEvent(result.localEvent);\n\n        refreshEventsInView(result.fullCalendarEvent);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      } finally {\n        setAwaitLoading(false);\n        console.timeEnd('WRITE MOUSE');\n      }\n    };\n\n    const setCurrentActiveRange = () => {\n      const { start, end } = getActiveDatesRange();\n      let areDatesEquals = false;\n\n      if ('start' in currentData.activeDateRange) {\n        const active = currentData.activeDateRange;\n\n        areDatesEquals =\n          time(start).utc().isSame(active.start) && time(end).utc().isSame(active.end);\n      }\n\n      !areDatesEquals && setActiveDateRange({ start, end });\n    };\n\n    const getEventOldPosition = (event: EventApi) => {\n      if (event.allDay) {\n        return {\n          start: calendarHelper.convertOffsetTimeToUTC(event.startStr),\n          end: calendarHelper.convertOffsetTimeToUTC(event.endStr),\n        };\n      }\n\n      const eventTimezone = event.extendedProps.timezone;\n\n      // Event and calendar with the same timezone\n      if (settings.timezone === eventTimezone) {\n        return {\n          start: time(event.startStr, eventTimezone).toISOString(),\n          end: time(event.endStr, eventTimezone).toISOString(),\n        };\n      }\n\n      return {\n        start: time(event.startStr, settings.timezone).tz(eventTimezone).toISOString(),\n        end: time(event.endStr, settings.timezone).tz(eventTimezone).toISOString(),\n      };\n    };\n\n    /** Revert change of event position */\n    let revertEventChangePosition: () => void;\n\n    /** Manage normal event resizing or moving */\n    const manageEventOnResizeOrMoving = async (event: EventApi, oldEvent: EventApi) => {\n      // It indicates that the event is recurring\n      if (isRecurringEvent.value) {\n        setOldRecurringPosition(getEventOldPosition(oldEvent));\n        modal.moveRecurrence = true;\n        return;\n      }\n\n      // Update normal event\n      try {\n        const [{ localEvent }] = await calendarService.updateEvents({\n          filter: { id: event.id, calendarId: event.extendedProps.calendarId },\n          newData: getEventOldPosition(event),\n        });\n\n        renewLocalEvent(localEvent);\n        showAlert('Event updated!');\n      } catch (error: any) {\n        console.error(error);\n\n        const { hasUnauthorizedError } = manageUnauthorizedError(error);\n\n        if (hasUnauthorizedError) {\n          revertEventChangePosition();\n        }\n      }\n    };\n\n    const onEventResizeStart = (args: EventResizeStartArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        return showAlert('This event is read-only for you', 'warning');\n      }\n\n      const { rrule } = getCurrentFullEvent();\n\n      if (rrule) {\n        return showAlert(\"Recurring events can't be resized\", 'warning');\n      }\n    };\n\n    const onEventResize = async (args: EventResizeDoneArg) => {\n      if (permission.value === Permission.Read || currentData.event.rrule) {\n        args.revert();\n        return;\n      }\n\n      revertEventChangePosition = args.revert;\n      eventAction.value = 'resize';\n\n      manageEventOnResizeOrMoving(args.event, args.oldEvent);\n    };\n\n    const onEventDragStart = (args: EventDragStartArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        return showAlert('This event is read-only for you', 'warning');\n      }\n    };\n\n    const onEventDrop = async (args: EventDropArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        args.revert();\n        return;\n      }\n\n      revertEventChangePosition = args.revert;\n      eventAction.value = 'dragAndDrop';\n\n      manageEventOnResizeOrMoving(args.event, args.oldEvent);\n    };\n\n    const restartRecurringEventPosition = () => {\n      revertEventChangePosition();\n\n      editRecurringType.value = 'current';\n      // Remove temp position data\n      setOldRecurringPosition(null);\n    };\n\n    const calendarFormData = reactive({\n      name: undefined as string | undefined,\n      color: undefined as string | undefined,\n    });\n\n    const onCreateNewCalendar = async () => {\n      if (!calendarFormData.name || !calendarFormData.color) {\n        throw new Error(`Name and color fields are required to create new calendar source`);\n      }\n\n      const newCalendar: CalendarCreate = {\n        ...(calendarFormData as any),\n        isDefault: false,\n      };\n\n      try {\n        const source = await calendarService.createCalendar(newCalendar);\n        // Add source to local data and calendar UI\n        addNewCalendarSource(source);\n      } catch (error: any) {\n        console.error(error);\n      }\n\n      calendarFormData.name = undefined;\n      calendarFormData.color = undefined;\n\n      showAlert('New calendar created!');\n      modal.calendar = false;\n    };\n\n    const onCancelNewCalendar = () => {\n      calendarFormData.name = undefined;\n      calendarFormData.color = undefined;\n    };\n\n    /** Update events color */\n    const onChangeSource = ({ source, oldSource }: ChangeSource) => {\n      if (source.color === oldSource.color) {\n        return;\n      }\n\n      const fullSource = getSourceById(source.id).source;\n\n      // Change events color\n      calendar.batchRendering(() => {\n        // Get only events of changed calendar and without color\n        const events = calendar.getEvents().filter(event => {\n          const belongsToCalendar = event.extendedProps.calendarId === source.id;\n\n          if (!belongsToCalendar) {\n            return false;\n          }\n\n          const fullEvent = getEventFromSource(event.id, fullSource).event;\n          return !fullEvent.color;\n          // return belongsToCalendar && !event.backgroundColor && !event.borderColor;\n        });\n\n        events.forEach(event => {\n          event.setProp('backgroundColor', source.color);\n          event.setProp('borderColor', source.color);\n        });\n      });\n    };\n\n    /** Show/hide calendars */\n    const onChangeCalendarVisibility = async ({\n      calendarId,\n      checked,\n    }: ToggleCalendarVisibilityParams) => {\n      const { source } = getSourceById(calendarId);\n\n      // Hide calendar\n      if (!checked) {\n        // Update in database, not default calendar\n        if (defaultSource.value.id !== calendarId) {\n          try {\n            await calendarService.updateCalendarVisibility(source.context, calendarId, checked);\n          } catch (error: any) {\n            console.error(error);\n          }\n        }\n\n        // Hide and clear local data\n        source.show = false;\n        source.events = [];\n\n        let removed = false;\n\n        while (!removed) {\n          calendar.getEventSourceById(calendarId)?.remove();\n\n          removed = !calendar.getEventSourceById(calendarId);\n        }\n\n        return;\n      }\n\n      source.show = true;\n      source.events = [];\n\n      const { activeDateRange } = currentData;\n\n      const promises: Promise<CalendarWriteShowFor | ReturnCalendarEvent[]>[] = [\n        calendarService.getEventsFromOneCalendar(\n          calendarId,\n          source.context,\n          activeDateRange,\n          globalFilter.value,\n        ),\n      ];\n\n      // Update in database, not default\n      if (defaultSource.value.id !== calendarId) {\n        promises.push(\n          calendarService.updateCalendarVisibility(source.context, calendarId, checked),\n        );\n      }\n\n      try {\n        const [events] = await Promise.all(promises);\n\n        if (!isArrayAndHasItems(events)) {\n          return;\n        }\n\n        const [localEvents, fullCalendarEvents] = (events as ReturnCalendarEvent[]).reduce(\n          (acc, item) => {\n            acc[0].push(item.localEvent);\n            acc[1].push(item.fullCalendarEvent);\n\n            return acc;\n          },\n          [[] as CalendarEvent[], [] as CalendarEvent[]],\n        );\n\n        calendar.batchRendering(() => {\n          calendar.addEventSource({ ...source, events: fullCalendarEvents } as any);\n          source.events.push(...localEvents);\n\n          // Events to update\n          const eventsUI = calendar.getEvents().filter(event => {\n            const needUpdate = settings.timezone !== event.extendedProps.timezone;\n\n            return !event.allDay && needUpdate && event.extendedProps.calendarId === calendarId;\n          });\n\n          if (isArrayEmpty(eventsUI)) {\n            return;\n          }\n\n          updateEventsTimeInView(eventsUI);\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    /** CalendarToolbar component data and events */\n    const calendarToolbar = reactive({\n      viewTitle: '',\n      viewName: '',\n      /** Create new event/calendar from custom button */\n      onCreate(type: 'event' | 'calendar') {\n        if (type === 'event') {\n          return onNewEventFromCustomButton();\n        }\n\n        modal.calendar = true;\n      },\n      /** Change view from \"CalendarToolbar\" component */\n      onChangeView(view: string) {\n        isModeFilter.value && calendar.removeAllEvents();\n\n        calendar.changeView(view);\n        setCurrentActiveRange();\n      },\n      /** Set custom date in calendar */\n      onGotoDate(date: string) {\n        calendar.gotoDate(date);\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n\n        setCurrentActiveRange();\n      },\n      /** Moves the calendar to the current date */\n      onSetToday() {\n        calendar.today();\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n\n        setCurrentActiveRange();\n      },\n      /** Go to next/prev page */\n      async onChangeViewPage(type: 'next' | 'prev') {\n        calendar[type]();\n\n        setCurrentActiveRange();\n\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n      },\n      onFetchEvents: () => fetchEvents(),\n      onChangeCalendarVisibility,\n      onChangeSource,\n    });\n\n    const onCreated = async () => {\n      provide(CalendarSettingsSymbol, settings);\n    };\n\n    onCreated();\n\n    onMounted(async () => {\n      const el = document.getElementById('calendar') as HTMLDivElement;\n\n      calendar = new Calendar(el, {\n        aspectRatio: 19 / 8,\n        plugins: [\n          rrulePlugin,\n          // momentTimezonePlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          listGridPlugin,\n          interactionPlugin,\n        ],\n        views: {\n          filter: { type: 'list' },\n        },\n        initialView: isModeFilter.value ? 'filter' : 'dayGridMonth',\n        timeZone: settings.timezone,\n        headerToolbar: false,\n        editable: true,\n        selectable: true,\n        dayMaxEvents: true, // when too many events in a day, show the popover\n        slotDuration: '00:15:00',\n        allDayText: 'All day',\n        slotLabelFormat: {\n          hour: 'numeric',\n          minute: '2-digit',\n          omitZeroMinute: true,\n          meridiem: 'lowercase',\n        },\n        select: onSelect,\n        eventDragStart: onEventDragStart,\n        eventDrop: onEventDrop,\n        eventResize: onEventResize,\n        eventResizeStart: onEventResizeStart,\n        eventClick: args => onEventClick(args.event),\n        viewClassNames({ view }) {\n          calendarToolbar.viewTitle = view.title;\n          calendarToolbar.viewName = view.type;\n\n          return [];\n        },\n      });\n\n      provide(CalendarInstanceSymbol, calendar);\n      provide(CalendarCurrentDataSymbol, currentData);\n      setCalendarInstance(calendar);\n\n      setCurrentActiveRange();\n      calendar.render();\n\n      // Add displayed sources to Fullcalendar\n      const _sources = [...sourcesToRender.value.own, ...sourcesToRender.value.shared];\n\n      calendar.batchRendering(() => {\n        _sources.forEach(_source => {\n          if (_source.show) {\n            calendar.addEventSource({ ..._source, events: [] });\n          }\n        });\n      });\n    });\n\n    return {\n      isEventSelected: computed(() => !!Object.keys(currentData.event as any).length),\n      isLoading,\n      showRecurrenceSelect,\n      isCalendarOwn,\n      sources,\n      settings,\n      currentData,\n      calendarToolbar,\n      calendarFormData,\n      sourcesToRender,\n      writeEvent,\n      onCreateNewCalendar,\n      onCancelNewCalendar,\n      eventAction,\n      eventToForm,\n      editRecurringType,\n      selectedSource,\n      state,\n      onAfterCloseModal,\n      refFormEvent,\n      modal,\n      modalActionTitle,\n      isRecurringEvent,\n      hideCurrentItem,\n      hideFollowingCheckItem,\n      handleDeleteEvents,\n      onConfirmEditEvent,\n      restartRecurringEventPosition,\n      handleUpdateRecurringMouseActions,\n      onClickDeleteEvent,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.Calendar {\n  a {\n    color: rgba(0, 0, 0, 0.65);\n  }\n}\n\n.radio-vertical {\n  display: block !important;\n  height: 30px;\n  line-height: 30px;\n}\n\n.tags-days-container {\n  .ant-tag {\n    font-weight: 600;\n\n    &:not(.ant-tag-checkable-checked) {\n      background-color: #f1f3f4;\n      color: #80868b;\n    }\n  }\n}\n\n.custom-recurrence {\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 1rem;\n  margin: 0 auto;\n  max-width: 351px;\n  border-radius: 2px;\n}\n</style>\n","<template>\n  <section class=\"CalendarToolbar\">\n    <template v-if=\"!isDisplayInputSearch\">\n      <!-- Next/Prev buttons -->\n      <div class=\"CalendarToolbar__view-info\">\n        <ATooltip v-if=\"!isHideTitle\" :title=\"today\">\n          <AButton @click=\"onSetToday\">Today</AButton>\n        </ATooltip>\n\n        <template v-if=\"!isHideTitle\">\n          <ATooltip :title=\"paginationLabel.prev\">\n            <AButton\n              :disabled=\"isPrevDisabled\"\n              type=\"link\"\n              style=\"padding-right: 0.5rem\"\n              @click=\"onChangeViewPage('prev')\"\n            >\n              <LeftOutlined />\n            </AButton>\n          </ATooltip>\n\n          <ATooltip :title=\"paginationLabel.next\">\n            <AButton\n              :disabled=\"isNextDisabled\"\n              type=\"link\"\n              style=\"padding-left: 0.5rem\"\n              @click=\"onChangeViewPage('next')\"\n            >\n              <RightOutlined />\n            </AButton>\n          </ATooltip>\n        </template>\n\n        <!-- Display calendar view title -->\n        <APopover\n          content=\"Go to custom date\"\n          trigger=\"hover\"\n          :visible=\"popover.hover\"\n          @visibleChange=\"handlePopoverCustomDateChange($event, 'hover')\"\n          overlayClassName=\"popover-to-tooltip\"\n        >\n          <APopover\n            trigger=\"click\"\n            title=\"Go to custom date\"\n            :visible=\"popover.click\"\n            @visibleChange=\"handlePopoverCustomDateChange($event, 'click')\"\n          >\n            <template #content>\n              <div style=\"margin-bottom: 3px\">\n                <component\n                  :is=\"popoverDateData.component\"\n                  v-model:value=\"popoverCustomDate\"\n                  :format=\"popoverDateData.format\"\n                  placeholder=\"Select date\"\n                  :allow-clear=\"false\"\n                />\n                <AButton style=\"margin-left: 1rem\" @click=\"onGotoCustomDate\"> Go </AButton>\n              </div>\n            </template>\n            <AButton v-if=\"!isHideTitle\" type=\"link\" style=\"margin-right: -10px; padding: 0\">\n              <AimOutlined />\n              <span class=\"CalendarToolbar__title\">\n                {{ $props.viewTitle }}\n              </span>\n            </AButton>\n          </APopover>\n        </APopover>\n\n        <ATooltip :title=\"timezoneLabel\">\n          <AButton\n            type=\"link\"\n            @click=\"onClickChangeTimezone\"\n            style=\"display: flex; align-items: center\"\n          >\n            <GlobalOutlined />\n            <span class=\"label-timezone\">\n              {{ timezoneLabel }}\n            </span>\n          </AButton>\n        </ATooltip>\n      </div>\n      <div class=\"CalendarToolbar__options\">\n        <ATooltip v-if=\"isModeFilter\" title=\"Search events\">\n          <AButton type=\"link\" style=\"margin-right: -10px\" @click=\"onClickShowSearchBar\">\n            <SearchOutlined style=\"font-size: 18px\" />\n          </AButton>\n        </ATooltip>\n\n        <ATooltip title=\"Calendar settings\">\n          <AButton type=\"link\" @click=\"onClickSettings\">\n            <SettingOutlined style=\"font-size: 18px\" />\n          </AButton>\n        </ATooltip>\n\n        <ATooltip title=\"Calendars\">\n          <ADropdown\n            v-if=\"!isHideTitle\"\n            v-model:visible=\"showCalendarsDropdown\"\n            :trigger=\"['click']\"\n          >\n            <template #overlay>\n              <AMenu class=\"dropdown-calendar\">\n                <AMenuItemGroup key=\"own\" title=\"My Calendars\">\n                  <AMenuItem\n                    v-for=\"calendar of sourcesToRender.own\"\n                    :key=\"calendar.id\"\n                    style=\"display: flex; align-items: center; justify-content: space-between\"\n                  >\n                    <ACheckbox\n                      :checked=\"calendar.show\"\n                      @change=\"onCalendarChecked(calendar.id, !calendar.show)\"\n                    >\n                      {{ calendar.name }}\n                    </ACheckbox>\n                    <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                  </AMenuItem>\n                </AMenuItemGroup>\n\n                <AMenuItemGroup\n                  v-if=\"sourcesToRender.shared.length\"\n                  key=\"shared\"\n                  title=\"Shared Calendars\"\n                  style=\"margin: 0\"\n                >\n                  <AMenuItem\n                    v-for=\"calendar of sourcesToRender.shared\"\n                    :key=\"calendar.id\"\n                    style=\"display: flex; align-items: center; justify-content: space-between\"\n                  >\n                    <ACheckbox\n                      :checked=\"calendar.show\"\n                      @change=\"onCalendarChecked(calendar.id, !calendar.show)\"\n                    >\n                      {{ calendar.name }} ({{ calendar.user.fullName }})\n                    </ACheckbox>\n                    <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                  </AMenuItem>\n                </AMenuItemGroup>\n\n                <AMenuItemGroup\n                  v-if=\"sourcesToRender.google.length\"\n                  key=\"google\"\n                  title=\"Google Calendars\"\n                  style=\"margin: 0\"\n                >\n                  <AMenuItem\n                    v-for=\"calendar of sourcesToRender.google\"\n                    :key=\"calendar.id\"\n                    style=\"display: flex; align-items: center; justify-content: space-between\"\n                  >\n                    <ACheckbox\n                      :checked=\"calendar.show\"\n                      @change=\"onCalendarChecked(calendar.id, !calendar.show)\"\n                    >\n                      {{ calendar.name }}\n                    </ACheckbox>\n                    <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                  </AMenuItem>\n                </AMenuItemGroup>\n              </AMenu>\n            </template>\n            <AButton style=\"margin-right: 0.5rem\">\n              <CalendarOutlined />\n              <span class=\"label-calendars\">Calendars</span>\n            </AButton>\n          </ADropdown>\n\n          <ADropdown v-else v-model:visible=\"showCalendarsDropdown\" :trigger=\"['click']\">\n            <template #overlay>\n              <AMenu class=\"dropdown-calendar\">\n                <AMenuItemGroup key=\"own\" title=\"My Calendars\">\n                  <AMenuItem\n                    v-for=\"calendar of sourcesToRender.own\"\n                    :key=\"calendar.id\"\n                    style=\"display: flex; align-items: center; justify-content: space-between\"\n                  >\n                    <ACheckbox\n                      :disabled=\"sourcesToFilter.length === 1 && !sourceToFilter[calendar.id]\"\n                      :checked=\"!sourceToFilter[calendar.id]\"\n                      @change=\"onCheckedCalendarSearch($event.target.checked, calendar)\"\n                    >\n                      {{ calendar.name }}\n                    </ACheckbox>\n                    <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                  </AMenuItem>\n                </AMenuItemGroup>\n\n                <AMenuItemGroup\n                  v-if=\"sourcesToRender.shared.length\"\n                  key=\"shared\"\n                  title=\"Shared Calendars\"\n                  style=\"margin: 0\"\n                >\n                  <AMenuItem\n                    v-for=\"calendar of sourcesToRender.shared\"\n                    :key=\"calendar.id\"\n                    style=\"display: flex; align-items: center; justify-content: space-between\"\n                  >\n                    <ACheckbox\n                      :disabled=\"sourcesToFilter.length === 1 && !sourceToFilter[calendar.id]\"\n                      :checked=\"!sourceToFilter[calendar.id]\"\n                      @change=\"onCheckedCalendarSearch($event.target.checked, calendar)\"\n                    >\n                      {{ calendar.name }} ({{ calendar.user.fullName }})\n                    </ACheckbox>\n                    <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                  </AMenuItem>\n                </AMenuItemGroup>\n              </AMenu>\n            </template>\n            <AButton>\n              <CalendarOutlined />\n              <span class=\"label-calendars\">Calendars</span>\n            </AButton>\n          </ADropdown>\n        </ATooltip>\n\n        <ATooltip title=\"Change view\">\n          <ASelect\n            :value=\"$props.viewName\"\n            style=\"width: 90px; margin: 0 0.5rem\"\n            @change=\"onChangeView\"\n          >\n            <ASelectOption v-for=\"view of views\" :value=\"view.name\" :key=\"view.name\">\n              {{ view.label }}\n            </ASelectOption>\n          </ASelect>\n        </ATooltip>\n\n        <ATooltip title=\"Create new event\">\n          <AButton type=\"primary\" @click=\"onCreate('event')\" style=\"margin-left: 0.5rem\">\n            <PlusOutlined />\n            <span class=\"label-create-event\">Event</span>\n          </AButton>\n        </ATooltip>\n      </div>\n    </template>\n\n    <template v-else>\n      <section style=\"display: flex; width: 100%\">\n        <div class=\"CalendarToolbar__search-back\">\n          <AButton type=\"link\" @click=\"onClickHideSearchBar\">\n            <ArrowLeftOutlined />\n          </AButton>\n          <h3>Search</h3>\n        </div>\n\n        <AInput\n          ref=\"refInputKeyword\"\n          :value=\"keyword\"\n          placeholder=\"Search\"\n          @input=\"onInputSearch($event.target.value)\"\n          style=\"max-width: 450px; margin-right: 1.5rem\"\n        >\n          <template #prefix>\n            <SearchOutlined style=\"margin-right: 5px; color: rgba(0, 0, 0, 0.4)\" />\n          </template>\n\n          <template #suffix>\n            <ATooltip v-if=\"keyword.length\" title=\"Clear input\">\n              <AButton type=\"link\" style=\"padding: 0\" @click=\"onClickClearKeyword\">\n                <CloseOutlined style=\"font-size: 10px; color: rgba(0, 0, 0, 0.4)\" />\n              </AButton>\n            </ATooltip>\n          </template>\n        </AInput>\n\n        <ADropdown v-model:visible=\"showCalendarsDropdown\" :trigger=\"['click']\">\n          <template #overlay>\n            <AMenu class=\"dropdown-calendar\">\n              <AMenuItemGroup key=\"own\" title=\"My Calendars\">\n                <AMenuItem\n                  v-for=\"calendar of sourcesToRender.own\"\n                  :key=\"calendar.id\"\n                  style=\"display: flex; align-items: center; justify-content: space-between\"\n                >\n                  <ACheckbox\n                    :disabled=\"sourcesToFilter.length === 1 && !sourceToFilter[calendar.id]\"\n                    :checked=\"!sourceToFilter[calendar.id]\"\n                    @change=\"onCheckedCalendarSearch($event.target.checked, calendar)\"\n                  >\n                    {{ calendar.name }}\n                  </ACheckbox>\n                  <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                </AMenuItem>\n              </AMenuItemGroup>\n\n              <AMenuItemGroup\n                v-if=\"sourcesToRender.shared.length\"\n                key=\"shared\"\n                title=\"Shared Calendars\"\n                style=\"margin: 0\"\n              >\n                <AMenuItem\n                  v-for=\"calendar of sourcesToRender.shared\"\n                  :key=\"calendar.id\"\n                  style=\"display: flex; align-items: center; justify-content: space-between\"\n                >\n                  <ACheckbox\n                    :disabled=\"sourcesToFilter.length === 1 && !sourceToFilter[calendar.id]\"\n                    :checked=\"!sourceToFilter[calendar.id]\"\n                    @change=\"onCheckedCalendarSearch($event.target.checked, calendar)\"\n                  >\n                    {{ calendar.name }} ({{ calendar.user.fullName }})\n                  </ACheckbox>\n                  <div class=\"show-color\" :style=\"{ backgroundColor: calendar.color }\" />\n                </AMenuItem>\n              </AMenuItemGroup>\n            </AMenu>\n          </template>\n          <AButton style=\"margin-right: 0.5rem\">\n            Calendars\n            <CalendarOutlined />\n          </AButton>\n        </ADropdown>\n\n        <!-- <template v-if=\"isFilterAppliedWithKeyword\">\n          <ATooltip :title=\"paginationLabel.prev\">\n            <AButton\n              :disabled=\"isPrevDisabled\"\n              type=\"link\"\n              style=\"margin-left: 0.5rem\"\n              @click=\"onChangeViewPage('prev')\"\n            >\n              <LeftOutlined />\n            </AButton>\n          </ATooltip>\n\n          <ATooltip :title=\"paginationLabel.next\">\n            <AButton\n              :disabled=\"isNextDisabled\"\n              type=\"link\"\n              style=\"margin-right: 0.5rem\"\n              @click=\"onChangeViewPage('next')\"\n            >\n              <RightOutlined />\n            </AButton>\n          </ATooltip>\n        </template> -->\n      </section>\n    </template>\n  </section>\n\n  <AModal\n    v-model:visible=\"modalSettings\"\n    title=\"Settings\"\n    width=\"650px\"\n    :footer=\"null\"\n    :after-close=\"() => (refCalendarSettings.tab = 'general')\"\n  >\n    <CalendarSettings\n      ref=\"refCalendarSettings\"\n      :is-display=\"modalSettings\"\n      :timezone-autofocus=\"timezoneAutofocus\"\n      @change-source=\"onChangeSource\"\n      @create-calendar=\"onCreate('calendar')\"\n    />\n  </AModal>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, nextTick, reactive, ref, toRefs, watch } from 'vue';\nimport {\n  RightOutlined,\n  LeftOutlined,\n  SettingOutlined,\n  PlusOutlined,\n  CalendarOutlined,\n  DownOutlined,\n  AimOutlined,\n  FormOutlined,\n  GlobalOutlined,\n  SearchOutlined,\n  ArrowLeftOutlined,\n  CloseOutlined,\n} from '@ant-design/icons-vue';\nimport moment from 'moment';\nimport CalendarSettings from '@/components/CalendarSettings.vue';\nimport { useCalendarSources, useModeFilter, useTime, useUsers } from '@/composables';\nimport {\n  CalendarBasics,\n  ChangeSource,\n  ToggleCalendarVisibilityParams,\n} from '@/types/calendar.type';\nimport useGlobal from '@/composables/use-global';\nimport { createDebounce } from '@/utils/functions';\nimport { CalendarContext } from '@/utils/enums/global.enum';\n\ninterface OnCalendarCheck {\n  checked: boolean;\n  calendar: {\n    id: string;\n    name: string;\n    color: string;\n    show: boolean;\n    isDefault: boolean;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    CalendarSettings,\n    RightOutlined,\n    LeftOutlined,\n    SettingOutlined,\n    PlusOutlined,\n    CalendarOutlined,\n    DownOutlined,\n    AimOutlined,\n    FormOutlined,\n    GlobalOutlined,\n    SearchOutlined,\n    ArrowLeftOutlined,\n    CloseOutlined,\n  },\n  props: {\n    viewTitle: {\n      type: String,\n      required: true,\n    },\n    viewName: {\n      type: String,\n      required: true,\n    },\n  },\n  emits: [\n    'changeView',\n    'setToday',\n    'create',\n    'changeViewPage',\n    'gotoDate',\n    'changeCalendarVisibility',\n    'changeSource',\n    'fetchEvents',\n  ],\n  setup(_, { emit }) {\n    const { isLoading } = useGlobal();\n    const { whoami } = useUsers();\n    const { sourcesToRender, sources } = useCalendarSources();\n    const { timezoneLabel } = useTime();\n    const {\n      isModeFilter,\n      isDisplayInputSearch,\n      isFilterAppliedWithKeyword,\n      paginationStatus,\n      keyword,\n      setKeyword,\n      setVisibilityInputSearch,\n      setCalendarsToFilter,\n      setPaginationSkip,\n      resetPagination,\n      setFilterViewAsActive,\n    } = useModeFilter();\n\n    const timezoneAutofocus = ref(false);\n\n    const state = reactive({\n      showCalendarsDropdown: false,\n      viewSelectedLabel: isModeFilter.value ? 'list' : 'month',\n      calendars: [] as OnCalendarCheck['calendar'][],\n      modalSettings: false,\n      popoverCustomDate: moment(),\n      createType: 'event' as 'event' | 'calendar',\n      sourceToFilter: {} as { [key: string]: boolean },\n    });\n\n    const popover = reactive({\n      click: false,\n      hover: false,\n    });\n\n    const debounce = createDebounce();\n\n    const isHideTitle = computed(() => {\n      return isModeFilter.value && state.viewSelectedLabel === 'list';\n    });\n\n    const isNextDisabled = computed(() => {\n      return isHideTitle.value && !paginationStatus.value.next;\n    });\n\n    const isPrevDisabled = computed(() => {\n      return isHideTitle.value && !paginationStatus.value.prev;\n    });\n\n    const paginationLabel = computed(() => {\n      if (isHideTitle.value) {\n        return { prev: 'Previous page', next: 'Next page' };\n      }\n\n      const viewLabel = state.viewSelectedLabel;\n\n      return { prev: `Previous ${viewLabel}`, next: `Next ${viewLabel}` };\n    });\n\n    const popoverDateData = computed(() => {\n      switch (state.viewSelectedLabel) {\n        case 'day':\n        case 'week':\n        case 'list':\n          return { component: 'ADatePicker', format: 'LL' };\n        default:\n          return { component: 'AMonthPicker', format: 'MMMM YYYY' };\n      }\n    });\n\n    const sourcesToFilter = computed(() => {\n      if (!isDisplayInputSearch) {\n        return [];\n      }\n\n      const ids: string[] = [];\n\n      for (const source of sources.value) {\n        if (!state.sourceToFilter[source.id] && source.context !== CalendarContext.Google) {\n          ids.push(source.id);\n        }\n      }\n\n      return ids;\n    });\n\n    watch(\n      sourcesToFilter,\n      val => {\n        setCalendarsToFilter(val);\n      },\n      { immediate: true },\n    );\n\n    const refCalendarSettings = ref({});\n    const refInputKeyword = ref();\n\n    const handlePopoverCustomDateChange = (visible: boolean, trigger: 'hover' | 'click') => {\n      if (trigger === 'hover' && popover.click) {\n        return;\n      }\n\n      popover[trigger] = visible;\n      popover[trigger === 'hover' ? 'click' : 'hover'] = false;\n    };\n\n    /** Current date */\n    const today = moment().format('dddd, MMMM D');\n\n    const views = [\n      { name: 'timeGridDay', label: 'Day' },\n      { name: 'timeGridWeek', label: 'Week' },\n      { name: 'dayGridMonth', label: 'Month' },\n      { name: isModeFilter.value ? 'filter' : 'listWeek', label: 'List' },\n    ];\n\n    const setViewTitle = (viewName: string) => {\n      if (viewName === 'listWeek' || viewName === 'filter') {\n        state.viewSelectedLabel = 'list';\n        return;\n      }\n\n      const view = views.find(view => view.name === viewName)!;\n\n      if (!view) {\n        console.error(new Error(`View \"${viewName}\" not found`));\n      }\n\n      state.viewSelectedLabel = view.label.toLowerCase();\n    };\n\n    const onClickShowSearchBar = () => {\n      setVisibilityInputSearch(true);\n\n      nextTick(() => {\n        refInputKeyword.value.focus();\n      });\n    };\n\n    const onClickHideSearchBar = () => {\n      const hasFilter = !!keyword.value;\n      setVisibilityInputSearch(false);\n\n      hasFilter && emit('fetchEvents');\n    };\n\n    const onClickClearKeyword = () => {\n      setKeyword('');\n      refInputKeyword.value.focus();\n\n      resetPagination();\n      emit('fetchEvents');\n    };\n\n    const onCheckedCalendarSearch = (checked: boolean, calendar: CalendarBasics) => {\n      state.sourceToFilter[calendar.id] = !checked;\n\n      nextTick(() => emit('fetchEvents'));\n    };\n\n    const onChangeView = (view: string) => {\n      setViewTitle(view);\n      emit('changeView', view);\n\n      setFilterViewAsActive(view === 'filter');\n    };\n\n    const onSetToday = () => {\n      emit('setToday');\n    };\n\n    const onGotoCustomDate = () => {\n      emit('gotoDate', state.popoverCustomDate.toISOString());\n\n      // Reset date and close popover\n      state.popoverCustomDate = moment();\n      popover.click = false;\n    };\n\n    const onCreate = (type: 'event' | 'calendar') => {\n      emit('create', type);\n    };\n\n    const onChangeViewPage = (type: 'next' | 'prev') => {\n      if (!isHideTitle.value) {\n        emit('changeViewPage', type);\n\n        return;\n      }\n\n      setPaginationSkip(type);\n      emit('fetchEvents');\n    };\n\n    const onClickChangeTimezone = () => {\n      state.modalSettings = true;\n      timezoneAutofocus.value = true;\n    };\n\n    const onClickSettings = () => {\n      state.modalSettings = true;\n      timezoneAutofocus.value = false;\n    };\n\n    const handleMenuClick = ({ item }: any) => {\n      state.createType = item.value;\n    };\n\n    const onInputSearch = (value: string) => {\n      value = value.trimStart();\n\n      if (!value && !keyword.value) {\n        return;\n      }\n\n      setKeyword(value);\n\n      if (value.length > 0 && value.length < 2) {\n        return;\n      }\n\n      debounce(() => {\n        if (state.viewSelectedLabel !== 'list') {\n          onChangeView('filter');\n        }\n\n        emit('fetchEvents');\n      });\n    };\n\n    /** Show/hide calendars */\n    const onCalendarChecked = async (calendarId: string, checked: boolean) => {\n      emit('changeCalendarVisibility', { calendarId, checked } as ToggleCalendarVisibilityParams);\n    };\n\n    const onChangeSource = (data: ChangeSource) => {\n      emit('changeSource', data);\n    };\n\n    return {\n      today,\n      views,\n      ...toRefs(state),\n      isLoading,\n      refCalendarSettings,\n      refInputKeyword,\n      popover,\n      whoami,\n      keyword,\n      setKeyword,\n      isModeFilter,\n      isHideTitle,\n      isDisplayInputSearch,\n      isFilterAppliedWithKeyword,\n      isNextDisabled,\n      isPrevDisabled,\n      paginationLabel,\n      sourcesToRender,\n      sourcesToFilter,\n      popoverDateData,\n      setVisibilityInputSearch,\n      onInputSearch,\n      onClickClearKeyword,\n      onClickShowSearchBar,\n      onClickHideSearchBar,\n      onCheckedCalendarSearch,\n      onChangeView,\n      onSetToday,\n      onCreate,\n      onChangeViewPage,\n      onCalendarChecked,\n      onChangeSource,\n      handleMenuClick,\n      handlePopoverCustomDateChange,\n      onGotoCustomDate,\n      timezoneLabel,\n      timezoneAutofocus,\n      onClickChangeTimezone,\n      onClickSettings,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n$calendar-toolbar-height: 32px;\n\n.CalendarToolbar {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  height: $calendar-toolbar-height;\n\n  &__view-info {\n    display: flex;\n  }\n\n  &__title {\n    line-height: $calendar-toolbar-height;\n    font-weight: 600;\n    cursor: pointer;\n    margin-right: 0.5rem;\n  }\n\n  &__search-back {\n    display: flex;\n    height: 100%;\n    align-items: center;\n\n    h3 {\n      margin-bottom: 0;\n      margin: 0 1.5rem 0 1rem;\n      line-height: $calendar-toolbar-height;\n    }\n  }\n}\n\n.show-color {\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  margin-left: 1rem;\n}\n\n.label {\n  &-create-event,\n  &-calendars {\n    display: none;\n  }\n\n  &-timezone {\n    text-overflow: ellipsis;\n    overflow: hidden;\n    max-width: 150px;\n  }\n}\n\n@include screen-lg {\n  .label {\n    &-create-event,\n    &-calendars {\n      display: inline-block;\n    }\n\n    &-timezone {\n      max-width: 200px;\n    }\n  }\n}\n\n@include screen-xl {\n  .label {\n    &-timezone {\n      max-width: none;\n    }\n  }\n}\n</style>\n","<template>\n  <ATabs v-model:active-key=\"tab\" tab-position=\"left\">\n    <ATabPane key=\"general\">\n      <template #tab>\n        <SettingOutlined />\n        <span>General</span>\n      </template>\n      <AForm layout=\"vertical\">\n        <h3 class=\"Settings__title\">General settings</h3>\n        <AFormItem label=\"Timezone\">\n          <ASelect\n            ref=\"refTimezones\"\n            v-model:value=\"settings.timezone\"\n            show-search\n            style=\"width: 100%\"\n          >\n            <ASelectOption\n              v-for=\"(timezoneLabel, timezone) in timezones\"\n              :key=\"timezone\"\n              :value=\"timezone\"\n            >\n              {{ timezoneLabel }}\n            </ASelectOption>\n          </ASelect>\n        </AFormItem>\n      </AForm>\n    </ATabPane>\n    <ATabPane key=\"calendars\" style=\"padding-right: 0.1rem\">\n      <template #tab>\n        <CalendarOutlined />\n        <span>Calendars</span>\n      </template>\n      <h3 class=\"Settings__title\">Calendar settings</h3>\n\n      <ManageCalendar @change=\"onChangeCalendarData\" @create-calendar=\"onCreateCalendar\" />\n    </ATabPane>\n  </ATabs>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, nextTick, provide, reactive, ref, watch } from 'vue';\nimport { CalendarOutlined, SettingOutlined } from '@ant-design/icons-vue';\nimport { CalendarSettingsSymbol, ModalSettingsSymbol } from '@/utils/symbols';\nimport timezones from '@/utils/timezones.json';\nimport ManageCalendar from './ManageCalendar.vue';\nimport { ChangeCalendarData } from '@/types/calendar.type';\nimport { calendarService } from '@/services';\nimport { useCalendarSources } from '@/composables';\nimport { notification } from 'ant-design-vue';\n\nexport default defineComponent({\n  components: { CalendarOutlined, SettingOutlined, ManageCalendar },\n  props: {\n    isDisplay: Boolean,\n    timezoneAutofocus: Boolean,\n  },\n  emits: ['changeSource', 'createCalendar'],\n  setup(props, { emit }) {\n    const { updateSource } = useCalendarSources();\n    const settings = inject(CalendarSettingsSymbol)!;\n\n    const tab = ref('general');\n\n    provide(ModalSettingsSymbol, {\n      isDisplay: computed(() => props.isDisplay),\n      activeTab: tab,\n    });\n\n    const refCalendarForm = ref<any>({});\n    const refTimezones = ref<any>(null);\n\n    const calendar = reactive({\n      name: '',\n      color: '',\n    });\n\n    // Set autofocus to timezone select\n    watch(\n      () => props.isDisplay,\n      isDisplay => {\n        if (!props.timezoneAutofocus || !isDisplay) {\n          return;\n        }\n\n        tab.value !== 'general' && (tab.value = 'general');\n\n        nextTick(() => {\n          refTimezones.value.focus();\n        });\n      },\n      { immediate: true },\n    );\n\n    const onChangeCalendarData = async ({ data, source, oldSource }: ChangeCalendarData) => {\n      try {\n        // Update calendar in API\n        await calendarService.updateCalendar(source.id, data);\n        // Update source in local data\n        updateSource(source.id, data);\n\n        emit('changeSource', { source, oldSource });\n\n        notification.success({\n          message: 'Calendar updated!',\n          placement: 'bottomRight',\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    return {\n      refCalendarForm,\n      refTimezones,\n      settings,\n      timezones,\n      calendar,\n      tab,\n      onChangeCalendarData,\n      onCreateCalendar: () => emit('createCalendar'),\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.Settings {\n  &__title {\n    color: grey;\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n}\n</style>\n","import { InjectionKey } from 'vue';\nimport { Calendar } from '@fullcalendar/core';\nimport { CalendarFormEventNew, CalendarSettings, ModalSettings } from '@/types/calendar.type';\nimport { CalendarCurrentData } from '@/composables/use-calendar';\n\nexport const CalendarSettingsSymbol: InjectionKey<CalendarSettings> = Symbol('CALENDAR_SETTINGS');\n\nexport const CalendarInstanceSymbol: InjectionKey<Calendar> = Symbol('CALENDAR_INSTANCE');\n\nexport const CalendarFormSymbol: InjectionKey<CalendarFormEventNew> = Symbol('CALENDAR_FORM');\n\nexport const CalendarCurrentDataSymbol: InjectionKey<CalendarCurrentData> =\n  Symbol('CALENDAR_CURRENT_DATA');\n\nexport const ModalSettingsSymbol: InjectionKey<ModalSettings> = Symbol('MODAL_SETTINGS');\n","<template>\n  <AForm layout=\"vertical\">\n    <ARow :gutter=\"10\">\n      <ACol :span=\"10\">\n        <AFormItem label=\"Calendar\">\n          <ASelect\n            v-model:value=\"calendarId\"\n            placeholder=\"Select calendar\"\n            @change=\"onChangeCalendar\"\n          >\n            <ASelectOption v-for=\"source of sources.own\" :key=\"source.id\" :value=\"source.id\">\n              {{ source.name }}\n            </ASelectOption>\n          </ASelect>\n        </AFormItem>\n      </ACol>\n      <ACol :span=\"14\">\n        <AFormItem label=\"Name\" required v-bind=\"nameStatus\">\n          <AInput\n            ref=\"refNewCalendarName\"\n            v-model:value=\"name\"\n            placeholder=\"Name\"\n            style=\"width: 85%\"\n            @change=\"onChangeName\"\n          />\n          <div style=\"position: absolute; right: -35px; top: -7px\">\n            <Color v-model=\"color\" :colors-data=\"colors\" :default=\"calendar.color\" />\n          </div>\n        </AFormItem>\n      </ACol>\n    </ARow>\n\n    <div style=\"display: flex; justify-content: center; margin-bottom: 1.5rem\">\n      <AButton @click=\"onCreateCalendar\"><PlusOutlined />Add calendar</AButton>\n    </div>\n\n    <Permissions :calendar=\"calendar\" />\n\n    <div style=\"display: flex; justify-content: flex-end\">\n      <AButton\n        type=\"primary\"\n        :loading=\"isLoading\"\n        :disabled=\"!isReadyForUpdate\"\n        @click=\"onClickSave\"\n        >Save</AButton\n      >\n    </div>\n  </AForm>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, reactive, ref, toRefs, watch } from 'vue';\nimport { PlusOutlined } from '@ant-design/icons-vue';\nimport Color from '@/components/Color.vue';\nimport { useCalendarSources, useGlobalProps, useUsers } from '@/composables';\nimport Permissions from './Permissions.vue';\nimport { Color as IColor } from '@/types/color.type';\nimport { ModalSettingsSymbol } from '@/utils/symbols';\nimport { CalendarCreate, ChangeCalendarData } from '@/types/calendar.type';\nimport { cloneObject } from '@/utils/functions';\n\nexport default defineComponent({\n  components: {\n    Color,\n    Permissions,\n    PlusOutlined,\n  },\n  emits: ['readyForUpdate', 'changeSource', 'change', 'createCalendar'],\n  setup(_, { emit }) {\n    const { isLoading } = useGlobalProps();\n    const { sourceColors, sourcesToRender, defaultSource } = useCalendarSources();\n    const { whoami, getUserFullName } = useUsers();\n\n    const state = reactive({\n      name: '',\n      color: '',\n    });\n\n    const modalData = inject(ModalSettingsSymbol)!;\n    const refNewCalendarName = ref();\n\n    const isNameTouched = ref(false);\n    const calendarId = ref(defaultSource.value.id);\n\n    const owner = computed(() => {\n      const fullName = getUserFullName(whoami.value);\n\n      return { ...whoami, fullName };\n    });\n\n    const calendar = computed(() => {\n      return sourcesToRender.value.own.find(item => item.id === calendarId.value)!;\n    });\n\n    const nameStatus = computed(() => {\n      if (isNameTouched.value && !state.name) {\n        return {\n          help: 'Required field',\n          validateStatus: 'error',\n        };\n      }\n\n      return {\n        validateStatus: 'success',\n      };\n    });\n\n    const colors = computed(() => {\n      const _colors: IColor[] = [];\n      let hasOutColor = true;\n\n      for (const _color of sourceColors.value) {\n        if (hasOutColor && _color.color === calendar.value.color) {\n          hasOutColor = false;\n        }\n\n        _colors.push({ ..._color, active: _color.color === state.color });\n      }\n\n      if (hasOutColor) {\n        _colors.push({\n          color: calendar.value.color,\n          disabled: false,\n          animate: true,\n          isOut: true,\n          active: calendar.value.color === state.color,\n        });\n      }\n\n      return _colors;\n    });\n\n    const isReadyForUpdate = computed(() => {\n      if (nameStatus.value.validateStatus === 'error') {\n        return false;\n      }\n\n      if (state.name !== calendar.value.name || state.color !== calendar.value.color) {\n        return true;\n      }\n\n      return false;\n    });\n\n    watch(\n      calendar,\n      calendarSelected => {\n        state.name = calendarSelected.name;\n        state.color = calendarSelected.color;\n      },\n      { immediate: true },\n    );\n\n    watch(modalData.activeTab, tab => {\n      if (tab === 'calendars') {\n        isNameTouched.value = false;\n\n        state.name = calendar.value.name;\n        state.color = calendar.value.color;\n\n        calendarId.value = defaultSource.value.id;\n      }\n    });\n\n    const onChangeName = () => {\n      if (!isNameTouched.value) {\n        isNameTouched.value = true;\n      }\n    };\n\n    const onChangeCalendar = () => {\n      refNewCalendarName.value && refNewCalendarName.value.focus();\n    };\n\n    const onClickSave = async () => {\n      const keys = Object.keys(state) as ('name' | 'color')[];\n      /** Only data updated */\n      const updated = keys.reduce<Partial<CalendarCreate>>((data, key) => {\n        if (calendar.value[key] !== state[key]) {\n          return { ...data, [key]: state[key] };\n        }\n        return data;\n      }, {} as CalendarCreate);\n\n      emit('change', {\n        data: updated,\n        source: { ...calendar.value, ...updated },\n        oldSource: cloneObject(calendar.value),\n      } as ChangeCalendarData);\n    };\n\n    return {\n      ...toRefs(state),\n      refNewCalendarName,\n      sourceColors,\n      sources: sourcesToRender,\n      nameStatus,\n      calendar,\n      colors,\n      isLoading,\n      isReadyForUpdate,\n      owner,\n      onChangeName,\n      onCreateCalendar: () => emit('createCalendar'),\n      calendarId,\n      onChangeCalendar,\n      onClickSave,\n    };\n  },\n});\n</script>\n","<template>\n  <ADropdown :trigger=\"['click']\">\n    <ATooltip title=\"Choose color\" :color=\"selectedColor\">\n      <a class=\"ant-dropdown-link\" @click.prevent>\n        <ColorCircle :color=\"selectedColor\" />\n      </a>\n    </ATooltip>\n    <template #overlay>\n      <div class=\"Color\">\n        <div v-if=\"fixedColor || outColor\" class=\"Color__default\">\n          <div v-if=\"fixedColor\" style=\"display: flex\">\n            <a\n              class=\"ant-dropdown-link Color__link\"\n              @click.prevent=\"onClickFixedColor($event, fixedColor)\"\n            >\n              <ColorCircle v-bind=\"fixedColor\" />\n            </a>\n            <span class=\"Color__default-label\" @click.stop>Calendar</span>\n          </div>\n\n          <div v-if=\"outColor\" style=\"display: flex\">\n            <a\n              class=\"ant-dropdown-link Color__link\"\n              style=\"margin-left: 5px\"\n              @click.prevent=\"onClickFixedColor($event, outColor)\"\n            >\n              <ColorCircle v-bind=\"outColor\" />\n            </a>\n            <span class=\"Color__default-label\" @click.stop>Out list</span>\n          </div>\n        </div>\n        <a\n          v-for=\"(color, index) of colors\"\n          :key=\"color.color\"\n          class=\"ant-dropdown-link Color__link\"\n          @click.prevent=\"onClickColor($event, index, color.color)\"\n        >\n          <ColorCircle\n            v-if=\"isColorAllowed(color)\"\n            v-bind=\"{ ...color, disabled: false, animate: true }\"\n          />\n          <ATooltip v-else title=\"Already used!\" :color=\"color.color\">\n            <ColorCircle v-bind=\"color\" />\n          </ATooltip>\n        </a>\n      </div>\n    </template>\n  </ADropdown>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, watch } from 'vue';\nimport ColorCircle from '@/components/ColorCircle.vue';\nimport { Color } from '@/types/color.type';\n\nexport default defineComponent({\n  components: { ColorCircle },\n  props: {\n    modelValue: String,\n    default: String,\n    fixed: {\n      type: Boolean,\n      default: false,\n    },\n    colorsData: {\n      type: Array as PropType<Color[]>,\n      default: () => {\n        return ['orange', 'blue', 'red'].map(color => ({\n          color,\n          disabled: false,\n          animate: true,\n          actve: false,\n        }));\n      },\n    },\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const colors = ref<Color[]>([]);\n    const fixedColor = ref<Color>();\n    /** Out list color */\n    const outColor = ref<Color>();\n\n    const updateModelValue = (color: string) => {\n      emit('update:modelValue', color);\n      emit('change', color);\n    };\n\n    const setActiveColor = (color: string) => {\n      colors.value = colors.value.map(item => {\n        if (item.color === color) {\n          return { ...item, active: true };\n        }\n\n        return { ...item, active: false };\n      });\n    };\n\n    // Update colors from outside\n    watch(\n      () => props.colorsData,\n      newColors => {\n        outColor.value = undefined;\n        fixedColor.value = undefined;\n\n        const listColors: Color[] = [];\n\n        for (let i = 0; i < newColors.length; i++) {\n          const _color = newColors[i];\n\n          if (_color.fixed) {\n            fixedColor.value = _color;\n            continue;\n          }\n\n          if (_color.isOut) {\n            outColor.value = _color;\n            continue;\n          }\n\n          listColors.push(_color);\n        }\n\n        colors.value = listColors;\n      },\n      { deep: true, immediate: true },\n    );\n\n    const selectedColor = computed(() => props.modelValue || props.colorsData[0].color);\n\n    watch(\n      () => selectedColor.value,\n      val => {\n        setActiveColor(val);\n      },\n      { immediate: true },\n    );\n\n    const onClickFixedColor = (e: any, color: Color) => {\n      const isDefaultColor = color.color !== props.default;\n      const isCurrentColorSelected = color.color === props.modelValue;\n      const isColorDisabled = color.disabled;\n\n      if (isCurrentColorSelected || (isDefaultColor && isColorDisabled)) {\n        return e.stopPropagation();\n      }\n\n      updateModelValue(color.color);\n    };\n\n    const onClickColor = (e: any, index: number, color: string) => {\n      const isDefaultColor = colors.value[index].color !== props.default;\n      const isCurrentColorSelected = color === props.modelValue;\n      const isColorDisabled = colors.value[index].disabled;\n\n      if (isCurrentColorSelected || (isDefaultColor && isColorDisabled)) {\n        return e.stopPropagation();\n      }\n\n      updateModelValue(color);\n    };\n\n    const getFirstAllowedColor = () => {\n      let _color = '';\n\n      for (const color of colors.value) {\n        if (!color.disabled) {\n          _color = color.color;\n          break;\n        }\n      }\n\n      if (!_color) {\n        throw new Error('All colors are disabled!');\n      }\n\n      return _color;\n    };\n\n    const isColorAllowed = (color: Color) => {\n      if (!props.default) {\n        return !color.disabled;\n      }\n\n      return !color.disabled || (props.default && props.default === color.color);\n    };\n\n    const onCreated = () => {\n      if (!props.modelValue) {\n        updateModelValue(getFirstAllowedColor());\n        return;\n      }\n\n      setActiveColor(props.modelValue);\n    };\n\n    onCreated();\n\n    return {\n      selectedColor,\n      outColor,\n      colors,\n      fixedColor,\n      isColorAllowed,\n      setActiveColor,\n      onClickColor,\n      onClickFixedColor,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.Color {\n  position: relative;\n  margin: 0;\n  padding-bottom: 5px;\n  text-align: left;\n  list-style-type: none;\n  background-color: #fff;\n  background-clip: padding-box;\n  border-radius: 2px;\n  outline: none;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-wrap: wrap;\n  max-width: 200px;\n  border-radius: 5px;\n\n  &__link {\n    padding: 5px 5px 0 5px;\n  }\n\n  &__default {\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n    width: 100%;\n    display: flex;\n    padding-bottom: 5px;\n\n    &-label {\n      // margin-left: 2px;\n      display: flex;\n      align-items: center;\n      margin-bottom: -5px;\n      color: grey;\n    }\n  }\n}\n</style>\n","<template>\n  <div\n    class=\"ColorCircle\"\n    :class=\"{\n      'ColorCircle--animate': isAnimated,\n      'ColorCircle--disabled': disabled,\n    }\"\n  >\n    <CheckOutlined v-if=\"active\" style=\"color: #fff; font-size: 15px\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue';\nimport { CheckOutlined } from '@ant-design/icons-vue';\n\ntype ColorSize = 'default' | 'small' | 'large';\n\nexport default defineComponent({\n  components: { CheckOutlined },\n  props: {\n    size: {\n      type: String as PropType<ColorSize>,\n      default: 'default',\n      validator: (value: string) => {\n        return ['default', 'small', 'large', 'extraSmall'].includes(value);\n      },\n    },\n    color: {\n      type: String,\n      required: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n    animate: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    /** Circle sizes in pixels */\n    enum Sizes {\n      large = 40,\n      default = 30,\n      small = 20,\n      extraSmall = 14,\n    }\n\n    // enum CheckSizes {\n    //   small = 20,\n    // }\n\n    const circleSize = `${Sizes[props.size]}px`;\n\n    const isAnimated = computed(() => props.animate && !props.disabled);\n\n    return {\n      circleSize,\n      isAnimated,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.ColorCircle {\n  width: v-bind('circleSize');\n  height: v-bind('circleSize');\n  border-radius: 50%;\n  background-color: v-bind('color');\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid rgba($color: #000, $alpha: 0.05);\n\n  &--animate:hover {\n    transform: scale(1.1);\n    transition: transform ease-in-out 200ms;\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n  }\n}\n</style>\n","\nimport { computed, defineComponent, PropType } from 'vue';\nimport { CheckOutlined } from '@ant-design/icons-vue';\n\ntype ColorSize = 'default' | 'small' | 'large';\n\nconst __default__ = defineComponent({\n  components: { CheckOutlined },\n  props: {\n    size: {\n      type: String as PropType<ColorSize>,\n      default: 'default',\n      validator: (value: string) => {\n        return ['default', 'small', 'large', 'extraSmall'].includes(value);\n      },\n    },\n    color: {\n      type: String,\n      required: true,\n    },\n    active: {\n      type: Boolean,\n      default: false,\n    },\n    animate: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props) {\n    /** Circle sizes in pixels */\n    enum Sizes {\n      large = 40,\n      default = 30,\n      small = 20,\n      extraSmall = 14,\n    }\n\n    // enum CheckSizes {\n    //   small = 20,\n    // }\n\n    const circleSize = `${Sizes[props.size]}px`;\n\n    const isAnimated = computed(() => props.animate && !props.disabled);\n\n    return {\n      circleSize,\n      isAnimated,\n    };\n  },\n});\n\nimport { useCssVars as _useCssVars } from 'vue'\nconst __injectCSSVars__ = () => {\n_useCssVars(_ctx => ({\n  \"40a83586\": (_ctx.circleSize),\n  \"163af397\": (_ctx.color)\n}))}\nconst __setup__ = __default__.setup\n__default__.setup = __setup__\n  ? (props, ctx) => { __injectCSSVars__();return __setup__(props, ctx) }\n  : __injectCSSVars__\n\nexport default __default__","import { render } from \"./ColorCircle.vue?vue&type=template&id=e91ce874&scoped=true\"\nimport script from \"./ColorCircle.vue?vue&type=script&lang=ts\"\nexport * from \"./ColorCircle.vue?vue&type=script&lang=ts\"\n\nimport \"./ColorCircle.vue?vue&type=style&index=0&id=e91ce874&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-e91ce874\"\n\nexport default script","\nimport { computed, defineComponent, PropType, ref, watch } from 'vue';\nimport ColorCircle from '@/components/ColorCircle.vue';\nimport { Color } from '@/types/color.type';\n\nexport default defineComponent({\n  components: { ColorCircle },\n  props: {\n    modelValue: String,\n    default: String,\n    fixed: {\n      type: Boolean,\n      default: false,\n    },\n    colorsData: {\n      type: Array as PropType<Color[]>,\n      default: () => {\n        return ['orange', 'blue', 'red'].map(color => ({\n          color,\n          disabled: false,\n          animate: true,\n          actve: false,\n        }));\n      },\n    },\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const colors = ref<Color[]>([]);\n    const fixedColor = ref<Color>();\n    /** Out list color */\n    const outColor = ref<Color>();\n\n    const updateModelValue = (color: string) => {\n      emit('update:modelValue', color);\n      emit('change', color);\n    };\n\n    const setActiveColor = (color: string) => {\n      colors.value = colors.value.map(item => {\n        if (item.color === color) {\n          return { ...item, active: true };\n        }\n\n        return { ...item, active: false };\n      });\n    };\n\n    // Update colors from outside\n    watch(\n      () => props.colorsData,\n      newColors => {\n        outColor.value = undefined;\n        fixedColor.value = undefined;\n\n        const listColors: Color[] = [];\n\n        for (let i = 0; i < newColors.length; i++) {\n          const _color = newColors[i];\n\n          if (_color.fixed) {\n            fixedColor.value = _color;\n            continue;\n          }\n\n          if (_color.isOut) {\n            outColor.value = _color;\n            continue;\n          }\n\n          listColors.push(_color);\n        }\n\n        colors.value = listColors;\n      },\n      { deep: true, immediate: true },\n    );\n\n    const selectedColor = computed(() => props.modelValue || props.colorsData[0].color);\n\n    watch(\n      () => selectedColor.value,\n      val => {\n        setActiveColor(val);\n      },\n      { immediate: true },\n    );\n\n    const onClickFixedColor = (e: any, color: Color) => {\n      const isDefaultColor = color.color !== props.default;\n      const isCurrentColorSelected = color.color === props.modelValue;\n      const isColorDisabled = color.disabled;\n\n      if (isCurrentColorSelected || (isDefaultColor && isColorDisabled)) {\n        return e.stopPropagation();\n      }\n\n      updateModelValue(color.color);\n    };\n\n    const onClickColor = (e: any, index: number, color: string) => {\n      const isDefaultColor = colors.value[index].color !== props.default;\n      const isCurrentColorSelected = color === props.modelValue;\n      const isColorDisabled = colors.value[index].disabled;\n\n      if (isCurrentColorSelected || (isDefaultColor && isColorDisabled)) {\n        return e.stopPropagation();\n      }\n\n      updateModelValue(color);\n    };\n\n    const getFirstAllowedColor = () => {\n      let _color = '';\n\n      for (const color of colors.value) {\n        if (!color.disabled) {\n          _color = color.color;\n          break;\n        }\n      }\n\n      if (!_color) {\n        throw new Error('All colors are disabled!');\n      }\n\n      return _color;\n    };\n\n    const isColorAllowed = (color: Color) => {\n      if (!props.default) {\n        return !color.disabled;\n      }\n\n      return !color.disabled || (props.default && props.default === color.color);\n    };\n\n    const onCreated = () => {\n      if (!props.modelValue) {\n        updateModelValue(getFirstAllowedColor());\n        return;\n      }\n\n      setActiveColor(props.modelValue);\n    };\n\n    onCreated();\n\n    return {\n      selectedColor,\n      outColor,\n      colors,\n      fixedColor,\n      isColorAllowed,\n      setActiveColor,\n      onClickColor,\n      onClickFixedColor,\n    };\n  },\n});\n","import { render } from \"./Color.vue?vue&type=template&id=0e7e247f&scoped=true\"\nimport script from \"./Color.vue?vue&type=script&lang=ts\"\nexport * from \"./Color.vue?vue&type=script&lang=ts\"\n\nimport \"./Color.vue?vue&type=style&index=0&id=0e7e247f&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-0e7e247f\"\n\nexport default script","export enum Theme {\n  LIGHT = 'light',\n  DARK = 'dark',\n}\n\nexport enum WeekDayMin {\n  /** Sunday */\n  Su = 'SU',\n  /** Monday */\n  Mo = 'MO',\n  /** Tuesday */\n  Tu = 'TU',\n  /** Wednesday */\n  We = 'WE',\n  /** Thursday */\n  Th = 'TH',\n  /** Friday */\n  Fr = 'FR',\n  /** Saturday */\n  Sa = 'SA',\n}\n\nexport enum EventFrequency {\n  Yearly = 'YEARLY',\n  Monthly = 'MONTHLY',\n  Weekly = 'WEEKLY',\n  Daily = 'DAILY',\n  Hourly = 'HOURLY',\n  Minutely = 'MINUTELY',\n  Secondly = 'SECONDLY',\n}\n\nexport enum DayPosition {\n  Last = -1,\n  First = 1,\n  Second = 2,\n  Third = 3,\n  Fourth = 4,\n  /** 5th */\n  Th5 = 5,\n}\n\nexport enum CalendarContext {\n  Google = 'GOOGLE',\n  Local = 'LOCAL',\n}\n\nexport enum Permission {\n  Read = 'read',\n  All = 'all',\n}\n\nexport enum PermissionsType {\n  Admin = 'admin',\n  Global = 'global',\n  Individual = 'individual',\n}\n","import { ref, readonly, computed } from 'vue';\nimport moment, { Moment } from 'moment-timezone';\nimport timezones from '@/utils/timezones.json';\n\nconst _timezone = ref<string>('');\nexport const timezone = readonly(_timezone);\n\nexport const time = (date?: string | Date | Moment, timezone?: string) => {\n  return moment.tz(date || moment(), timezone || _timezone.value);\n};\n\nexport default function (timezone?: string) {\n  const timezoneLabel = computed(() => getTimeZoneLabel(_timezone.value));\n\n  const setTimezone = (zone: string) => (_timezone.value = zone);\n\n  const getTimeZoneLabel = (zone: string) => {\n    if (zone === 'UTC') {\n      zone = 'Etc/GMT';\n    }\n\n    return (timezones as any)[zone] as string;\n  };\n\n  const onCreated = () => {\n    if (!_timezone.value) {\n      _timezone.value = timezone || moment.tz.guess();\n    }\n  };\n\n  onCreated();\n\n  return {\n    timezone: readonly(_timezone),\n    time,\n    timezoneLabel,\n    setTimezone,\n    getTimeZoneLabel,\n  };\n}\n","import moment, { Moment } from 'moment';\nimport { time, timezone } from '@/composables/use-time';\nimport { DAYS } from '@/utils/constants';\nimport {\n  ByweekdayMonthly,\n  GetDateByPositionOfMonthParams,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { dayNumericToString } from './calendar.helper';\n\nexport function getMomentInstance(date: string | Moment | Date) {\n  const _moment = date instanceof moment ? (date as Moment) : moment(date);\n\n  return _moment.clone();\n}\n\n/** Get total weeks number available of the current month */\nexport function getWeeksOfMonth(date: string | Moment): number {\n  const current = getMomentInstance(date);\n\n  return current.clone().endOf('month').week() - current.clone().startOf('month').week() + 1;\n}\n\n/** Get current week number of the month */\nexport function getCurrentWeekOfMonth(date: string | Moment): number {\n  const current = getMomentInstance(date);\n\n  return current.week() - current.clone().startOf('month').week() + 1;\n}\n\nexport function getDayPositionOfMonth(date: string | Moment): ByweekdayMonthly {\n  const currentDate = getMomentInstance(date);\n\n  const startMonth = currentDate.clone().startOf('month');\n  const endMonth = currentDate.clone().endOf('month');\n\n  const monthDay = startMonth.clone();\n  const match = { found: false, position: 0, day: '' as WeekDayMinType };\n\n  let count = 0;\n\n  // equals or less\n  while (monthDay.isSameOrBefore(endMonth)) {\n    if (currentDate.day() === monthDay.day()) {\n      count++;\n\n      if (!match.found && currentDate.isSame(monthDay, 'day')) {\n        match.found = true;\n        match.position = count;\n\n        const dayString = dayNumericToString(monthDay.day(), 'fullcalendar');\n        match.day = dayString;\n      }\n    }\n\n    // Verify next day\n    monthDay.add(1, 'day');\n  }\n\n  if (count === match.position) {\n    // Indicates that is the last\n    match.position = -1;\n  }\n\n  return { weekday: match.day, n: match.position };\n}\n\nexport function getDateByPositionInMonth({\n  month,\n  year,\n  byweekday,\n}: GetDateByPositionOfMonthParams) {\n  if (![1, 2, 3, 4, 5, -1].includes(byweekday.n)) {\n    throw new Error(`Invalid \"n\" param, out of range -1, 1, 2, 3, 4 , 5`);\n  }\n\n  const date = moment().utc().set({ month, year }).startOf('month');\n  const endMonth = date.clone().endOf('month');\n\n  const fullDay = DAYS.find(day => day.min === byweekday.weekday)!;\n  const ocurrences: string[] = [];\n\n  while (date.isSameOrBefore(endMonth)) {\n    if (fullDay.numeric.fullcalendar !== date.day()) {\n      date.add(1, 'day');\n\n      continue;\n    }\n\n    ocurrences.push(date.toISOString());\n\n    date.add(1, 'day');\n  }\n\n  const { length } = ocurrences;\n  const matchDate = byweekday.n === -1 ? ocurrences[length - 1] : ocurrences[byweekday.n - 1];\n\n  return matchDate;\n}\n\n/** 2021-04-29T03:30:00.000Z -> 2021-04-28T22:30:00 (Bogotá) */\nexport function dateUTCToTimezone(date: string, addOffset = false) {\n  return time(date).format(!addOffset ? 'YYYY-MM-DDTHH:mm:ss' : undefined);\n}\n\n/** Format from -05:00 to -5, +03:30 to +3:30 */\nexport function formatTimezoneHours(time: string) {\n  const symb = time[0];\n  time = time.substr(1);\n\n  const nums = time\n    .split(':')\n    .map(numberStr => Number(numberStr))\n    .filter(num => num > 0);\n\n  return symb + nums.join(':');\n}\n\nexport function generateTimezoneLabel(timezone: string) {\n  /** Moment timezone value */\n  const momentFormat = moment.tz(timezone).format('Z z');\n  const [firstPart, lastPart] = momentFormat.split(' ');\n\n  const isHourFormat = /^[+-]/.test(lastPart);\n  const time = formatTimezoneHours(firstPart);\n  const label = isHourFormat ? `GMT ${time}` : `${lastPart} (GMT ${time})`;\n\n  return `${timezone} ${label}`;\n}\n\nexport function getWeekday(date: string | Date | Moment) {\n  const currentDate = getMomentInstance(date);\n\n  const day = DAYS.find(day => day.numeric.fullcalendar === currentDate.day())!;\n\n  return day;\n}\n\n/** Pass date of the current \"eventApi\" and get it formatted to default event timezone */\nexport function eventApiDateToEventZone(eventApiDate: string, eventTimezone: string): Moment {\n  if (timezone.value === eventTimezone) {\n    return time(eventApiDate);\n  }\n\n  return time(eventApiDate, timezone.value).tz(eventTimezone);\n}\n\n// export function x(currentDate: string, oldRule: CalendarRecurringEvent, position?: Byweekday) {\n//   let range: undefined | CalendarEventPosition = undefined;\n\n//   if (isUndefined(oldRule.until) && isUndefined(oldRule.count)) {\n//     range = { start: oldRule.dtstart, end: currentDate };\n//   }\n\n//   const dates = getRuleDates({ rrule: oldRule } as any, range);\n//   const index = dates.findIndex(date => moment(date).isSame(currentDate));\n\n//   console.log({ dates, index });\n// }\n","import { CalendarDay, EventEditablePropObj, EventEditablePropType } from '@/types/calendar.type';\nimport { WeekDayMin } from './enums/global.enum';\nimport { RRule } from 'rrule';\nimport moment from 'moment-timezone';\nimport { generateTimezoneLabel } from '@/helpers/date.helper';\n\nexport const HTTP_TOKEN_HEADER = 'x-access-token';\n\nexport const UNAUTHORIZED_ERROR = 'CALENDAR_UNAUTHORIZED';\n\nexport const DAYS: CalendarDay[] = [\n  {\n    numeric: { fullcalendar: 0, rrule: RRule.SU.weekday },\n    min: WeekDayMin.Su,\n    short: 'Sun',\n    full: 'Sunday',\n  },\n  {\n    numeric: { fullcalendar: 1, rrule: RRule.MO.weekday },\n    min: WeekDayMin.Mo,\n    short: 'Mon',\n    full: 'Monday',\n  },\n  {\n    numeric: { fullcalendar: 2, rrule: RRule.TU.weekday },\n    min: WeekDayMin.Tu,\n    short: 'Tue',\n    full: 'Tuesday',\n  },\n  {\n    numeric: { fullcalendar: 3, rrule: RRule.WE.weekday },\n    min: WeekDayMin.We,\n    short: 'Wed',\n    full: 'Wednesday',\n  },\n  {\n    numeric: { fullcalendar: 4, rrule: RRule.TH.weekday },\n    min: WeekDayMin.Th,\n    short: 'Thu',\n    full: 'Thursday',\n  },\n  {\n    numeric: { fullcalendar: 5, rrule: RRule.FR.weekday },\n    min: WeekDayMin.Fr,\n    short: 'Fri',\n    full: 'Friday',\n  },\n  {\n    numeric: { fullcalendar: 6, rrule: RRule.SA.weekday },\n    min: WeekDayMin.Sa,\n    short: 'Sat',\n    full: 'Saturday',\n  },\n];\n\n/** Colors by TailwindCSS */\nexport const COLORS = [\n  // Blue 700\n  '#1D4ED8',\n  // Amber 200\n  '#FDE68A',\n  // Cool gray 700\n  '#374151',\n  // Red 700\n  '#B91C1C',\n  // Amber 700\n  '#B45309',\n  // Esmeral 700\n  '#047857',\n  // Indigo 700\n  '#4338CA',\n  // Pink 700\n  '#BE185D',\n  // Violet 300\n  '#C4B5FD',\n  // Blue gray\n  '#64748B',\n];\n\nexport const EVENT_COLORS = ['red', 'violet', 'blue', '#000', 'orange', 'lightblue'];\n\nexport const CALENDAR_COLORS = [\n  // Blue 700 (using as default)\n  '#1D4ED8',\n  // Amber 200\n  '#FDE68A',\n  // Cool gray 700\n  '#374151',\n  // Red 700\n  '#B91C1C',\n  // Amber 700\n  '#B45309',\n  // Esmeral 700\n  '#047857',\n  // Indigo 700\n  '#4338CA',\n  // Pink 700\n  '#BE185D',\n  // Violet 300\n  '#C4B5FD',\n  // Blue gray\n  '#64748B',\n];\n\n/** Properties that can be modified when his parent has chenged these */\nexport const CHILD_EVENT_EDITABLE_PROPS = [\n  'title',\n  'timezone',\n  'description',\n  'contact',\n  'case',\n  'calendarId',\n  'color',\n] as EventEditablePropType[];\n\nexport const EVENT_EDITABLE_PROPS_OBJ: EventEditablePropObj[] = [\n  Object.freeze({ prop: 'title', optional: false }),\n  Object.freeze({ prop: 'timezone', optional: true }),\n  Object.freeze({ prop: 'description', optional: true }),\n  Object.freeze({ prop: 'contact', optional: false }),\n  Object.freeze({ prop: 'case', optional: true }),\n  Object.freeze({ prop: 'calendarId', optional: false }),\n  Object.freeze({ prop: 'color', optional: true }),\n];\n\n/** Custom timezone labels */\nexport const TIMEZONE_LABELS = moment.tz.names().map(timezone => ({\n  value: timezone,\n  label: generateTimezoneLabel(timezone),\n}));\n\n/** Format to parse event dates */\nexport const FORMAT_EVENT = 'YYYY-MM-DDTHH:mm:ss';\n","/* eslint-disable max-len */\nimport { Debounce, StringNumber } from '@/types/types';\nimport moment from 'moment';\nimport { Moment } from 'moment';\n\n/** Clone object */\nexport function cloneObject<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/** Verify if the value is empty (null, undefined empty string) */\nexport function isEmpty(value: string | undefined | null) {\n  return value === '' || value === undefined || value === null;\n}\n\n/** Create custom debounce function */\nexport function createDebounce(): Debounce {\n  let timeout: any = null;\n\n  return function (callback: () => void, delay = 500) {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => callback(), delay);\n  };\n}\n\n/** Generate array of numbers */\nexport function genArrayNumbers({ from = 0, to = 10, step = 1 }) {\n  const values = [];\n  let inc = from;\n\n  while (inc <= to) {\n    values.push(inc);\n\n    inc += step;\n  }\n\n  return values;\n}\n\n/** capitalize text */\nexport function capitalize(text: string) {\n  return `${text.charAt(0).toUpperCase()}${text.slice(1)}`;\n}\n\n/** Generate random token string */\nexport function randomTokenString(length = 4): string {\n  let randomString = '';\n\n  const charts = 'aAbB0cCdDeE1fFgGh2HiIjJ3kKl4LmM5nNoOp6PqQrR7sStT8uUv_VwW9xXyYzZ';\n\n  while (randomString.length < length) {\n    randomString += charts.charAt(Math.round(Math.random() * charts.length));\n  }\n\n  return randomString;\n}\n\n/** Format date to format YYYY-MM-DD */\nexport function isoDateWithoutTime(date: string | Moment) {\n  const instance = typeof date === 'string' ? moment(date) : date;\n\n  return instance.utc().format('YYYY-MM-DD');\n}\n\nexport function removeObjectProps<T>(obj: any, ...propsToRemove: string[]): T {\n  if (!propsToRemove.length) return obj;\n\n  return Object.keys(obj).reduce((newObj, key) => {\n    if (propsToRemove.includes(key)) {\n      return newObj;\n    }\n\n    return { ...newObj, [key]: obj[key] };\n  }, {} as any);\n}\n\nexport function isObject(obj: any) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function arraysAreEquals(arr1: any[], arr2: any[]): boolean {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n\n  return arr1.every((item, index) => {\n    if (isObject(item) && isObject(arr2[index])) {\n      return objectsAreEquals(item, arr2[index]);\n    }\n\n    if (Array.isArray(item) && Array.isArray(arr2[index])) {\n      return arraysAreEquals(item, arr2[index]);\n    }\n\n    return item === arr2[index];\n  });\n}\n\nexport function objectsAreEquals(obj1: any, obj2: any): boolean {\n  const obj1Keys = Object.keys(obj1);\n  const obj2Keys = Object.keys(obj2);\n\n  if (obj1Keys.length !== obj2Keys.length) {\n    return false;\n  }\n\n  return obj1Keys.every(key => {\n    if (isObject(obj1[key]) && isObject(obj2[key])) {\n      return objectsAreEquals(obj1[key], obj2[key]);\n    }\n\n    if (Array.isArray(obj1[key]) && Array.isArray(obj2[key])) {\n      return arraysAreEquals(obj1[key], obj2[key]);\n    }\n\n    return obj1[key] === obj2[key];\n  });\n}\n\nexport function getObjChangedProps<T>(oldObj: any, newObj: any): Partial<T> {\n  const oldKeys = Object.keys(oldObj);\n  const newKeys = Object.keys(newObj);\n\n  const evaluateKeys = oldKeys.length > newKeys.length ? oldKeys : newKeys;\n\n  return evaluateKeys.reduce((changes, key) => {\n    // Properties are objects, use recursivity\n    if (isObject(oldObj[key]) && isObject(newObj[key])) {\n      if (!objectsAreEquals(oldObj[key], newObj[key])) {\n        return {\n          ...changes,\n          [key]: newObj[key],\n        };\n      }\n\n      return changes;\n    }\n\n    if (Array.isArray(oldObj[key]) && Array.isArray(newObj[key])) {\n      if (!arraysAreEquals(oldObj[key], newObj[key])) {\n        return { ...changes, [key]: newObj[key] };\n      }\n\n      return changes;\n    }\n\n    if (oldObj[key] !== newObj[key]) {\n      return { ...changes, [key]: newObj[key] };\n    }\n\n    return changes;\n  }, {} as any);\n}\n\n/** Remove nullable properties and return sanitized object */\nexport function removeNullableProps(obj: any, ...exclude: string[]) {\n  if (!isObject(obj)) {\n    throw new Error(`The param \"obj\" must be an object`);\n  }\n\n  const propsToRemove = Object.keys(obj).filter(prop => {\n    if (exclude && exclude.includes(prop)) {\n      return false;\n    }\n\n    return obj[prop] === null;\n  });\n\n  if (!propsToRemove.length) {\n    return obj;\n  }\n\n  return removeObjectProps(obj, ...propsToRemove);\n}\n\nexport function isArrayEmpty(array: any[]): boolean {\n  return !array.length;\n}\n\nexport function isArrayAndHasItems(array: any): boolean {\n  return Array.isArray(array) && !isArrayEmpty(array);\n}\n\nexport function isNull(value: any): boolean {\n  return value === null;\n}\n\nexport const isUndefined = (value: any): boolean => {\n  return typeof value === 'undefined';\n};\n\nexport function isObjectEmpty(obj: any) {\n  return isArrayEmpty(Object.keys(obj));\n}\n\nexport function valueIs(value: StringNumber, ...options: StringNumber[]) {\n  return options.includes(value);\n}\n\n// validate email\nexport function isValidEmail(email: string): boolean {\n  // eslint-disable-next-line prettier/prettier\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(email);\n}\n","import { time, timezone } from '@/composables/use-time';\nimport {\n  Byweekday,\n  CalendarDay,\n  CalendarDayNumeric,\n  CalendarEvent,\n  CalendarEventDuration,\n  CalendarEventDurationExtended,\n  CalendarEventPosition,\n  CalendarRecurringEvent,\n  EventFrequencyType,\n  FormattedEventDatesParams,\n  GetRecurrenceNewMonthParams,\n  GetRuleMatchesParams,\n  UpdateDateFromDuration,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { DAYS, FORMAT_EVENT } from '@/utils/constants';\nimport {\n  isArrayEmpty,\n  cloneObject,\n  isoDateWithoutTime,\n  removeObjectProps,\n  removeNullableProps,\n  isArrayAndHasItems,\n  isUndefined,\n} from '@/utils/functions';\nimport moment, { Moment } from 'moment';\nimport { RRule } from 'rrule';\n\n/** Format event date according \"allDay\" field value */\nexport const formatEventDayByAllDay = (date: string, allDay: boolean) => {\n  if (allDay) {\n    return moment.utc(date).format('YYYY-MM-DD');\n  }\n\n  return date;\n};\n\n/** Get new start month of recurrence (Monthly by day) */\nexport const getRecurrenceNewMonth = ({\n  dateAbsulute,\n  eventNewPosition,\n  eventOldPosition,\n}: GetRecurrenceNewMonthParams) => {\n  const oldMonth = new Date(eventOldPosition).getUTCMonth();\n  const newMonth = new Date(eventNewPosition).getUTCMonth();\n\n  if (oldMonth === newMonth) {\n    return new Date(dateAbsulute).getUTCMonth();\n  }\n\n  return moment\n    .utc(dateAbsulute)\n    .add(newMonth - oldMonth, 'months')\n    .get('months');\n};\n\nexport const isRecurrenceMonthlyByDay = (rrule: CalendarRecurringEvent) => {\n  return rrule.byweekday !== undefined && rrule.freq === 'MONTHLY';\n};\n\nexport const dayStringToNumeric = (weekday: WeekDayMinType) => {\n  const day = DAYS.find(item => item.min === weekday)!;\n\n  return day.numeric.rrule;\n};\n\nexport const dayNumericToString = (weekday: number, type: keyof CalendarDayNumeric = 'rrule') => {\n  const day = DAYS.find(item => item.numeric[type] === weekday)!;\n\n  return day.min;\n};\n\nexport const getFullDay = (weekday: WeekDayMinType): CalendarDay => {\n  const day = DAYS.find(item => item.min === weekday)!;\n\n  return { ...day };\n};\n\nexport function byweekdayPropToStr(byweekday: Byweekday<number | WeekDayMinType>[]) {\n  return byweekday.map((item: Byweekday<number | WeekDayMinType>) => {\n    if (typeof item.weekday === 'string') {\n      return item.weekday;\n    }\n\n    return dayNumericToString(item.weekday);\n  });\n}\n\n/** Transform \"byweekday\" from FullCalendar to backend notation */\nexport const byweekdayFromUIToBackend = (rrule: CalendarRecurringEvent) => {\n  let { byweekday } = rrule!;\n\n  if (!byweekday) {\n    return rrule;\n  }\n\n  (byweekday as any) = (rrule!.byweekday! as any[]).map(item => {\n    // Set string literal\n    if (rrule!.freq !== 'MONTHLY') {\n      return { weekday: item };\n    }\n\n    // Transform 0 -> MO\n    return { ...item, weekday: dayNumericToString(item.weekday) };\n  });\n\n  rrule!.byweekday = byweekday;\n\n  return rrule;\n};\n\n/** Transform \"byweekday\" from backend notation to FullCalendar */\nexport const byweekdayFromBackendToUI = (rrule: CalendarRecurringEvent) => {\n  let { byweekday } = rrule!;\n\n  if (!byweekday || (Array.isArray(byweekday) && !byweekday.length)) {\n    // if (!byweekday) {\n    return rrule;\n  }\n\n  (byweekday as any) = (rrule!.byweekday! as Byweekday[]).map(item => {\n    // Set string literal\n    if (rrule!.freq !== 'MONTHLY') {\n      return (item as Byweekday).weekday;\n    }\n\n    // Transform MO -> 0\n    return { ...(item as Byweekday), weekday: dayStringToNumeric((item as Byweekday).weekday) };\n  });\n\n  rrule!.byweekday = byweekday;\n\n  return rrule;\n};\n\nexport function formatEventToFullCalendar(event: CalendarEvent) {\n  // Recurring events can't be resized\n\n  // All day event\n  if (event.allDay) {\n    return event;\n  }\n\n  if (!event.rrule) {\n    event.start = moment.tz(event.start!, event.timezone).format(FORMAT_EVENT);\n    event.end = moment.tz(event.end!, event.timezone).format(FORMAT_EVENT);\n    return event;\n  }\n\n  // Format dates\n  const newEvent = cloneObject(event);\n\n  newEvent.rrule!.dtstart = moment.tz(newEvent.rrule!.dtstart, event.timezone).format(FORMAT_EVENT);\n\n  if (newEvent.rrule!.until) {\n    newEvent.rrule!.until = moment.tz(newEvent.rrule!.until, event.timezone).format(FORMAT_EVENT);\n  }\n\n  if (isArrayAndHasItems(newEvent.exdate)) {\n    newEvent.exdate = newEvent.exdate!.map(d => moment.tz(d, event.timezone).format(FORMAT_EVENT));\n  }\n\n  return newEvent;\n}\n\n/** Transform backend event to fullcalendar event allowed */\nexport function formatBackendEvent(event: CalendarEvent): CalendarEvent {\n  const isRecurringEvent = !!event.rrule;\n  let propsToRemove: string[] = [];\n\n  if (isRecurringEvent) {\n    propsToRemove = ['start', 'end'];\n\n    if (event.allDay) {\n      event.exdate = event.exdate!.map(d => isoDateWithoutTime(d));\n    }\n\n    event.rrule = byweekdayFromBackendToUI(event.rrule!);\n  } else {\n    propsToRemove = ['duration', 'rrule', 'exdate'];\n  }\n\n  /** Event object according to his type */\n  let eventObject = removeObjectProps(event, ...propsToRemove) as CalendarEvent;\n  // Remove null properties\n  eventObject = removeNullableProps(eventObject);\n\n  // Sanitize \"rrule\" properties\n  if (isRecurringEvent) {\n    eventObject.rrule = removeNullableProps(eventObject.rrule);\n  }\n\n  if (!eventObject.allDay) {\n    return eventObject;\n  }\n\n  return formatEventDates(eventObject);\n}\n\nexport const getCurrentAvailableTimeRange = (now: Moment) => {\n  let minutes = now.get('minutes');\n\n  while (minutes % 5 !== 0) {\n    minutes++;\n  }\n\n  now.set({\n    minutes,\n    seconds: 0,\n    milliseconds: 0,\n  });\n\n  return {\n    start: now,\n    end: now.clone().add(1, 'hours'),\n  };\n};\n\n/** Convert date string to ISO  */\nexport const convertOffsetTimeToUTC = (strDate: string): string => {\n  return new Date(strDate).toISOString();\n};\n\nexport function formatEventDates(event: CalendarEvent) {\n  const isRecurringEvent = !!event.rrule;\n\n  // Normal event\n  if (!isRecurringEvent) {\n    event.start = isoDateWithoutTime(event.start!);\n    event.end = isoDateWithoutTime(event.end!);\n\n    return event;\n  }\n\n  // Recurring event\n  event.rrule!.dtstart = isoDateWithoutTime(event.rrule!.dtstart);\n\n  if (event.rrule!.until) {\n    event.rrule!.until = isoDateWithoutTime(event.rrule!.until);\n  }\n\n  return event;\n}\n\n/** Convert calendar frequency to RRule valid value **/\nexport const freqToRRuleFrequency = (frequency: EventFrequencyType) => {\n  return RRule.FREQUENCIES.findIndex(freq => freq === frequency);\n};\n\nexport const getRuleDates = (event: CalendarEvent, between?: { start: string; end: string }) => {\n  if (!event.rrule) {\n    throw new Error('Event is not recurring');\n  }\n\n  const { rrule } = event;\n  const freq = freqToRRuleFrequency(rrule.freq as EventFrequencyType);\n\n  const options: any = {\n    count: rrule.count,\n  };\n\n  if (rrule.until && typeof rrule.count === 'undefined') {\n    options.until = moment.utc(rrule.until).toDate();\n  }\n\n  if (rrule.byweekday && !isArrayEmpty(rrule.byweekday)) {\n    const newRRule = byweekdayFromBackendToUI(cloneObject(event.rrule));\n\n    options.byweekday = newRRule.byweekday;\n  }\n\n  const rule = new RRule({\n    freq,\n    interval: rrule.interval,\n    dtstart: moment.utc(rrule.dtstart).toDate(),\n    ...options,\n  });\n\n  let dates = [];\n\n  if (between) {\n    dates = rule.between(moment.utc(between.start).toDate(), moment.utc(between.end).toDate());\n  } else {\n    dates = rule.all();\n  }\n\n  return dates.map(d => d.toISOString());\n};\n\nexport const getFormattedRuleDates = (params: FormattedEventDatesParams) => {\n  const { realStart, offset, event } = cloneObject(params);\n\n  const dates = getRuleDates(\n    { ...event, rrule: { ...event.rrule!, dtstart: realStart } },\n    params.between,\n  );\n\n  return dates.map(date => {\n    const local = date.substr(0, 19);\n\n    return new Date(`${local}${offset}`).toISOString();\n  });\n};\n\nexport const getDatesDaysDiff = (date1: string | Moment, date2: string | Moment) => {\n  date1 = isoDateWithoutTime(date1);\n  date2 = isoDateWithoutTime(date2);\n\n  return moment(date2).diff(date1, 'days');\n};\n\nexport const getRecurrenceDatesRange = (recurringEvent: CalendarEvent) => {\n  if (!recurringEvent.rrule) {\n    throw new Error(`Event should be recurring`);\n  }\n\n  const { until, dtstart } = recurringEvent.rrule;\n\n  const betweenDates = {\n    start: moment.utc(dtstart).subtract(1, 'days').toISOString(),\n    end: until || '',\n  };\n\n  if (until) {\n    betweenDates.end = moment.utc(until).add(1, 'days').toISOString();\n  } else {\n    betweenDates.end = moment.utc(dtstart).add(1, 'week').toISOString();\n  }\n\n  const matches = getRuleDates(recurringEvent, betweenDates);\n\n  if (isArrayEmpty(matches)) {\n    throw new Error(`Invalid recurring rule`);\n  }\n\n  const res = { first: matches[0], last: null as null | string };\n\n  if (until) {\n    res.last = matches[matches.length - 1];\n\n    if (!recurringEvent.allDay) {\n      const oldUntil = moment(until);\n      const newUntil = moment(res.last).set({\n        hours: oldUntil.get('hours'),\n        minutes: oldUntil.get('minutes'),\n        seconds: oldUntil.get('seconds'),\n      });\n\n      res.last = newUntil.toISOString();\n    }\n  }\n\n  return res;\n};\n\nexport const getRuleMatches = ({\n  recurringEvent,\n  betweenDates,\n  exclude = true,\n}: GetRuleMatchesParams) => {\n  const event = cloneObject(recurringEvent);\n  let matches: string[] = [];\n\n  // Add and subtract one day for get all matches (? i don't know bro, is for the library)\n  if (betweenDates) {\n    betweenDates.start = moment.utc(betweenDates.start).subtract(1, 'days').toISOString();\n    betweenDates.end = moment.utc(betweenDates.end).add(1, 'days').toISOString();\n  }\n\n  // Format dates to specific timezone\n  if (!event.allDay && isArrayAndHasItems(event.rrule!.byweekday)) {\n    let dtstart = time(event.rrule!.dtstart);\n    let until: undefined | Moment | string;\n\n    // Finish by \"until\" field\n    if (event.rrule?.until && isUndefined(event.rrule!.count)) {\n      until = time(event.rrule?.until);\n    }\n\n    let between: any = undefined as undefined;\n\n    // Format range dates too\n    if (betweenDates) {\n      between = {};\n\n      // Convert to current timezone\n      between.start = time(betweenDates.start);\n      between.end = time(betweenDates.end);\n    }\n\n    // Convert to event timezone\n    if (event.timezone !== timezone.value) {\n      dtstart = time(event.rrule!.dtstart, event.timezone);\n\n      until && (until = time(until, event.timezone));\n\n      if (betweenDates) {\n        between.start = time(betweenDates.start, event.timezone);\n        between.end = time(betweenDates.end, event.timezone);\n      }\n    }\n\n    const offset = dtstart.clone().format('Z');\n\n    // Fake UTC\n    const realStart = dtstart.clone().format(FORMAT_EVENT) + '.000Z';\n\n    // Fake until UTC\n    if (until) {\n      until = (until as Moment).clone().format(FORMAT_EVENT) + '.000Z';\n      // Assing fake until\n      event.rrule!.until = until;\n    }\n\n    if (between) {\n      between.start = between.start.format(FORMAT_EVENT) + '.000Z';\n      between.end = between.end.format(FORMAT_EVENT) + '.000Z';\n    }\n\n    matches = getFormattedRuleDates({\n      realStart,\n      offset,\n      event,\n      between,\n    });\n  } else {\n    // Get in UTC\n    matches = getRuleDates(recurringEvent, betweenDates);\n  }\n\n  if (!matches.length) {\n    return [];\n  }\n\n  // Remove excluded dates\n  if (exclude && isArrayAndHasItems(recurringEvent.exdate)) {\n    matches = matches.filter(match =>\n      recurringEvent.exdate!.every(exdate => !moment.utc(exdate).isSame(match)),\n    );\n  }\n\n  return matches;\n};\n\nexport const isFirstEventOfRecurrence = (\n  dateToAnalize: string,\n  betweenDates: CalendarEventPosition,\n  recurringEvent: CalendarEvent,\n) => {\n  if (!recurringEvent.rrule) {\n    throw new Error(`Event should be recurring`);\n  }\n\n  const matches = getRuleMatches({ recurringEvent, betweenDates });\n\n  if (isArrayEmpty(matches)) {\n    return false;\n  }\n\n  const firstDate = matches[0];\n  return moment(firstDate).isSame(dateToAnalize);\n};\n\nexport const isLastEventOfRecurrence = (\n  dateToAnalize: string,\n  betweenDates: CalendarEventPosition,\n  recurringEvent: CalendarEvent,\n) => {\n  if (!recurringEvent.rrule) {\n    throw new Error(`Event should be recurring`);\n  }\n\n  if (!recurringEvent.rrule.until) {\n    return false;\n  }\n\n  if (new Date(betweenDates.end) < new Date(recurringEvent.rrule.until)) {\n    return false;\n  }\n\n  const matches = getRuleMatches({ recurringEvent, betweenDates });\n\n  if (isArrayEmpty(matches)) {\n    return false;\n  }\n\n  const lastDate = matches[matches.length - 1];\n  return moment(lastDate).isSame(dateToAnalize);\n};\n\n/** Know if the durations are different */\nexport const isDurationDifferent = (\n  duration1: CalendarEventDuration,\n  duration2: CalendarEventDuration,\n) => {\n  const keys = Object.keys(duration1) as (keyof CalendarEventDuration)[];\n\n  return keys.some(key => duration1[key] !== duration2[key]);\n};\n\nexport const getSelectedWeekdaysShort = (selectedDays: boolean[]) => {\n  return selectedDays.reduce<string[]>((filtered, val, idx) => {\n    if (!val) {\n      return filtered;\n    }\n\n    return [...filtered, DAYS[idx].min];\n  }, []);\n};\n\n// TODO:: remove floor property\nexport const generateEventDuration = (\n  start: Moment | string,\n  end: Moment | string,\n  floor = false,\n): CalendarEventDurationExtended => {\n  /** Difference in minutes */\n  const duration = moment(end).diff(start, 'minutes');\n\n  let days = duration / 1440;\n  let hours = (duration % 1440) / 60;\n  let minutes = duration % 60;\n\n  if (!floor) {\n    days = parseInt(days.toString(), 10);\n    hours = parseInt(hours.toString(), 10);\n    minutes = parseInt(minutes.toString(), 10);\n  } else {\n    days = Math.floor(days);\n    hours = Math.floor(hours);\n    minutes = Math.floor(minutes);\n  }\n\n  return {\n    days,\n    hours,\n    minutes,\n    daysDiff: getDatesDaysDiff(start, end),\n  };\n};\n\nexport const isDurationEmpty = (duration: CalendarEventDuration) => {\n  const keys = Object.keys(duration) as (keyof CalendarEventDuration)[];\n\n  return keys.every(key => duration[key] === 0);\n};\n\nexport const getDaysOfDuration = (duration: CalendarEventDuration) => {\n  if (duration.days === 0) {\n    return 0;\n  }\n\n  let days = duration.days;\n\n  if (duration.hours > 0) {\n    days++;\n  }\n\n  return days;\n};\n\nexport const updateDateFromDuration = ({\n  date,\n  duration,\n  allDay = true,\n}: UpdateDateFromDuration): string => {\n  if (isDurationEmpty(duration)) {\n    return allDay ? isoDateWithoutTime(date) : date;\n  }\n\n  const newDate = moment\n    .utc(date)\n    .add(duration.days, 'days')\n    .add(duration.hours, 'hours')\n    .add(duration.minutes, 'minutes');\n\n  return allDay ? isoDateWithoutTime(newDate) : newDate.toISOString();\n};\n\nexport const subtractDate = ({ date, duration, allDay = true }: UpdateDateFromDuration): string => {\n  if (isDurationEmpty(duration)) {\n    return allDay ? isoDateWithoutTime(date) : date;\n  }\n\n  const newDate = moment\n    .utc(date)\n    .subtract(duration.days, 'days')\n    .subtract(duration.hours, 'hours')\n    .subtract(duration.minutes, 'minutes');\n\n  return allDay ? isoDateWithoutTime(newDate) : newDate.toISOString();\n};\n\n/** Increment/reduce a weekday (SU, MO, TU...) in days */\nexport const updateWeekday = (currentDay: WeekDayMinType, addDaysCount: number) => {\n  if (addDaysCount === 0) {\n    return currentDay;\n  }\n\n  const index = DAYS.findIndex(day => day.min.toUpperCase() === currentDay.toUpperCase())!;\n\n  const isSum = addDaysCount > 0;\n\n  let newIndexDay = isSum ? index + addDaysCount : index - Math.abs(addDaysCount);\n\n  // Add days\n  if (isSum) {\n    // Reduce it to less or equals than 6\n    while (newIndexDay > 6) {\n      newIndexDay -= 7;\n    }\n    // Substract days\n  } else {\n    // increment it to upper or equals than 0\n    while (newIndexDay < 0) {\n      newIndexDay += 7;\n    }\n  }\n\n  return DAYS[newIndexDay].min;\n};\n\nexport const updateByweekdayProp = (weekdays: WeekDayMinType[], days: number) => {\n  return weekdays.map(weekday => {\n    return updateWeekday(weekday, days);\n  });\n};\n\n/** Get week number name in the current month */\nexport const getWeekNumberNameInMonth = (date: Moment) => {\n  const prefixes = ['first', 'second', 'third', 'fourth', 'fifth'];\n  const index = Math.floor(date.date() / 7);\n\n  return prefixes[index];\n};\n\nexport const splitEventExclusions = (exclusions: string[], until: string) => {\n  return exclusions.reduce(\n    (obj, date) => {\n      if (moment(date).isSameOrBefore(until)) {\n        return { ...obj, current: [...obj.current, date] };\n      }\n\n      return { ...obj, new: [...obj.new, date] };\n    },\n    { current: [] as string[], new: [] as string[] },\n  );\n};\n","export enum EventColors {\n  Violet1 = '#5c0683',\n  Violet2 = '#74259b',\n  Violet3 = '#8d3eb3',\n  Violet4 = '#b866d8',\n  Violet5 = '#e48fff',\n\n  LightBlue1 = '#195e8f',\n  LightBlue2 = '#3974a7',\n  LightBlue3 = '#548bc0',\n  LightBlue4 = '#80b4df',\n  LightBlue5 = '#abdeff',\n\n  Green1 = '#576800',\n  Green2 = '#6f7f15',\n  Green3 = '#879627',\n  Green4 = '#b1bf50',\n  Green5 = '#ddea79',\n\n  Pink1 = '#c94e97',\n  Pink2 = '#e367af',\n  Pink3 = '#fe80c8',\n  Pink4 = '#ffade3',\n  Pink5 = '#ffd7ff',\n\n  Orange1 = '#c75d3a',\n  Orange2 = '#e37450',\n  Orange3 = '#ff8c66',\n  Orange4 = '#ffb78d',\n  Orange5 = '#ffe1b6',\n\n  // OliveGreen1 = '#918b00',\n  // OliveGreen2 = '#aba31c',\n  // OliveGreen3 = '#c5bb30',\n  // OliveGreen4 = '#e2dc5c',\n  // OliveGreen5 = '#ffff86',\n\n  // Cream1 = '#bf8d50',\n  // Cream2 = '#d9a567',\n  // Cream3 = '#f4bd7e',\n  // Cream4 = '#fbdea7',\n  // Cream5 = '#ffffd1',\n\n  // Beige1 = '#c09f94',\n  // Beige2 = '#d9b7ac',\n  // Beige3 = '#f3d0c4',\n  // Beige4 = '#fae7e1',\n  // Beige5 = '#fff3f0',\n}\n\nexport enum CalendarColors {\n  // Blue1 = '#002993',\n  // Blue2 = '#1d3cac',\n  // Blue3 = '#3050c5',\n  // /** Default \"Appointments\" color */\n  // Blue4 = '#6775e2',\n  // Blue5 = '#949cff',\n\n  // Violet1 = '#5c0683',\n  // Violet2 = '#74259b',\n  // Violet3 = '#8d3eb3',\n  // Violet4 = '#b866d8',\n  // Violet5 = '#e48fff',\n\n  // Pink1 = '#8a0066',\n  // Pink2 = '#a4167d',\n  // Pink3 = '#be2794',\n  // Pink4 = '#df59bd',\n  // Pink5 = '#ff84e8',\n\n  // Red1 = '#972703',\n  // Red2 = '#b23f1a',\n  // Red3 = '#ce572f',\n  // /** Default \"Personal\" color */\n  // Red4 = '#e78054',\n  // Red5 = '#ffa97b',\n\n  // Green1 = '#576800',\n  // Green2 = '#6f7f15',\n  // Green3 = '#879627',\n  // Green4 = '#b1bf50',\n  // Green5 = '#ddea79',\n\n  RedVioletColorWheel = '#8a2846',\n  Blush = '#e05780',\n  AmaranthPink = '#ff9ebb',\n  Pink = '#ffc2d4',\n  PiggyPink = '#ffe0e9',\n\n  PacificBlue2 = '#04a6c2',\n  BlueGreen = '#0899ba',\n  CGBlue = '#0f80aa',\n  SapphireBlue = '#16679a',\n  LapisLazuli = '#1a5b92',\n\n  DarkLiver = '#584b53',\n  CopperRose = '#9d5c63',\n  PeriwinkleCrayola = '#d6e3f8',\n  Seashell = '#fef5ef',\n  DesertSand = '#e4bb97',\n\n  TurquoiseBlue = '#69fff1',\n  Emerald = '#63d471',\n  ForestGreenCrayola = '#63a46c',\n  DarkOliveGreen = '#6a7152',\n  PineTree = '#233329',\n\n  LightCoral = '#f7787b',\n  SpanishPink = '#f8b6b8',\n  QueenPink = '#ebcacc',\n  MiddleBlue = '#81c0c1',\n  ViridianGreen = '#3a9fa2',\n}\n","import { Byweekday, CalendarRecurringEvent, WeekDayMinType } from '@/types/calendar.type';\nimport { DAYS } from '@/utils/constants';\nimport { DayPosition, EventFrequency, WeekDayMin } from '@/utils/enums/global.enum';\nimport moment from 'moment';\n\nexport default class {\n  constructor(private readonly _rrule: CalendarRecurringEvent) {}\n\n  private _getByweekday() {\n    const { byweekday } = this._rrule;\n\n    if (!byweekday) {\n      throw new Error(`Field \"byweekday\" is not found`);\n    }\n\n    return byweekday;\n  }\n\n  private _matchByweekday(item: WeekDayMinType | Byweekday, minDay: WeekDayMinType): boolean {\n    if (typeof item === 'string') {\n      return item === minDay;\n    }\n\n    return item.weekday === minDay;\n  }\n\n  /** Convert SU -> Sunday, Mo -> Monday */\n  private _generateWeeklyLabel(): string {\n    const byweekday = this._getByweekday();\n\n    // const labels = DAYS.filter(day => byweekday.includes(day.min)).map(day => day.full);\n    const labels = DAYS.filter(day => {\n      return byweekday.some((item: WeekDayMinType | Byweekday) =>\n        this._matchByweekday(item, day.min),\n      );\n    }).map(day => day.full);\n\n    return labels.join(', ');\n  }\n\n  /** Verify if the selection days are: Monday, Tuesday, Wednesday, Thursday, Friday */\n  private _areSeletionDaysWeekdays(): boolean {\n    const byweekday = this._getByweekday();\n\n    const weekdays = [WeekDayMin.Mo, WeekDayMin.Tu, WeekDayMin.We, WeekDayMin.Th, WeekDayMin.Fr];\n\n    if (byweekday.length !== 5) {\n      return false;\n    }\n\n    // return weekdays.every(day => byweekday.includes(day));\n    return weekdays.every(day => {\n      return byweekday.some((item: WeekDayMinType | Byweekday) => this._matchByweekday(item, day));\n    });\n  }\n\n  private _gerateMonthlyByweekday(byweekday: Byweekday) {\n    const day = DAYS.find(item => item.min === byweekday.weekday)!;\n    let position = '';\n\n    switch (byweekday.n!) {\n      case DayPosition.Last:\n        position = 'last';\n        break;\n\n      case DayPosition.First:\n        position = 'first';\n        break;\n\n      case DayPosition.Second:\n        position = 'second';\n        break;\n\n      case DayPosition.Third:\n        position = 'third';\n        break;\n\n      case DayPosition.Fourth:\n        position = 'fourth';\n        break;\n\n      default:\n        position = '5th';\n        break;\n    }\n\n    // example: last Friday\n    return `${position} ${day.full}`;\n  }\n\n  private _generateSelectionAsString() {\n    const today = moment(this._rrule.dtstart);\n\n    switch (this._rrule.freq) {\n      case EventFrequency.Daily:\n        if (this._rrule.interval === 1) {\n          return 'Daily';\n        }\n\n        return `Every ${this._rrule.interval} days`;\n\n      case EventFrequency.Weekly: {\n        const isWeekdays = this._areSeletionDaysWeekdays();\n\n        const rest = isWeekdays ? 'weekdays' : this._generateWeeklyLabel();\n\n        if (this._rrule.interval === 1) {\n          return `Weekly on ${rest}`;\n        }\n\n        return `Every ${this._rrule.interval} weeks on ${rest}`;\n      }\n\n      case EventFrequency.Monthly: {\n        let day = today.format('Do'); // Friday\n\n        if (this._rrule.byweekday) {\n          // the last Friday\n          day = `the ${this._gerateMonthlyByweekday(this._rrule.byweekday[0] as Byweekday)}`;\n        }\n\n        if (this._rrule.interval === 1) {\n          return `Monthly on ${day}`;\n        }\n\n        return `Every ${this._rrule.interval} months on ${day}`;\n      }\n\n      // Yearly\n      default:\n        if (this._rrule.interval === 1) {\n          return `Yearly on ${today.format('MMMM D')}`;\n        }\n\n        return `Every ${this._rrule.interval} years on ${today.format('MMMM D')}`;\n    }\n  }\n\n  /** Transform ['MO'] to [false, true, false, false, false, false, false] */\n  public getCustomSelectedDays(): boolean[] {\n    const byweekday = this._getByweekday();\n\n    // return DAYS.map(day => byweekday.some(minDay => minDay === day.min));\n    return DAYS.map(day =>\n      byweekday.some((item: WeekDayMinType | Byweekday) => this._matchByweekday(item, day.min)),\n    );\n  }\n\n  public getLabel() {\n    let label = this._generateSelectionAsString();\n\n    if (typeof this._rrule.count !== 'undefined') {\n      label += ` for ${this._rrule.count} times`;\n    } else {\n      if (this._rrule.until) {\n        label += ` until ${moment(this._rrule.until).format('MMM D, YYYY')}`;\n      }\n    }\n\n    return label;\n  }\n\n  /** Know if the rule is a custom recurrence */\n  public isCustom() {\n    const { byweekday = [] } = this._rrule;\n\n    if (this._rrule.interval > 1 || byweekday.length > 1 || this._rrule.until) {\n      return true;\n    }\n\n    if (this._rrule.freq === 'WEEKLY') {\n      const todayIndex = moment(this._rrule.dtstart).day();\n      const todayMin = DAYS[todayIndex].min;\n\n      return (byweekday as any[]).every((item: WeekDayMinType | Byweekday) =>\n        this._matchByweekday(item, todayMin),\n      );\n      // return !byweekday.includes(todayMin);\n    }\n\n    return false;\n  }\n}\n","import { reactive, readonly, toRefs } from 'vue';\n\nconst state = reactive({\n  isLoading: false,\n  awaitLoading: false,\n});\n\nconst mutations = {\n  setLoading: (val: boolean) => (state.isLoading = val),\n  toggleLoading: () => (state.isLoading = !state.isLoading),\n  setAwaitLoading: (val: boolean) => {\n    state.awaitLoading = val;\n\n    if (!val && state.isLoading) {\n      state.isLoading = false;\n    }\n  },\n};\n\n/** Export such as Vuex store for usage in external files to the Vue components */\nexport const globalStore = {\n  ...toRefs(readonly(state)),\n  ...mutations,\n};\n\n/** Vue composable */\nexport default function () {\n  return globalStore;\n}\n","import axios, { AxiosRequestConfig } from 'axios';\nimport { print } from 'graphql/language/printer';\nimport { globalStore } from '@/composables/use-global';\n\nfunction createInstance(config: AxiosRequestConfig) {\n  /** Axios instance */\n  const _axios = axios.create(config);\n  const { isLoading, setLoading, awaitLoading } = globalStore;\n\n  const GRAPHQL_PROPS = ['query', 'mutation'];\n\n  _axios.setBaseURL = url => {\n    _axios.defaults.baseURL = url;\n  };\n\n  // Define custom functions\n  _axios.setToken = value => {\n    // Set Axios headers\n    Object.keys(value).forEach(header => {\n      _axios.defaults.headers.common[header] = value[header];\n    });\n  };\n\n  _axios.getToken = (...headers) => {\n    if (headers.length === 1) {\n      return _axios.defaults.headers.common[headers[0]] || null;\n    }\n\n    const headersObject = headers.reduce((obj, header) => {\n      if (!_axios.defaults.headers.common[header]) {\n        return obj;\n      }\n\n      return { ...obj, [header]: _axios.defaults.headers.common[header] };\n    }, {});\n\n    if (!Object.keys(headersObject).length) {\n      return null;\n    }\n\n    return headersObject;\n  };\n\n  _axios.graphql = data => _axios.post('/graphql', { ...data, isGraphql: true });\n\n  /** Axios intercept request */\n  _axios.interceptors.request.use(\n    function (config) {\n      // Show loading\n      !isLoading.value && setLoading(true);\n\n      // Using \"graphql\" method\n      if (config.data.isGraphql) {\n        delete config.data.isGraphql;\n\n        for (const prop in config.data) {\n          // Format query and mutation\n          if (GRAPHQL_PROPS.includes(prop)) {\n            config.data['query'] = print(config.data[prop]);\n          }\n        }\n      }\n      // Do something before request is sent\n      return config;\n    },\n    function (error) {\n      // Hide loading\n      isLoading.value && setLoading(false);\n      // Do something with request error\n      return Promise.reject(error);\n    },\n  );\n\n  // Add a response interceptor\n  _axios.interceptors.response.use(\n    function (response) {\n      // Hide loading\n      if (isLoading.value && !awaitLoading.value) {\n        setLoading(false);\n      }\n      // isLoading.value && setLoading(false);\n      // Do something with response data\n      return response;\n    },\n    function (error) {\n      // Hide loading\n      isLoading.value && setLoading(false);\n      // Do something with response error\n      return Promise.reject(error);\n    },\n  );\n\n  return _axios;\n}\n\nexport default createInstance;\n","import { createHttpInstance } from './index';\n\nexport default createHttpInstance({\n  baseURL: process.env.VUE_APP_PRIMA_API_URL,\n});\n","import gql from 'graphql-tag';\n\nexport const CalendarGQL = {\n  fragments: {\n    CalendarFullFragment: gql`\n      fragment CalendarFullFragment on Calendar {\n        id\n        userId\n        name\n        show\n        color\n        isDefault\n        context\n        permissions {\n          admin {\n            all\n            read\n          }\n          global {\n            all\n            read\n          }\n          individual {\n            userId\n            all\n            read\n          }\n        }\n      }\n    `,\n    CalendarWithoutPermissionsFragment: gql`\n      fragment CalendarWithoutPermissionsFragment on Calendar {\n        id\n        userId\n        name\n        show\n        color\n        isDefault\n        context\n      }\n    `,\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const EventGQL = {\n  fragments: {\n    FullEventFragment: gql`\n      fragment FullEventFragment on CalendarEvent {\n        id\n        calendarContext\n        calendarId\n        title\n        createdBy\n        timezone\n        allDay\n        start\n        end\n        color\n        duration {\n          days\n          hours\n          minutes\n        }\n        rrule {\n          freq\n          interval\n          dtstart\n          byweekday {\n            weekday\n            n\n          }\n          until\n          count\n        }\n        exdate\n        contact\n        case\n        description\n        parentId\n        location\n        attendees\n      }\n    `,\n  },\n};\n","import gql from 'graphql-tag';\n\nexport const UserGQL = {\n  fragments: {\n    UserBasicsFragment: gql`\n      fragment UserBasicsFragment on Users {\n        id\n        email\n        admin\n        firstName\n        middleName\n        lastName\n      }\n    `,\n  },\n};\n","import { isArrayAndHasItems } from '@/utils/functions';\n\ntype Action = 'read' | 'all' | 'quit';\n\ninterface BackendPermission {\n  read: boolean;\n  create: boolean;\n  edit: boolean;\n  delete: boolean;\n  all: boolean;\n  userIds: readonly number[];\n}\n\ninterface BackendPermissions {\n  read: Partial<BackendPermission>;\n  all: Partial<BackendPermission>;\n  quit: Partial<BackendPermission>;\n}\n\nexport function generateBackendNotation(action: Action, ...userIds: number[]) {\n  const permissions: BackendPermissions = {\n    read: {\n      read: true,\n      create: false,\n      edit: false,\n      delete: false,\n    },\n    all: { all: true },\n    quit: { all: false },\n  };\n\n  const permission = permissions[action];\n\n  if (isArrayAndHasItems(userIds)) {\n    permission.userIds = Object.freeze([...userIds!]);\n  }\n\n  return Object.freeze(permission);\n}\n","import { primaApi } from '@/api';\nimport {\n  CalendarContextType,\n  CalendarCreate,\n  CalendarEdit,\n  CalendarEvent,\n  CalendarEventCreate,\n  CalendarEventPosition,\n  CalendarOriginalSource,\n  CalendarSimple,\n  CalendarSource,\n  CalendarWriteShowFor,\n  FilterDeleteEvent,\n  GetEventsFilterArgs,\n  ReturnCalendarEvent,\n  UpdateEvent,\n} from '@/types/calendar.type';\nimport gql from 'graphql-tag';\nimport { CalendarGQL, EventGQL, UserGQL } from '@/graphql';\nimport { formatBackendEvent, formatEventToFullCalendar } from '@/helpers/calendar.helper';\nimport { isArrayAndHasItems, isArrayEmpty } from '@/utils/functions';\nimport { User } from '@/types/user.type';\nimport {\n  AddPermissionArgs,\n  FetchEventsMap,\n  RevokePermissionArgs,\n  SearchEventsArgs,\n  WritePermissionResult,\n} from '@/types/services.type';\nimport { generateBackendNotation } from '@/helpers/permissions.helper';\n\nfunction returnEvent(event: CalendarEvent): ReturnCalendarEvent {\n  const localEvent = formatBackendEvent(event);\n  const fullCalendarEvent = formatEventToFullCalendar({ ...localEvent });\n\n  return { localEvent, fullCalendarEvent };\n}\n\nexport async function searchEvents(search: SearchEventsArgs) {\n  const { calendars, ...events } = search;\n\n  const { data } = await primaApi.graphql<any>({\n    query: gql`\n      query getEvents($events: filterCalendarEvents, $calendars: [String]!) {\n        calendarSearch(search: { events: $events, calendars: $calendars }) {\n          events {\n            ...FullEventFragment\n          }\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables: { calendars, events },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n  const calendarEvents = data.data.calendarSearch.events as CalendarEvent[];\n\n  if (!calendarEvents) {\n    return [];\n  }\n\n  const calendarsResult = calendarEvents.reduce<CalendarSimple[]>((sources, event) => {\n    if (!sources.length) {\n      const source = {\n        id: event.calendarId,\n        events: [event],\n      };\n\n      return [source];\n    }\n\n    const sourceIndex = sources.findIndex(source => source.id === event.calendarId);\n\n    if (sourceIndex !== -1) {\n      sources[sourceIndex].events.push(event);\n\n      return sources;\n    }\n\n    const source = {\n      id: event.calendarId,\n      events: [event],\n    };\n\n    return [...sources, source];\n  }, [] as CalendarSource[]);\n\n  const sources = calendarsResult\n    .filter(calendar => !isArrayEmpty(calendar.events))\n    .map(calendar => {\n      const id = calendar.events[0].calendarId;\n\n      const events = calendar.events.map(event => formatBackendEvent(event));\n      const fullCalendarEvents = events.map(event => formatEventToFullCalendar({ ...event }));\n\n      return { id, events, fullCalendarEvents };\n    }) as FetchEventsMap[];\n\n  return sources;\n}\n\nexport async function getCalendars() {\n  const { data } = await primaApi.graphql<any>({\n    query: gql`\n      {\n        calendar {\n          ...CalendarFullFragment\n        }\n        users {\n          ...UserBasicsFragment\n        }\n        whoAmI {\n          ...UserBasicsFragment\n        }\n      }\n      ${CalendarGQL.fragments.CalendarFullFragment},\n      ${UserGQL.fragments.UserBasicsFragment}\n    `,\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  const whoami = data.data.whoAmI as User;\n  const users = data.data.users as User[];\n  let calendars = data.data.calendar as CalendarOriginalSource[];\n\n  // Sanitize calendars and sort\n  calendars = calendars\n    .map(calendar => {\n      return {\n        ...calendar,\n        /** Omit others default calendars */\n        isDefault: calendar.isDefault && calendar.userId === whoami.id,\n        events: [],\n      };\n    })\n    .sort(calendar => {\n      if (calendar.isDefault) {\n        return -1;\n      }\n\n      if (calendar.userId === whoami.id) {\n        return 0;\n      }\n\n      return 1;\n    }) as CalendarOriginalSource[];\n\n  return {\n    calendars,\n    whoami,\n    users,\n  };\n}\n\nexport async function getEvents(\n  position: CalendarEventPosition,\n  filter: GetEventsFilterArgs | null,\n): Promise<FetchEventsMap[]> {\n  const params = {\n    func: '$start: String!, $end: String!',\n    events: 'start: $start, end: $end',\n  };\n\n  const variables: any = { ...position };\n\n  if (filter) {\n    params.func += `, $${filter.field}: Int`;\n    params.events += `, ${filter.field}: $${filter.field}`;\n\n    variables[filter.field] = filter.value;\n  }\n\n  const { data } = await primaApi.graphql<any>({\n    query: gql`\n      query getEvents(${params.func}) {\n        calendar(filter: { calendar: { show: true }, events: { ${params.events} } }) {\n          events {\n            ...FullEventFragment\n          }\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables,\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  const calendars = data.data.calendar as CalendarSource[];\n\n  const sources = calendars\n    .filter(calendar => !isArrayEmpty(calendar.events))\n    .map(calendar => {\n      const id = calendar.events[0].calendarId;\n\n      const events = calendar.events.map(event => formatBackendEvent(event));\n      const fullCalendarEvents = events.map(event => formatEventToFullCalendar({ ...event }));\n\n      return { id, events, fullCalendarEvents };\n    });\n\n  return sources;\n}\n\nexport async function getEventsFromOneCalendar(\n  calendarId: string,\n  context: CalendarContextType,\n  position: CalendarEventPosition,\n  filter: GetEventsFilterArgs | null,\n) {\n  const params = {\n    func: '$calendarId: String!, $context: enumCalendarContext!, $start: String!, $end: String!',\n    events: 'start: $start, end: $end',\n  };\n\n  const variables: any = { calendarId, context, ...position };\n\n  if (filter && context === 'LOCAL') {\n    params.func += `, $${filter.field}: Int`;\n    params.events += `, ${filter.field}: $${filter.field}`;\n\n    variables[filter.field] = filter.value;\n  }\n\n  const { data } = await primaApi.graphql<any>({\n    query: gql`\n      query getEvents(${params.func}) {\n        calendar(\n          filter: {\n            calendar: { entity: { id: $calendarId, context: $context } }\n            events: { ${params.events} }\n          }\n        ) {\n          events {\n            ...FullEventFragment\n          }\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables,\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  const events = isArrayAndHasItems(data.data.calendar)\n    ? (data.data.calendar[0].events as CalendarEvent[])\n    : ([] as CalendarEvent[]);\n\n  return events.map(event => returnEvent(event));\n}\n\nexport async function updateCalendarVisibility(\n  context: CalendarContextType,\n  id: string,\n  show: boolean,\n) {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation updateCalendar($id: String!, $context: enumCalendarContext!, $show: Boolean!) {\n        calendarWriteShowFor(type: $context, calendarId: $id, show: $show) {\n          calendarId\n          show\n          userId\n          type\n        }\n      }\n    `,\n    variables: { id, context, show },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return data.data.calendarWriteShowFor as CalendarWriteShowFor;\n}\n\nexport async function updateCalendar(id: string, calendar: Partial<CalendarEdit>) {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation updateCalendar($id: String!, $editCalendar: editCalendar!) {\n        calendarEdit(_id: $id, editCalendar: $editCalendar) {\n          ...CalendarWithoutPermissionsFragment\n        }\n      }\n      ${CalendarGQL.fragments.CalendarWithoutPermissionsFragment}\n    `,\n    variables: { id, editCalendar: calendar },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return data.data.calendarEdit as CalendarCreate;\n}\n\nexport async function createCalendar(calendar: CalendarCreate) {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation createCalendar($calendar: newCalendar!) {\n        calendarAdd(newCalendar: $calendar) {\n          ...CalendarFullFragment\n        }\n      }\n      ${CalendarGQL.fragments.CalendarFullFragment}\n    `,\n    variables: { calendar },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  const newCalendar: CalendarOriginalSource = {\n    ...data.data.calendarAdd,\n    events: [],\n  };\n\n  return newCalendar;\n}\n\n/** Create event and return the new data */\nexport async function createEvent(event: CalendarEventCreate) {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation createEvent($event: newCalendarEvent!) {\n        calendarEventAdd(newCalendarEvent: $event) {\n          ...FullEventFragment\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables: { event },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return returnEvent(data.data.calendarEventAdd);\n}\n\n/** Update events and return the updated data */\nexport async function updateEvents(...criteria: UpdateEvent[]) {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation updateEvents($criteria: [calendarEventCriteriaEdit!]!) {\n        calendarEventsEdit(criteria: $criteria) {\n          ...FullEventFragment\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables: { criteria },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  const events = data.data.calendarEventsEdit as CalendarEvent[];\n\n  return events.map(event => returnEvent(event));\n}\n\nexport async function deleteEvents(...filters: FilterDeleteEvent[]): Promise<CalendarEvent[]> {\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation deleteEvents($filters: [calendarEventFilterDelete!]!) {\n        calendarEventsDelete(filters: $filters) {\n          ...FullEventFragment\n        }\n      }\n      ${EventGQL.fragments.FullEventFragment}\n    `,\n    variables: { filters },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return data.data.calendarEventsDelete.map((event: CalendarEvent) => formatBackendEvent(event));\n}\n\nexport async function setPermission(args: AddPermissionArgs) {\n  const permission = generateBackendNotation(args.permission, ...(args.userIds ?? []));\n\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation addPermission(\n        $id: String!\n        $type: enumTypePermission!\n        $permission: newCalendarPermission!\n      ) {\n        calendarPermissionWrite(id: $id, type: $type, permission: $permission) {\n          id\n          userId\n          permissions {\n            admin {\n              all\n              read\n            }\n            global {\n              all\n              read\n            }\n            individual {\n              userId\n              all\n              read\n            }\n          }\n        }\n      }\n    `,\n    variables: { id: args.calendarId, type: args.type, permission },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return data.data.calendarPermissionWrite as WritePermissionResult;\n}\n\nexport async function revokePermission(args: RevokePermissionArgs) {\n  const permission = generateBackendNotation('quit', ...(args.userId ? [args.userId] : []));\n\n  const { data } = await primaApi.graphql<any>({\n    mutation: gql`\n      mutation revokePermission(\n        $id: String!\n        $type: enumTypePermission!\n        $permission: newCalendarPermission!\n      ) {\n        calendarPermissionWrite(id: $id, type: $type, permission: $permission) {\n          id\n          userId\n          permissions {\n            admin {\n              all\n              read\n            }\n            global {\n              all\n              read\n            }\n            individual {\n              userId\n              all\n              read\n            }\n          }\n        }\n      }\n    `,\n    variables: { id: args.calendarId, type: args.type, permission },\n  });\n\n  if (data.errors) {\n    throw data.errors;\n  }\n\n  return data.data.calendarPermissionWrite as WritePermissionResult;\n}\n","import { User } from '@/types/user.type';\nimport { reactive, readonly, toRefs } from '@vue/reactivity';\n\nconst state = reactive({\n  whoami: {} as User,\n  users: [] as User[],\n});\n\nexport default () => {\n  const setWhoami = (user: User) => {\n    state.whoami = { ...user, fullName: getUserFullName(user) };\n  };\n\n  const setUsers = (users: User[]) => {\n    state.users = users\n      .map(user => ({ ...user, fullName: getUserFullName(user) }))\n      .filter(user => user.id !== state.whoami.id);\n  };\n\n  const getUserLocal = (id: number) => {\n    if (id === state.whoami.id) {\n      return { ...state.whoami };\n    }\n\n    const user = state.users.find(user => user.id === id)!;\n    return { ...user };\n  };\n\n  const getUserFullName = (user: User) => {\n    if (user.lastName) {\n      return `${user.firstName} ${user.lastName}`;\n    }\n\n    if (user.middleName) {\n      return `${user.firstName} ${user.middleName}`;\n    }\n\n    return user.firstName;\n  };\n\n  return {\n    ...toRefs(readonly(state)),\n    getUserLocal,\n    getUserFullName,\n    setWhoami,\n    setUsers,\n  };\n};\n","import { formatEventToFullCalendar } from '@/helpers/calendar.helper';\nimport { searchEvents } from '@/services/calendar.service';\nimport { CalendarEvent, CalendarSource } from '@/types/calendar.type';\nimport { Case } from '@/types/cases.type';\nimport { ContactPrima } from '@/types/contacts.type';\nimport { SearchEventsArgs } from '@/types/services.type';\nimport { cloneObject } from '@/utils/functions';\nimport { computed, reactive } from 'vue';\nimport useUsers from './use-users';\n\nexport type FilterField = 'contactId' | 'caseId';\n\nexport interface Filter {\n  field: FilterField;\n  value: number;\n}\n\ninterface ContactData {\n  id: number;\n  caseId: number;\n}\n\nconst state = reactive({\n  enable: false,\n  isActiveView: false,\n  loaded: false,\n  filter: null as Filter | null,\n  displayInputSearch: false,\n  keyword: '',\n  calendars: [] as string[],\n  filterAppliedWithKeyword: false,\n  contact: null as ContactData | null,\n  pagination: {\n    size: 1000,\n    skip: 0,\n    total: 0,\n  },\n  cache: {\n    contact: {} as ContactPrima,\n    cases: [] as Case[],\n  },\n});\n\nexport default function () {\n  const { getUserLocal } = useUsers();\n\n  const activeModeFilter = (val: boolean) => {\n    state.enable = val;\n\n    val && setFilterViewAsActive(true);\n  };\n\n  const setFilterViewAsActive = (active: boolean) => {\n    state.isActiveView = active;\n  };\n\n  const setCalendarsToFilter = (calendars: string[]) => {\n    state.calendars = calendars;\n  };\n\n  const setFilterData = (field: FilterField, value: number) => {\n    if (!state.enable) {\n      throw new Error(`The mode filter is disabled, enable first and set the filter data`);\n    }\n\n    state.filter = { field, value };\n  };\n\n  const setCasesInCache = (cases: Case[]) => {\n    state.cache.cases = cases;\n  };\n\n  const setContactInCache = (contact: ContactPrima) => {\n    state.cache.contact = contact;\n  };\n\n  const setVisibilityInputSearch = (value: boolean) => {\n    state.displayInputSearch = value;\n\n    if (!value && state.keyword) {\n      state.keyword = '';\n    }\n  };\n\n  const setKeyword = (value: string) => {\n    state.keyword = value;\n  };\n\n  const setContactData = (data: ContactData) => {\n    state.contact = data;\n  };\n\n  const setPaginationSkip = (type: 'next' | 'prev') => {\n    if (type === 'next') {\n      state.pagination.skip += state.pagination.size;\n\n      return;\n    }\n\n    state.pagination.skip -= state.pagination.size;\n  };\n\n  const resetPagination = () => {\n    state.pagination.skip = 0;\n  };\n\n  const paginationStatus = computed(() => {\n    const status = { prev: false, next: false };\n    const pag = state.pagination;\n\n    if (pag.size + pag.skip < pag.total) {\n      status.next = true;\n    }\n\n    if (pag.skip >= pag.size) {\n      status.prev = true;\n    }\n\n    return status;\n  });\n\n  const filterEvent = (event: CalendarEvent) => {\n    if (!state.keyword) {\n      return true;\n    }\n\n    const keyword = state.keyword.toLowerCase();\n\n    // Search by title\n    if (event.title.toLowerCase().includes(keyword)) {\n      return true;\n    }\n\n    // Search by description\n    if (event.description && event.description.toLowerCase().includes(keyword)) {\n      return true;\n    }\n\n    // Search by user\n    const user = getUserLocal(event.createdBy);\n\n    if (user.fullName.toLowerCase().includes(keyword)) {\n      return true;\n    }\n\n    // Search by cases\n    if (state.filter?.field === 'contactId') {\n      const casesMatch = state.cache.cases.some(primaCase => {\n        return (\n          primaCase.name.toLowerCase().includes(keyword!) ||\n          primaCase.caseTypeName.toLowerCase().includes(keyword)\n        );\n      });\n\n      if (casesMatch) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const mapSources = (sources: CalendarSource[]) => {\n    return cloneObject(sources).map(source => {\n      let events = source.events;\n\n      if (state.keyword) {\n        events = source.events.filter(event => filterEvent(event));\n      }\n\n      const fullCalendarEvents = events.map(event => formatEventToFullCalendar({ ...event }));\n      return { id: source.id, events, fullCalendarEvents };\n    });\n  };\n\n  const getFilteredSources = (sources: CalendarSource[]) => {\n    const filtered = sources.filter(source => state.calendars.includes(source.id));\n\n    return mapSources(filtered).filter(source => source.events.length);\n  };\n\n  const getFilterArgs = () => {\n    if (!state.filter) {\n      throw new Error(`Nothing to filter`);\n    }\n\n    const args: SearchEventsArgs = {\n      [state.filter.field]: state.filter.value,\n      calendars: state.calendars,\n    };\n\n    if (state.keyword) {\n      args.keyword = state.keyword;\n    }\n\n    return args;\n  };\n\n  const getFilteredEvents = async (sources?: CalendarSource[]) => {\n    if (sources && state.loaded) {\n      return { from: 'local', sourceEvents: getFilteredSources(sources) };\n    }\n\n    const args = getFilterArgs();\n    const results = await searchEvents(args);\n\n    state.filterAppliedWithKeyword = !!state.keyword;\n\n    if (!state.loaded) {\n      state.loaded = true;\n    }\n\n    return { from: 'backend', sourceEvents: results };\n  };\n\n  return {\n    isModeFilter: computed(() => state.enable),\n    globalFilter: computed(() => state.filter),\n    isDisplayInputSearch: computed(() => state.displayInputSearch),\n    keyword: computed(() => state.keyword),\n    isFilterAppliedWithKeyword: computed(() => state.filterAppliedWithKeyword),\n    contactData: computed(() => state.contact),\n    isFilterViewActive: computed(() => state.isActiveView),\n    activeModeFilter,\n    setFilterData,\n    setContactData,\n    setCasesInCache,\n    setContactInCache,\n    setVisibilityInputSearch,\n    setPaginationSkip,\n    setKeyword,\n    setCalendarsToFilter,\n    getFilteredEvents,\n    paginationStatus,\n    resetPagination,\n    setFilterViewAsActive,\n    getFilterArgs,\n  };\n}\n","import { computed, reactive } from 'vue';\n\nimport {\n  CalendarBasics,\n  CalendarEvent,\n  CalendarLocalIndividualPermission,\n  CalendarOriginalPermission,\n  CalendarOriginalPermissions,\n  CalendarOriginalSource,\n  CalendarPermissions,\n  CalendarPermissionType,\n  CalendarSource,\n  CalendarUpdate,\n} from '@/types/calendar.type';\nimport { Color } from '@/types/color.type';\nimport { useUsers } from '.';\nimport { CalendarColors } from '@/utils/enums/colors.enum';\nimport { CalendarContext, Permission } from '@/utils/enums/global.enum';\nimport { cloneObject, isArrayAndHasItems } from '@/utils/functions';\nimport { User } from '@/types/user.type';\nimport useModeFilter from './use-mode-filter';\n\ninterface State {\n  sources: CalendarSource[];\n  filteredSources: CalendarSource[];\n}\n\nconst state = reactive<State>({\n  sources: [],\n  filteredSources: [],\n});\n\nexport default function () {\n  const { whoami, getUserLocal } = useUsers();\n  const { isFilterViewActive, isModeFilter } = useModeFilter();\n\n  const setSources = (sources: CalendarOriginalSource[], cache = false) => {\n    state.sources = sources.map(source => transformSource(source));\n\n    if (!cache) {\n      return;\n    }\n\n    // Set cache, all as visible\n    state.filteredSources = cloneObject(sources)\n      .filter(source => source.context !== CalendarContext.Google)\n      .map(source => transformSource({ ...source, show: true }));\n  };\n\n  const sources = computed(() => {\n    return isFilterViewActive.value ? state.filteredSources : state.sources;\n  });\n\n  /** Currently displayed sources id's */\n  const displayedSources = computed(() => {\n    return sources.value.filter(source => source.show).map(source => source.id);\n  });\n\n  const getPermission = (permission: CalendarOriginalPermission) => {\n    return permission.all ? Permission.All : Permission.Read;\n  };\n\n  const transformPermission = (permissions: CalendarOriginalPermissions) => {\n    const newPermissions = {} as CalendarPermissions;\n\n    permissions.admin && (newPermissions.admin = getPermission(permissions.admin));\n    permissions.global && (newPermissions.global = getPermission(permissions.global));\n\n    if (!isArrayAndHasItems(permissions.individual)) {\n      return newPermissions;\n    }\n\n    newPermissions.individual = permissions.individual!.map(permission => {\n      // const user =\n      // permission.userId === whoami.value.id ? unref(whoami) : getUserLocal(permission.userId);\n      const user = getUserLocal(permission.userId);\n\n      return {\n        id: user.id,\n        name: user.fullName,\n        email: user.email,\n        admin: user.admin,\n        permission: getPermission(permission),\n      } as CalendarLocalIndividualPermission;\n    });\n\n    return newPermissions;\n  };\n\n  const sourcesToRender = computed(() => {\n    return sources.value.reduce(\n      (acc, source) => {\n        const basics: CalendarBasics = {\n          id: source.id,\n          user: source.user,\n          name: source.name,\n          show: source.show,\n          isDefault: source.isDefault,\n          color: source.color,\n          context: source.context,\n          permissions: source.permissions,\n        };\n\n        // Google calendars\n        if (source.context === CalendarContext.Google) {\n          return { ...acc, google: [...acc.google, basics] };\n        }\n\n        if (source.user!.id === whoami.value.id) {\n          return { ...acc, own: [...acc.own, basics] };\n        }\n\n        // Sharing calendars\n        return { ...acc, shared: [...acc.shared, basics] };\n      },\n      {\n        own: [] as CalendarBasics[],\n        shared: [] as CalendarBasics[],\n        google: [] as CalendarBasics[],\n      },\n    );\n  });\n\n  /** Get default source */\n  const defaultSource = computed(() => {\n    const [calendar] = sourcesToRender.value.own.filter(cal => cal.isDefault);\n\n    return calendar;\n  });\n\n  const usedColors = computed(() => {\n    return sources.value.map(source => source.color);\n  });\n\n  const sourceColors = computed<Color[]>(() => {\n    return Object.values(CalendarColors).map(color => {\n      const isUsedColor = usedColors.value.includes(color);\n\n      return {\n        color,\n        active: false,\n        animate: !isUsedColor,\n        disabled: isUsedColor,\n      };\n    });\n  });\n\n  const getSourcePermission = ({\n    permissions = null,\n    user,\n    context,\n  }: CalendarBasics): CalendarPermissionType => {\n    // Google calendar, readonly\n    if (context === CalendarContext.Google || !permissions || !user) {\n      return Permission.Read;\n    }\n\n    // Own calendar\n    if (user.id === whoami.value.id) {\n      return Permission.All;\n    }\n\n    const permissionTypes = Object.keys(permissions) as (keyof CalendarPermissions)[];\n\n    for (const permissionType of permissionTypes) {\n      let permission: CalendarPermissionType;\n\n      // Individual permission, get first item\n      if (permissionType === 'individual' && isArrayAndHasItems(permissions.individual)) {\n        permission = permissions.individual![0].permission;\n      } else {\n        permission = permissions[permissionType] as CalendarPermissionType;\n      }\n\n      if (permission === Permission.All) {\n        return permission;\n      }\n    }\n\n    return Permission.Read;\n  };\n\n  const isSourceDisplayed = (sourceId: string) => {\n    return displayedSources.value.includes(sourceId);\n  };\n\n  const isCalendarOwn = (calendarId: string) => {\n    return sourcesToRender.value.own.some(source => source.id === calendarId);\n  };\n\n  const addNewEventInSource = (event: CalendarEvent) => {\n    if (isModeFilter.value) {\n      for (const source of state.filteredSources) {\n        if (source.id !== event.calendarId) {\n          continue;\n        }\n\n        source.events.push(event);\n        break;\n      }\n    }\n\n    if (isFilterViewActive.value) {\n      return;\n    }\n\n    for (const source of state.sources) {\n      if (source.id !== event.calendarId) {\n        continue;\n      }\n\n      source.events.push(event);\n      break;\n    }\n  };\n\n  const deleteEventInSource = (eventId: string, calendarId: string) => {\n    if (isModeFilter.value) {\n      for (const source of state.filteredSources) {\n        if (source.id !== calendarId) {\n          continue;\n        }\n\n        const index = source.events.findIndex(event => event.id === eventId);\n\n        if (index !== -1) {\n          source.events.splice(index, 1);\n        }\n        break;\n      }\n    }\n\n    if (isFilterViewActive.value) {\n      return;\n    }\n\n    for (const source of state.sources) {\n      if (source.id !== calendarId) {\n        continue;\n      }\n\n      const index = source.events.findIndex(event => event.id === eventId);\n\n      if (index !== -1) {\n        source.events.splice(index, 1);\n      }\n      break;\n    }\n  };\n\n  const addNewSource = (source: CalendarSource): CalendarSource => {\n    state.sources.push(cloneObject(source));\n\n    if (isModeFilter.value) {\n      state.filteredSources.push(cloneObject(source));\n    }\n\n    return source;\n  };\n\n  const getSourceById = (id: string) => {\n    const index = sources.value.findIndex(source => source.id === id);\n\n    if (index === -1) {\n      throw new Error(`Source with the ID \"${id}\" was not found`);\n    }\n\n    return { index, source: sources.value[index] };\n  };\n\n  const getOppositeSourceById = (id: string) => {\n    const opposite = isFilterViewActive.value ? state.sources : state.filteredSources;\n\n    const oppositeIndex = opposite.findIndex(source => source.id === id);\n    return { oppositeIndex, oppositeSource: opposite[oppositeIndex] };\n  };\n\n  const removeSource = (id: string) => {\n    const { index, source } = getSourceById(id);\n\n    if (!source) {\n      throw new Error(`Calendar with the ID \"${id}\" was not found.`);\n    }\n\n    return sources.value.splice(index, 1);\n  };\n\n  const updateSource = (id: string, data: Partial<CalendarUpdate>) => {\n    const { source } = getSourceById(id);\n\n    if (!source) {\n      throw new Error(`Calendar with the ID \"${id}\" was not found.`);\n    }\n\n    const keys = Object.keys(data) as (keyof CalendarUpdate)[];\n\n    keys.forEach(key => {\n      (source[key] as any) = data[key];\n    });\n\n    if (isModeFilter.value) {\n      const { oppositeSource } = getOppositeSourceById(id);\n\n      keys.forEach(key => {\n        (oppositeSource[key] as any) = data[key];\n      });\n    }\n\n    return source;\n  };\n\n  const transformSource = (source: CalendarOriginalSource): CalendarSource => {\n    const { userId, ...newSource } = source;\n    let user = null as User | null;\n\n    if (userId !== null) {\n      // user = userId === whoami.value.id ? unref(whoami) : getUserLocal(userId);\n      user = getUserLocal(userId);\n    }\n\n    return {\n      ...newSource,\n      user,\n      permissions: source.permissions ? transformPermission(source.permissions) : null,\n    };\n  };\n\n  return {\n    sources,\n    /** Functions */\n    getSourcePermission,\n    setSources,\n    addNewSource,\n    addNewEventInSource,\n    deleteEventInSource,\n    updateSource,\n    removeSource,\n    getSourceById,\n    getOppositeSourceById,\n    isSourceDisplayed,\n    transformSource,\n    transformPermission,\n    /** Computed properties */\n    isCalendarOwn,\n    displayedSources,\n    sourcesToRender,\n    defaultSource,\n    sourceColors,\n  };\n}\n","import {\n  CalendarEvent,\n  CalendarEventPosition,\n  CalendarOriginalSource,\n  CalendarPermissionType,\n  CalendarSource,\n  RegeranteRecurrence,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { Calendar, EventApi } from '@fullcalendar/core';\nimport { computed, reactive, readonly, Ref, ref } from 'vue';\nimport { calendarHelper } from '@/helpers';\nimport { cloneObject, isoDateWithoutTime } from '@/utils/functions';\nimport useCalendarSources from './use-calendar-sources';\nimport { byweekdayFromUIToBackend, formatEventDates } from '@/helpers/calendar.helper';\nimport { time } from './use-time';\n\n/** Current calendar instance */\nconst calendar = ref({}) as Ref<Calendar>;\n\nexport interface CalendarCurrentData {\n  // event: EventApi | null;\n  event: CalendarEvent;\n  calendarId: string | null;\n  /** Previous dates of the recurring event moved */\n  oldRecurringPosition: {\n    start: string;\n    end: string;\n  } | null;\n  activeDateRange: CalendarEventPosition;\n}\n\nconst currentData = reactive<CalendarCurrentData>({\n  // event: null,\n  event: {} as CalendarEvent,\n  calendarId: null,\n  oldRecurringPosition: null,\n  activeDateRange: {} as CalendarEventPosition,\n});\n\nconst currentEventApi = ref({}) as Ref<EventApi>;\n\nexport default function () {\n  const {\n    sources,\n    getSourcePermission,\n    setSources,\n    addNewSource,\n    displayedSources,\n    sourcesToRender,\n    defaultSource,\n    getSourceById,\n    transformSource,\n  } = useCalendarSources();\n\n  const isSourcesLoaded = ref(false);\n\n  /** Know if the current selected event is a recurring */\n  const isRecurringEvent = computed(() => {\n    if (!currentData.event) {\n      return false;\n    }\n\n    return !!currentData.event.rrule;\n  });\n\n  /** Know if the current selected event is a custom child */\n  const isChildEvent = computed(() => {\n    if (!currentData.event) {\n      return false;\n    }\n\n    return !!currentData.event.parentId;\n  });\n\n  /** Calendar data of event selected */\n  const selectedSource = computed(() => {\n    if (!currentData.calendarId) {\n      return defaultSource.value;\n    }\n\n    const all = [\n      ...sourcesToRender.value.own,\n      ...sourcesToRender.value.shared,\n      ...sourcesToRender.value.google,\n    ];\n\n    return all.find(source => source.id === currentData.calendarId)!;\n  });\n\n  const permission = computed<CalendarPermissionType>(() => {\n    return getSourcePermission(selectedSource.value);\n  });\n\n  const getCurrentSource = () => {\n    return sources.value.find(source => source.id === currentData.calendarId)!;\n  };\n\n  const getCurrentEventDataFromSources = (source?: CalendarSource) => {\n    const id = currentData.event?.id;\n    source = source || getCurrentSource();\n\n    const index = source.events.findIndex(event => event.id === id);\n    const event = source.events[index];\n\n    return { event, index };\n  };\n\n  const addRecurrenceExclusion = (eventId: string, startDate: string) => {\n    const source = getCurrentSource();\n    const parent = source.events.find(item => item.id === eventId);\n\n    if (!parent) {\n      throw new Error(`Event with the ID \"${eventId}\" was not found.`);\n    }\n\n    if (!parent.rrule) {\n      throw new Error(`Event with the ID \"${eventId}\" is not a recurring event`);\n    }\n\n    parent.exdate!.push(parent.allDay ? isoDateWithoutTime(startDate) : startDate);\n    return [...parent.exdate!];\n  };\n\n  const getCurrentFullEvent = (): CalendarEvent => {\n    return cloneObject(currentData.event!);\n  };\n\n  /** Get event by ID with the full data (like as comes from backend api) */\n  const getFullEventById = (id: string, calendarId?: string): CalendarEvent => {\n    const source = !calendarId ? getCurrentSource() : getSourceById(calendarId).source;\n\n    const event = cloneObject(source.events.find(event => event.id === id));\n\n    if (!event) {\n      throw new Error(`Event with the ID: ${id} was not found`);\n    }\n\n    event.rrule && (event.rrule = byweekdayFromUIToBackend(event.rrule));\n    return event;\n  };\n\n  /** Get dates (UTC) of current selected event */\n  const getEventDate = (eventApi?: EventApi) => {\n    const { startStr, endStr } = eventApi || currentEventApi.value!;\n\n    return {\n      start: time(startStr).toISOString(),\n      end: time(endStr).toISOString(),\n    };\n  };\n\n  const getActiveDatesRange = () => {\n    const { activeRange } = calendar.value.currentData.dateProfile!;\n\n    return {\n      start: activeRange!.start.toISOString(),\n      end: activeRange!.end.toISOString(),\n    };\n  };\n\n  /** Upate recurrence duration via drag and drop or modal */\n  const updateEventRuleAndDuration = ({ event, action, duration }: RegeranteRecurrence) => {\n    if (action === 'resize') {\n      event.duration = duration;\n      event = formatEventDates(event);\n      return event;\n    }\n\n    const currentEvent = getCurrentFullEvent();\n    let byweekday = currentEvent.rrule!.byweekday || [];\n\n    // Assign new star date\n    event.rrule!.dtstart = calendarHelper.updateDateFromDuration({\n      date: event.rrule!.dtstart,\n      duration,\n      allDay: event.allDay,\n    });\n\n    // Drag and drop, update byweekday property\n    if (action === 'dragAndDrop' && byweekday.length) {\n      byweekday = (byweekday as WeekDayMinType[]).map(weekday => {\n        return calendarHelper.updateWeekday(weekday, duration.days);\n      });\n\n      event.rrule!.byweekday = byweekday;\n\n      return event;\n    }\n\n    // action from modal\n    // let isByWeekdayDifferent = false;\n    const isByWeekdayDifferent = false;\n\n    if (byweekday.length) {\n      // changing only \"byweekday\" property\n      // isByWeekdayDifferent = !byweekday.every(item => event.rrule?.byweekday?.includes(item));\n    }\n\n    // Update byweekday when recurrence has been moved\n    if (duration.daysDiff !== 0 && byweekday && !isByWeekdayDifferent) {\n      event.rrule!.byweekday = (byweekday as WeekDayMinType[]).map(weekday => {\n        return calendarHelper.updateWeekday(weekday, duration.daysDiff);\n      });\n    }\n\n    if (event.rrule?.until) {\n      // Assing new until date\n      event.rrule.until = calendarHelper.updateDateFromDuration({\n        date: event.rrule.until,\n        duration,\n        allDay: event.allDay,\n      });\n    }\n\n    return event;\n  };\n\n  const setCalendarInstance = (instance: Calendar) => {\n    calendar.value = instance;\n  };\n\n  const setCurrentCalendarId = (calendarId: string) => {\n    currentData.calendarId = calendarId;\n  };\n\n  const setActiveDateRange = (dates: CalendarEventPosition) => {\n    currentData.activeDateRange = dates;\n  };\n\n  const setOldRecurringPosition = (value: CalendarCurrentData['oldRecurringPosition'] | null) => {\n    currentData.oldRecurringPosition = value;\n  };\n\n  /** Save data of the event selected */\n  const setDataOfCurrentEvent = (event: EventApi) => {\n    setCurrentCalendarId(event.source!.id);\n\n    currentEventApi.value = event;\n    currentData.event = getFullEventById(event.id, event.source!.id);\n  };\n\n  const refetchSources = (ids?: string[]) => {\n    const _sources = ids ? sources.value.filter(item => ids.includes(item.id))! : sources.value;\n\n    _sources.forEach(source => {\n      if (source.show) {\n        const calendarSource = calendar.value.getEventSourceById(source.id);\n\n        calendar.value.batchRendering(() => {\n          if (!calendarSource) {\n            calendar.value.addEventSource(source as any);\n          } else {\n            // Remove\n            calendarSource.remove();\n            // Add again\n            calendar.value.addEventSource(source as any);\n          }\n        });\n      }\n    });\n  };\n\n  /** Add source to UI */\n  const addCalendarSource = (source: CalendarSource) => {\n    calendar.value.addEventSource(source as any);\n  };\n\n  /** Create new source: save locally and show in UI */\n  const addNewCalendarSource = (source: CalendarOriginalSource) => {\n    const newSource = transformSource(source);\n\n    // Save locally\n    addNewSource(newSource);\n    // Add in UI\n    addCalendarSource(newSource);\n  };\n\n  return {\n    calendar,\n    sources,\n    currentData,\n    currentEventApi,\n    permission,\n    getCurrentEventDataFromSources,\n    getFullEventById,\n    getCurrentFullEvent,\n    getEventDate,\n    getActiveDatesRange,\n    isSourcesLoaded: readonly(isSourcesLoaded),\n    isRecurringEvent,\n    isChildEvent,\n    displayedSources,\n    sourcesToRender,\n    defaultSource,\n    selectedSource,\n    addNewCalendarSource,\n    refetchSources,\n    addRecurrenceExclusion,\n    updateEventRuleAndDuration,\n    setCalendarInstance,\n    setSources,\n    setDataOfCurrentEvent,\n    setActiveDateRange,\n    setCurrentCalendarId,\n    setOldRecurringPosition,\n  };\n}\n","import { calendarHelper, dateHelper } from '@/helpers';\nimport {\n  Byweekday,\n  CalendarEvent,\n  CalendarSource,\n  ChildrenToUpdateParams,\n  RegenerateByweekdayParams,\n  UpdateEvent,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { EVENT_EDITABLE_PROPS_OBJ } from '@/utils/constants';\nimport { cloneObject, isUndefined } from '@/utils/functions';\nimport moment from 'moment';\nimport useCalendarSources from './use-calendar-sources';\n\nexport default function () {\n  const { getSourceById, addNewEventInSource, deleteEventInSource } = useCalendarSources();\n\n  // ----- Getters -----\n\n  const getEventFromSource = (eventId: string, source: CalendarSource) => {\n    const index = source.events.findIndex(event => event.id === eventId);\n\n    if (index === -1) {\n      throw new Error(`Event ID ${eventId} not found in source ${source.name}`);\n    }\n\n    return { eventIndex: index, event: source.events[index] };\n  };\n\n  /** Get children events of recurring event */\n  const getRecurrenceChildren = (source: string | CalendarSource, eventId: string) => {\n    if (typeof source === 'string') {\n      const { source: _source } = getSourceById(source);\n\n      source = _source;\n    }\n\n    return cloneObject(source.events)\n      .filter(event => !!event.parentId && event.parentId === eventId)\n      .map(event => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const { createdBy, ...rest } = event;\n\n        return rest as CalendarEvent;\n      });\n  };\n\n  const getPropsToUpdateInChildren = (currentEvent: CalendarEvent, newEvent: CalendarEvent) => {\n    const props = EVENT_EDITABLE_PROPS_OBJ;\n\n    const changedProps = props.filter(({ prop, optional }) => {\n      if (optional) {\n        const isAssigned = !isUndefined(newEvent[prop]) && isUndefined(currentEvent[prop]);\n        const isRemoved = isUndefined(newEvent[prop]) && !isUndefined(currentEvent[prop]);\n\n        if (isAssigned || isRemoved) {\n          return true;\n        }\n      }\n\n      return currentEvent[prop] !== newEvent[prop];\n    });\n\n    return changedProps.map(item => item.prop);\n  };\n\n  /** Generate data to update children events via modal  */\n  const getChildrenDataToUpdate = ({\n    currentEvent,\n    newEvent,\n    children,\n  }: ChildrenToUpdateParams) => {\n    const editableProps = getPropsToUpdateInChildren(currentEvent, newEvent);\n\n    if (!editableProps.length) {\n      return [];\n    }\n\n    // Update data of children\n    return children.map(child => {\n      /** Properties to modify in children */\n      const propsToModify = editableProps.filter(prop => {\n        return child[prop] === currentEvent[prop];\n      });\n\n      const newData: any = {};\n\n      propsToModify.forEach(prop => {\n        // Color: remove\n        if (newEvent[prop] === undefined) {\n          newData[prop] = null;\n        } else {\n          // Assign new data\n          newData[prop] = newEvent[prop];\n        }\n      });\n\n      // return data for update this event\n      return { filter: { id: child.id, calendarId: child.calendarId }, newData } as UpdateEvent;\n    });\n  };\n\n  // ----- End getters -----\n\n  // ----- Helpers -----\n\n  const splitExdate = (exdate: string[], splitDate: string) => {\n    return exdate.reduce(\n      (acc, date) => {\n        if (moment.utc(date).isSameOrBefore(splitDate)) {\n          return { ...acc, current: [...acc.current, date] };\n        }\n\n        return { ...acc, new: [...acc.new, date] };\n      },\n      {\n        current: [] as string[],\n        new: [] as string[],\n      },\n    );\n  };\n\n  const regenerateByweekday = ({\n    currentByweekday,\n    daysDiff,\n    freq,\n    eventSelectedDate,\n  }: RegenerateByweekdayParams) => {\n    let byweekday: WeekDayMinType[] | Byweekday[] =\n      calendarHelper.byweekdayPropToStr(currentByweekday);\n\n    // Days updated\n    byweekday = calendarHelper.updateByweekdayProp(byweekday, daysDiff);\n    // Transform to objects: MO -> { weekday: MO }\n    byweekday = byweekday.map(item => ({ weekday: item }));\n\n    // Monthly by day: first Monday, last Sunday...\n    if (freq === 'MONTHLY') {\n      const position = dateHelper.getDayPositionOfMonth(eventSelectedDate);\n\n      // byweekday always have only one item\n      byweekday = [{ ...byweekday[0], n: position.n } as Byweekday];\n    }\n\n    return byweekday;\n  };\n\n  // ----- End helpers -----\n\n  // ----- CRUD -----\n  const renewLocalEvent = (event: CalendarEvent, oldCalendarId?: string) => {\n    deleteEventInSource(event.id, oldCalendarId || event.calendarId);\n    addNewEventInSource(event);\n\n    return true;\n  };\n\n  // ----- End CRUD -----\n\n  return {\n    // Getters\n    getEventFromSource,\n    getRecurrenceChildren,\n    getChildrenDataToUpdate,\n    // Helpers\n    splitExdate,\n    regenerateByweekday,\n    // CRUD\n    renewLocalEvent,\n  };\n}\n","<template>\n  <!-- Share with specific people -->\n  <AModal\n    v-model:visible=\"modalAddPeople\"\n    title=\"Share with specific people\"\n    :ok-button-props=\"{ disabled: !addPermission.users.length }\"\n    :confirm-loading=\"isLoading\"\n    @ok=\"addUserPermission\"\n    @cancel=\"onCancelModalAddPeople\"\n  >\n    <AForm layout=\"vertical\">\n      <AFormItem label=\"Add email or name\">\n        <ASelect\n          ref=\"refSelectUser\"\n          v-model:value=\"addPermission.users\"\n          show-search\n          mode=\"multiple\"\n          :filter-option=\"userFilterOption\"\n          option-label-prop=\"label\"\n          placeholder=\"Add email or name\"\n          style=\"width: 100%\"\n        >\n          <ASelectOption v-for=\"user of availableUsers\" :key=\"user.id\" :label=\"user.fullName\">\n            {{ user.fullName }} ({{ user.email }})\n          </ASelectOption>\n        </ASelect>\n      </AFormItem>\n\n      <AFormItem label=\"Permission\">\n        <div class=\"Permissions__list-permission\">\n          <ASelect v-model:value=\"addPermission.permission\" style=\"width: 100%\">\n            <ASelectOption value=\"read\">See all event details</ASelectOption>\n            <ASelectOption value=\"all\">Make changes to events</ASelectOption>\n          </ASelect>\n        </div>\n      </AFormItem>\n    </AForm>\n  </AModal>\n\n  <section class=\"Permissions\">\n    <h2 class=\"Permissions__label\">Special permissions</h2>\n\n    <div\n      v-for=\"(permission, permissionType) of specialPermissions\"\n      :key=\"permissionType\"\n      class=\"Permissions__list\"\n    >\n      <div class=\"Permissions__list-item\">\n        <div class=\"Permissions__list-user\">\n          <div class=\"Permissions__list-avatar\">\n            <component :is=\"permission.icon\" style=\"font-size: 16px\" />\n          </div>\n          <div class=\"Permissions__list-title\">{{ permission.label }}</div>\n        </div>\n\n        <div v-if=\"permission.permission\" class=\"Permissions__list-permission\">\n          <ASelect\n            v-model:value=\"permission.permission\"\n            size=\"small\"\n            style=\"width: 188.77px\"\n            @change=\"setPermission({ type: permissionType, permission: permission.permission })\"\n          >\n            <ASelectOption value=\"read\">See all event details</ASelectOption>\n            <ASelectOption value=\"all\">Make changes to events</ASelectOption>\n          </ASelect>\n\n          <ATooltip v-if=\"permissionType === 'global'\" title=\"Revoke permission\">\n            <AButton type=\"link\" size=\"small\" @click=\"revokePermission(permissionType)\">\n              <CloseOutlined />\n            </AButton>\n          </ATooltip>\n\n          <LockOutlined v-if=\"permissionType === 'admin'\" style=\"padding: 0 8px\" />\n        </div>\n\n        <div v-else class=\"Permissions__list-permission\">\n          <APopconfirm\n            title=\"Are you sure you want to set the calendar as global?\"\n            ok-text=\"Yes\"\n            cancel-text=\"No\"\n            @confirm=\"setCalendarAsGlobal\"\n            @visible-change=\"onChangePopConfirm\"\n          >\n            <ATooltip\n              v-if=\"permissionType === 'global'\"\n              :visible=\"isVisibleTooltipRevokeGlobal && !isVisiblePopConfirm\"\n              title=\"Set the calendar as global\"\n            >\n              <AButton\n                size=\"small\"\n                type=\"link\"\n                @mouseenter=\"isVisibleTooltipRevokeGlobal = true\"\n                @mouseleave=\"isVisibleTooltipRevokeGlobal = false\"\n              >\n                <PlusOutlined />\n              </AButton>\n            </ATooltip>\n          </APopconfirm>\n        </div>\n      </div>\n    </div>\n\n    <h2 class=\"Permissions__label\" style=\"margin-top: 1.5rem\">Share with specific people</h2>\n\n    <div class=\"Permissions__list\">\n      <div class=\"Permissions__list-item\">\n        <div class=\"Permissions__list-user\">\n          <div class=\"Permissions__list-avatar\">\n            <UserOutlined style=\"font-size: 16px\" />\n          </div>\n\n          <ATooltip\n            :title=\"`${whoami.fullName} (${whoami.email})`\"\n            :overlay-style=\"{ maxWidth: '420px' }\"\n          >\n            <div class=\"Permissions__list-title\">\n              {{ whoami.fullName }} {{ `(Owner${whoami.admin && ', Admin'})` }}\n            </div>\n          </ATooltip>\n        </div>\n      </div>\n      <div v-for=\"user of sharedWith\" :key=\"user.id\" class=\"Permissions__list-item\">\n        <div class=\"Permissions__list-user\">\n          <div class=\"Permissions__list-avatar\">\n            <UserOutlined style=\"font-size: 16px\" />\n          </div>\n\n          <ATooltip :title=\"`${user.name} (${user.email})`\" :overlay-style=\"{ maxWidth: '420px' }\">\n            <div class=\"Permissions__list-title\">\n              {{ user.name }} {{ user.admin ? '(Admin)' : '' }}\n            </div>\n          </ATooltip>\n        </div>\n\n        <div v-if=\"!user.isOwner\" class=\"Permissions__list-permission\">\n          <ASelect\n            v-model:value=\"user.permission\"\n            size=\"small\"\n            style=\"width: 188.77px\"\n            @change=\"\n              setPermission({\n                type: 'individual',\n                permission: user.permission,\n                userIds: [user.id],\n              })\n            \"\n          >\n            <ASelectOption value=\"read\">See all event details</ASelectOption>\n            <ASelectOption value=\"all\">Make changes to events</ASelectOption>\n          </ASelect>\n\n          <ATooltip\n            title=\"Revoke permission\"\n            @click=\"revokePermission(PermissionsType.Individual, user.id)\"\n          >\n            <AButton type=\"link\" size=\"small\">\n              <CloseOutlined />\n            </AButton>\n          </ATooltip>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"Permissions__plus-btn\">\n      <AButton @click=\"modalAddPeople = true\">\n        <PlusOutlined />\n        Add people\n      </AButton>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { useCalendarSources, useGlobalProps, useUsers } from '@/composables';\nimport { computed, defineComponent, nextTick, PropType, reactive, ref, watch } from 'vue';\nimport {\n  UserOutlined,\n  PlusOutlined,\n  KeyOutlined,\n  TeamOutlined,\n  CloseOutlined,\n  LockOutlined,\n} from '@ant-design/icons-vue';\nimport { CalendarBasics, CalendarPermissionType } from '@/types/calendar.type';\nimport { Permission, PermissionsType } from '@/utils/enums/global.enum';\nimport { calendarService } from '@/services';\nimport { OnChangePermissionArgs, RevokePermissionArgs } from '@/types/services.type';\nimport { isArrayAndHasItems } from '@/utils/functions';\n\ninterface DataItem {\n  id: number;\n  name: string;\n  email: string;\n  isOwner: boolean;\n  admin: boolean;\n  permission: CalendarPermissionType;\n}\n\nexport default defineComponent({\n  components: {\n    UserOutlined,\n    PlusOutlined,\n    KeyOutlined,\n    TeamOutlined,\n    CloseOutlined,\n    LockOutlined,\n  },\n\n  props: {\n    calendar: {\n      type: Object as PropType<CalendarBasics>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { isLoading } = useGlobalProps();\n    const { whoami, users } = useUsers();\n    const { transformPermission, updateSource } = useCalendarSources();\n\n    const modalAddPeople = ref(false);\n    const refSelectUser = ref<any>();\n\n    const addPermission = reactive({\n      users: [] as number[],\n      permission: 'read' as CalendarPermissionType,\n    });\n\n    const isOpenSelectUser = ref(false);\n    const isVisiblePopConfirm = ref(false);\n    const isVisibleTooltipRevokeGlobal = ref(false);\n\n    const sharedWith = ref<DataItem[]>([]);\n\n    const specialPermissions = reactive({\n      admin: {\n        permission: Permission.Read as CalendarPermissionType,\n        label: 'Administrators',\n        icon: 'KeyOutlined',\n      },\n      global: {\n        permission: null as CalendarPermissionType | null,\n        label: 'All users',\n        icon: 'TeamOutlined',\n      },\n    });\n\n    watch(\n      () => props.calendar,\n      ({ permissions }) => {\n        if (!permissions) {\n          return;\n        }\n\n        specialPermissions.admin.permission = permissions.admin;\n\n        if (permissions.global) {\n          specialPermissions.global.permission = permissions.global;\n        } else {\n          specialPermissions.global.permission = null;\n        }\n\n        if (!permissions.individual) {\n          sharedWith.value = [];\n\n          return;\n        }\n\n        sharedWith.value = [];\n\n        permissions.individual!.forEach(individual => {\n          sharedWith.value.push({ ...individual, isOwner: false });\n        });\n      },\n      { immediate: true },\n    );\n\n    watch(modalAddPeople, isOpen => {\n      if (!isOpen) return;\n\n      nextTick(() => {\n        refSelectUser.value.focus();\n      });\n    });\n\n    const availableUsers = computed(() => {\n      if (\n        !props.calendar.permissions ||\n        !isArrayAndHasItems(props.calendar.permissions.individual)\n      ) {\n        return users.value;\n      }\n\n      return users.value.filter(user => {\n        const ignoreUser = props.calendar.permissions!.individual!.some(\n          individual => individual.id === user.id,\n        );\n\n        return !ignoreUser;\n      });\n    });\n\n    const userFilterOption = (input: string, option: any) => {\n      input = input.trim();\n      const currentUser = users.value.find(item => item.id === option.value);\n\n      if (!currentUser) {\n        return false;\n      }\n\n      if (currentUser.fullName.toLowerCase().includes(input.toLowerCase())) {\n        return true;\n      }\n\n      return currentUser.email.toLowerCase().includes(input.toLowerCase());\n    };\n\n    const revokePermission = async (type: 'global' | 'individual', userId?: number) => {\n      if (type === PermissionsType.Individual && !userId) {\n        throw new Error(`Field \"userId\" is required for revoke permission`);\n      }\n\n      const args: RevokePermissionArgs = {\n        calendarId: props.calendar.id,\n        type,\n      };\n\n      if (type === PermissionsType.Individual && userId) {\n        args.userId = userId;\n      }\n\n      const result = await calendarService.revokePermission(args);\n\n      const newPermissions = transformPermission(result.permissions);\n      updateSource(props.calendar.id, { permissions: newPermissions });\n    };\n\n    const addUserPermission = async () => {\n      const usersToAdd = users.value.filter(user => addPermission.users.includes(user.id));\n\n      await setPermission({\n        type: PermissionsType.Individual,\n        permission: addPermission.permission,\n        userIds: usersToAdd.map(user => user.id),\n      });\n\n      modalAddPeople.value = false;\n\n      addPermission.users = [];\n      addPermission.permission = 'read';\n    };\n\n    const onChangePopConfirm = (visible: boolean) => {\n      isVisiblePopConfirm.value = visible;\n    };\n\n    const onCancelModalAddPeople = () => {\n      addPermission.users = [];\n      addPermission.permission = 'read';\n    };\n\n    const setPermission = async ({ type, permission, userIds = [] }: OnChangePermissionArgs) => {\n      try {\n        const result = await calendarService.setPermission({\n          calendarId: props.calendar.id,\n          type,\n          permission,\n          userIds,\n        });\n\n        const newPermissions = transformPermission(result.permissions);\n        updateSource(props.calendar.id, { permissions: newPermissions });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    const setCalendarAsGlobal = async () => {\n      specialPermissions.global.permission = 'read';\n\n      await setPermission({\n        type: PermissionsType.Global,\n        permission: Permission.Read,\n      });\n    };\n\n    return {\n      whoami,\n      sharedWith,\n      addPermission,\n      refSelectUser,\n      isLoading,\n      modalAddPeople,\n      users,\n      availableUsers,\n      PermissionsType,\n      userFilterOption,\n      isOpenSelectUser,\n      specialPermissions,\n      revokePermission,\n      onChangePopConfirm,\n      isVisiblePopConfirm,\n      isVisibleTooltipRevokeGlobal,\n      addUserPermission,\n      onCancelModalAddPeople,\n      setPermission,\n      setCalendarAsGlobal,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.Permissions {\n  &__label {\n    font-size: 16px;\n    color: $color-grey;\n  }\n\n  &__list {\n    &-user {\n      display: flex;\n    }\n\n    &-item {\n      display: flex;\n      justify-content: space-between;\n      border-bottom: 1px solid rgba($color: #000000, $alpha: 0.1);\n      padding: 0.5rem 0;\n    }\n\n    &-avatar {\n      margin-right: 5px;\n    }\n\n    &-permission {\n      display: flex;\n      align-items: center;\n    }\n  }\n\n  &__plus-btn {\n    margin-top: 1rem;\n  }\n}\n</style>\n","import { ContactPrima, ContactSearch } from '@/types/contacts.type';\nimport gql from 'graphql-tag';\nimport { primaApi } from '@/api';\n\nexport default class {\n  /** Search contacts */\n  public static async search(search?: ContactSearch, getCases = false) {\n    try {\n      let casesStr = '';\n\n      if (getCases) {\n        casesStr = `\n          cases {\n            id\n            name\n            caseTypeName\n            contactId\n          }\n        `;\n      }\n\n      const { data } = await primaApi.graphql<{ contacts: ContactPrima[] }>({\n        query: gql`\n          query getContacts($search: searchContact) {\n            contacts(search: $search) {\n              id\n              fullName\n              email\n              createdAt\n              birthDate\n              alienNumber\n              isSubcontact\n              socialSecurityNumber\n              citizenship\n              accessLink\n              ${casesStr}\n            }\n          }\n        `,\n        variables: { search },\n      });\n\n      return Promise.resolve(data.data.contacts);\n    } catch (error: any) {\n      return Promise.reject(error);\n    }\n  }\n\n  /** Search contacts */\n  public static async getAll() {\n    try {\n      const { data } = await primaApi.graphql<{ contacts: ContactPrima[] }>({\n        query: gql`\n          query {\n            contacts {\n              id\n              fullName\n              email\n              createdAt\n              birthDate\n              alienNumber\n              isSubcontact\n              socialSecurityNumber\n              citizenship\n              accessLink\n            }\n          }\n        `,\n      });\n\n      return Promise.resolve(data.data.contacts);\n    } catch (error: any) {\n      return Promise.reject(error);\n    }\n  }\n}\n","import { primaApi } from '@/api';\nimport { Case } from '@/types/cases.type';\nimport gql from 'graphql-tag';\n\nexport default class {\n  public static async search(contactId?: number) {\n    try {\n      const { data } = await primaApi.graphql<{ cases: Case[] }>({\n        query: gql`\n          query getCases($contactId: Int) {\n            cases(contactId: $contactId) {\n              id\n              name\n              caseTypeName\n              contactId\n            }\n          }\n        `,\n        variables: { contactId },\n      });\n\n      return Promise.resolve(data.data.cases);\n    } catch (error: any) {\n      return Promise.reject(error);\n    }\n  }\n}\n","\nimport { useCalendarSources, useGlobalProps, useUsers } from '@/composables';\nimport { computed, defineComponent, nextTick, PropType, reactive, ref, watch } from 'vue';\nimport {\n  UserOutlined,\n  PlusOutlined,\n  KeyOutlined,\n  TeamOutlined,\n  CloseOutlined,\n  LockOutlined,\n} from '@ant-design/icons-vue';\nimport { CalendarBasics, CalendarPermissionType } from '@/types/calendar.type';\nimport { Permission, PermissionsType } from '@/utils/enums/global.enum';\nimport { calendarService } from '@/services';\nimport { OnChangePermissionArgs, RevokePermissionArgs } from '@/types/services.type';\nimport { isArrayAndHasItems } from '@/utils/functions';\n\ninterface DataItem {\n  id: number;\n  name: string;\n  email: string;\n  isOwner: boolean;\n  admin: boolean;\n  permission: CalendarPermissionType;\n}\n\nexport default defineComponent({\n  components: {\n    UserOutlined,\n    PlusOutlined,\n    KeyOutlined,\n    TeamOutlined,\n    CloseOutlined,\n    LockOutlined,\n  },\n\n  props: {\n    calendar: {\n      type: Object as PropType<CalendarBasics>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { isLoading } = useGlobalProps();\n    const { whoami, users } = useUsers();\n    const { transformPermission, updateSource } = useCalendarSources();\n\n    const modalAddPeople = ref(false);\n    const refSelectUser = ref<any>();\n\n    const addPermission = reactive({\n      users: [] as number[],\n      permission: 'read' as CalendarPermissionType,\n    });\n\n    const isOpenSelectUser = ref(false);\n    const isVisiblePopConfirm = ref(false);\n    const isVisibleTooltipRevokeGlobal = ref(false);\n\n    const sharedWith = ref<DataItem[]>([]);\n\n    const specialPermissions = reactive({\n      admin: {\n        permission: Permission.Read as CalendarPermissionType,\n        label: 'Administrators',\n        icon: 'KeyOutlined',\n      },\n      global: {\n        permission: null as CalendarPermissionType | null,\n        label: 'All users',\n        icon: 'TeamOutlined',\n      },\n    });\n\n    watch(\n      () => props.calendar,\n      ({ permissions }) => {\n        if (!permissions) {\n          return;\n        }\n\n        specialPermissions.admin.permission = permissions.admin;\n\n        if (permissions.global) {\n          specialPermissions.global.permission = permissions.global;\n        } else {\n          specialPermissions.global.permission = null;\n        }\n\n        if (!permissions.individual) {\n          sharedWith.value = [];\n\n          return;\n        }\n\n        sharedWith.value = [];\n\n        permissions.individual!.forEach(individual => {\n          sharedWith.value.push({ ...individual, isOwner: false });\n        });\n      },\n      { immediate: true },\n    );\n\n    watch(modalAddPeople, isOpen => {\n      if (!isOpen) return;\n\n      nextTick(() => {\n        refSelectUser.value.focus();\n      });\n    });\n\n    const availableUsers = computed(() => {\n      if (\n        !props.calendar.permissions ||\n        !isArrayAndHasItems(props.calendar.permissions.individual)\n      ) {\n        return users.value;\n      }\n\n      return users.value.filter(user => {\n        const ignoreUser = props.calendar.permissions!.individual!.some(\n          individual => individual.id === user.id,\n        );\n\n        return !ignoreUser;\n      });\n    });\n\n    const userFilterOption = (input: string, option: any) => {\n      input = input.trim();\n      const currentUser = users.value.find(item => item.id === option.value);\n\n      if (!currentUser) {\n        return false;\n      }\n\n      if (currentUser.fullName.toLowerCase().includes(input.toLowerCase())) {\n        return true;\n      }\n\n      return currentUser.email.toLowerCase().includes(input.toLowerCase());\n    };\n\n    const revokePermission = async (type: 'global' | 'individual', userId?: number) => {\n      if (type === PermissionsType.Individual && !userId) {\n        throw new Error(`Field \"userId\" is required for revoke permission`);\n      }\n\n      const args: RevokePermissionArgs = {\n        calendarId: props.calendar.id,\n        type,\n      };\n\n      if (type === PermissionsType.Individual && userId) {\n        args.userId = userId;\n      }\n\n      const result = await calendarService.revokePermission(args);\n\n      const newPermissions = transformPermission(result.permissions);\n      updateSource(props.calendar.id, { permissions: newPermissions });\n    };\n\n    const addUserPermission = async () => {\n      const usersToAdd = users.value.filter(user => addPermission.users.includes(user.id));\n\n      await setPermission({\n        type: PermissionsType.Individual,\n        permission: addPermission.permission,\n        userIds: usersToAdd.map(user => user.id),\n      });\n\n      modalAddPeople.value = false;\n\n      addPermission.users = [];\n      addPermission.permission = 'read';\n    };\n\n    const onChangePopConfirm = (visible: boolean) => {\n      isVisiblePopConfirm.value = visible;\n    };\n\n    const onCancelModalAddPeople = () => {\n      addPermission.users = [];\n      addPermission.permission = 'read';\n    };\n\n    const setPermission = async ({ type, permission, userIds = [] }: OnChangePermissionArgs) => {\n      try {\n        const result = await calendarService.setPermission({\n          calendarId: props.calendar.id,\n          type,\n          permission,\n          userIds,\n        });\n\n        const newPermissions = transformPermission(result.permissions);\n        updateSource(props.calendar.id, { permissions: newPermissions });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    const setCalendarAsGlobal = async () => {\n      specialPermissions.global.permission = 'read';\n\n      await setPermission({\n        type: PermissionsType.Global,\n        permission: Permission.Read,\n      });\n    };\n\n    return {\n      whoami,\n      sharedWith,\n      addPermission,\n      refSelectUser,\n      isLoading,\n      modalAddPeople,\n      users,\n      availableUsers,\n      PermissionsType,\n      userFilterOption,\n      isOpenSelectUser,\n      specialPermissions,\n      revokePermission,\n      onChangePopConfirm,\n      isVisiblePopConfirm,\n      isVisibleTooltipRevokeGlobal,\n      addUserPermission,\n      onCancelModalAddPeople,\n      setPermission,\n      setCalendarAsGlobal,\n    };\n  },\n});\n","import { CalendarEvent, EventFrequencyType, WeekDayMinType } from '@/types/calendar.type';\n\nimport moment, { Moment } from 'moment';\nimport { RRule } from 'rrule';\nimport { notification } from 'ant-design-vue';\n\ninterface EventNotification {\n  id: string;\n  title: string;\n  date: string;\n  allDay: boolean;\n  /** Indicates if this event is a child */\n  childId?: string;\n}\n\ninterface EventScheduler {\n  eventId: string;\n  timeoutId: number;\n  /** Indicates if this event is a child */\n  childEventId?: string;\n}\n\ninterface SaveScheduler {\n  delay: number;\n  childEventId?: string;\n  notification: ShowNotification;\n}\n\ninterface ShowNotification {\n  eventId: string;\n  date: Moment | boolean;\n  title: string;\n  /** Indicates if the scheduler runs ten minutes earlier */\n  prev?: boolean;\n}\n\nexport default class {\n  private _today: Moment;\n\n  public notifications: EventNotification[] = [];\n  public schedulers: EventScheduler[] = [];\n\n  constructor(private readonly _events: CalendarEvent[]) {\n    this._today = moment();\n  }\n\n  public run() {\n    const events = this.getEventsToNotify();\n    this.notifications = events;\n    console.log(events);\n    events.forEach(event => this.addEventScheduler(event));\n    console.log(this.schedulers);\n  }\n\n  public addEventScheduler(event: EventNotification) {\n    const startAt = moment(event.date);\n\n    // All day even\n    if (event.allDay) {\n      startAt.add(17, 'hours').add(33, 'minutes');\n\n      // The current time is higher than 8:00 a.m\n      if (startAt.isBefore(this._today)) {\n        console.log('Past time');\n        return;\n      }\n\n      // Event notification at 8:00 a.m\n\n      this._registerScheduler({\n        delay: startAt.valueOf() - this._today.valueOf(),\n        childEventId: event.childId,\n\n        notification: {\n          eventId: event.id,\n          date: true,\n          title: event.title,\n        },\n      });\n\n      return;\n    }\n\n    // Event at an exact time\n\n    const tenMinutesBefore = moment(startAt).subtract(10, 'minutes');\n\n    // Notification 10 minutes before\n    if (tenMinutesBefore.isSameOrAfter(this._today)) {\n      this._registerScheduler({\n        delay: tenMinutesBefore.valueOf() - this._today.valueOf(),\n        childEventId: event.childId,\n\n        notification: {\n          eventId: event.id,\n          date: startAt,\n          title: event.title,\n          prev: true,\n        },\n      });\n    }\n\n    // Notification at event time\n    this._registerScheduler({\n      delay: startAt.valueOf() - this._today.valueOf(),\n      childEventId: event.childId,\n\n      notification: {\n        eventId: event.id,\n        date: startAt,\n        title: event.title,\n      },\n    });\n  }\n\n  private _registerScheduler(params: SaveScheduler) {\n    const timeoutId = setTimeout(\n      this._showNotification.bind(this),\n      params.delay,\n\n      // Arguments of \"_showNotification\"\n      params.notification,\n    );\n\n    // Save to manage later\n    this.schedulers.push({\n      timeoutId,\n      eventId: params.notification.eventId,\n      childEventId: params.childEventId,\n    });\n  }\n\n  private _showNotification(params: ShowNotification) {\n    let message = '';\n\n    if (typeof params.date === 'boolean') {\n      message = `The event \"${params.title}\" is now starting`;\n    } else {\n      message = `At ${params.date.format('H:mm a')} starts the event \"${params.title}\"`;\n    }\n\n    if (params.prev) {\n      message = `In ten minutes you have the event \"${params.title}\"`;\n    }\n\n    notification.info({\n      message: 'Event notification',\n      description: message,\n      duration: 5,\n      placement: 'bottomRight',\n    });\n\n    this._removeNotification(params.eventId);\n\n    console.log('----------------');\n    console.log(this.notifications);\n    console.log(this.schedulers);\n  }\n\n  /** Remove notification and scheduler data */\n  private _removeNotification(eventId: string) {\n    const notificationIndex = this.notifications.findIndex(notification => {\n      return notification.id === eventId;\n    });\n\n    if (notification !== -1) {\n      this.notifications.splice(notificationIndex, 1);\n    }\n\n    const schedulerIndex = this.schedulers.findIndex(scheduler => {\n      return scheduler.eventId === eventId;\n    });\n\n    if (schedulerIndex !== -1) {\n      this.schedulers.splice(notificationIndex, 1);\n    }\n  }\n\n  /** Get events to notify today */\n  public getEventsToNotify(): EventNotification[] {\n    const all: EventNotification[] = [];\n\n    for (const event of this._events) {\n      // Recurring event\n      if (event.rrule) {\n        all.push(...this.getEventsToNotifyOfRecurrence(event));\n        continue;\n      }\n\n      const isActive = this._isActiveEvent(event.start!, event.end!, event.allDay);\n\n      if (!isActive) continue;\n\n      // Event is active\n      all.push({\n        id: event.id,\n        title: event.title,\n        date: moment(event.start!).toISOString(),\n        allDay: event.allDay,\n      });\n    }\n\n    return all;\n  }\n\n  /** Get events to notify of recurrence today */\n  public getEventsToNotifyOfRecurrence(event: CalendarEvent) {\n    if (!event.rrule) {\n      throw new Error('Event is not recurring');\n    }\n\n    const { rrule, exdate } = event;\n\n    const freq = this._getFrequencyNumber(rrule.freq as EventFrequencyType);\n\n    const until = rrule.until ? moment(rrule.until).toDate() : this._today.toDate();\n\n    // Recurrence finished\n    if (moment(until).isBefore(this._today)) {\n      return [];\n    }\n\n    const rule = new RRule({\n      freq,\n      interval: rrule.interval,\n      dtstart: moment(rrule.dtstart).toDate(),\n      // Until today, ignoring original until date\n      until: this._today.toDate(),\n      byweekday: rrule.byweekday as WeekDayMinType[],\n    });\n\n    const recurrenceDates = rule.all();\n\n    let eventsActiveToday = recurrenceDates.filter(date =>\n      this._isActiveEvent(date, this._today.toDate(), event.allDay),\n    );\n\n    // Remove excluded events\n    if (exdate && exdate.length) {\n      eventsActiveToday = eventsActiveToday.filter(date => {\n        const isExcluded = exdate.some(exDate => moment(exDate).isSame(date));\n\n        // Return only events not excluded by user\n        return !isExcluded;\n      });\n    }\n\n    // const { children = [] } = event;\n    const children: CalendarEvent[] = [];\n\n    let childId: string | undefined = undefined;\n\n    return eventsActiveToday.map(date => {\n      let title = event.title;\n\n      if (children.length) {\n        for (const child of children) {\n          // Title for this event has been changed by user\n          const changeTitle = moment(child.start).isSame(date);\n\n          if (changeTitle) {\n            title = child.title;\n            childId = child.id;\n            break;\n          }\n        }\n      }\n\n      return {\n        id: event.id,\n        title,\n        date: moment(date).toISOString(),\n        allDay: event.allDay,\n        childId,\n      } as EventNotification;\n    });\n  }\n\n  private _getFrequencyNumber(frequency: EventFrequencyType) {\n    return RRule.FREQUENCIES.findIndex(freq => freq === frequency);\n  }\n\n  private _isActiveEvent(start: string | Date, end: string | Date, allDay = true) {\n    // Event finished\n    if (moment(end).isBefore(this._today)) {\n      return false;\n    }\n\n    const startDate = moment(start);\n    const isToday = startDate.isSame(this._today.toDate(), 'days');\n\n    if (allDay) {\n      return isToday;\n    }\n\n    // The event has not happened\n    const isAfter = this._today.diff(startDate) < 0;\n\n    return isToday && isAfter;\n  }\n}\n","import { render } from \"./Permissions.vue?vue&type=template&id=f14bbbaa&scoped=true\"\nimport script from \"./Permissions.vue?vue&type=script&lang=ts\"\nexport * from \"./Permissions.vue?vue&type=script&lang=ts\"\n\nimport \"./Permissions.vue?vue&type=style&index=0&id=f14bbbaa&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-f14bbbaa\"\n\nexport default script","\nimport { computed, defineComponent, inject, reactive, ref, toRefs, watch } from 'vue';\nimport { PlusOutlined } from '@ant-design/icons-vue';\nimport Color from '@/components/Color.vue';\nimport { useCalendarSources, useGlobalProps, useUsers } from '@/composables';\nimport Permissions from './Permissions.vue';\nimport { Color as IColor } from '@/types/color.type';\nimport { ModalSettingsSymbol } from '@/utils/symbols';\nimport { CalendarCreate, ChangeCalendarData } from '@/types/calendar.type';\nimport { cloneObject } from '@/utils/functions';\n\nexport default defineComponent({\n  components: {\n    Color,\n    Permissions,\n    PlusOutlined,\n  },\n  emits: ['readyForUpdate', 'changeSource', 'change', 'createCalendar'],\n  setup(_, { emit }) {\n    const { isLoading } = useGlobalProps();\n    const { sourceColors, sourcesToRender, defaultSource } = useCalendarSources();\n    const { whoami, getUserFullName } = useUsers();\n\n    const state = reactive({\n      name: '',\n      color: '',\n    });\n\n    const modalData = inject(ModalSettingsSymbol)!;\n    const refNewCalendarName = ref();\n\n    const isNameTouched = ref(false);\n    const calendarId = ref(defaultSource.value.id);\n\n    const owner = computed(() => {\n      const fullName = getUserFullName(whoami.value);\n\n      return { ...whoami, fullName };\n    });\n\n    const calendar = computed(() => {\n      return sourcesToRender.value.own.find(item => item.id === calendarId.value)!;\n    });\n\n    const nameStatus = computed(() => {\n      if (isNameTouched.value && !state.name) {\n        return {\n          help: 'Required field',\n          validateStatus: 'error',\n        };\n      }\n\n      return {\n        validateStatus: 'success',\n      };\n    });\n\n    const colors = computed(() => {\n      const _colors: IColor[] = [];\n      let hasOutColor = true;\n\n      for (const _color of sourceColors.value) {\n        if (hasOutColor && _color.color === calendar.value.color) {\n          hasOutColor = false;\n        }\n\n        _colors.push({ ..._color, active: _color.color === state.color });\n      }\n\n      if (hasOutColor) {\n        _colors.push({\n          color: calendar.value.color,\n          disabled: false,\n          animate: true,\n          isOut: true,\n          active: calendar.value.color === state.color,\n        });\n      }\n\n      return _colors;\n    });\n\n    const isReadyForUpdate = computed(() => {\n      if (nameStatus.value.validateStatus === 'error') {\n        return false;\n      }\n\n      if (state.name !== calendar.value.name || state.color !== calendar.value.color) {\n        return true;\n      }\n\n      return false;\n    });\n\n    watch(\n      calendar,\n      calendarSelected => {\n        state.name = calendarSelected.name;\n        state.color = calendarSelected.color;\n      },\n      { immediate: true },\n    );\n\n    watch(modalData.activeTab, tab => {\n      if (tab === 'calendars') {\n        isNameTouched.value = false;\n\n        state.name = calendar.value.name;\n        state.color = calendar.value.color;\n\n        calendarId.value = defaultSource.value.id;\n      }\n    });\n\n    const onChangeName = () => {\n      if (!isNameTouched.value) {\n        isNameTouched.value = true;\n      }\n    };\n\n    const onChangeCalendar = () => {\n      refNewCalendarName.value && refNewCalendarName.value.focus();\n    };\n\n    const onClickSave = async () => {\n      const keys = Object.keys(state) as ('name' | 'color')[];\n      /** Only data updated */\n      const updated = keys.reduce<Partial<CalendarCreate>>((data, key) => {\n        if (calendar.value[key] !== state[key]) {\n          return { ...data, [key]: state[key] };\n        }\n        return data;\n      }, {} as CalendarCreate);\n\n      emit('change', {\n        data: updated,\n        source: { ...calendar.value, ...updated },\n        oldSource: cloneObject(calendar.value),\n      } as ChangeCalendarData);\n    };\n\n    return {\n      ...toRefs(state),\n      refNewCalendarName,\n      sourceColors,\n      sources: sourcesToRender,\n      nameStatus,\n      calendar,\n      colors,\n      isLoading,\n      isReadyForUpdate,\n      owner,\n      onChangeName,\n      onCreateCalendar: () => emit('createCalendar'),\n      calendarId,\n      onChangeCalendar,\n      onClickSave,\n    };\n  },\n});\n","import { render } from \"./ManageCalendar.vue?vue&type=template&id=751f477d\"\nimport script from \"./ManageCalendar.vue?vue&type=script&lang=ts\"\nexport * from \"./ManageCalendar.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, inject, nextTick, provide, reactive, ref, watch } from 'vue';\nimport { CalendarOutlined, SettingOutlined } from '@ant-design/icons-vue';\nimport { CalendarSettingsSymbol, ModalSettingsSymbol } from '@/utils/symbols';\nimport timezones from '@/utils/timezones.json';\nimport ManageCalendar from './ManageCalendar.vue';\nimport { ChangeCalendarData } from '@/types/calendar.type';\nimport { calendarService } from '@/services';\nimport { useCalendarSources } from '@/composables';\nimport { notification } from 'ant-design-vue';\n\nexport default defineComponent({\n  components: { CalendarOutlined, SettingOutlined, ManageCalendar },\n  props: {\n    isDisplay: Boolean,\n    timezoneAutofocus: Boolean,\n  },\n  emits: ['changeSource', 'createCalendar'],\n  setup(props, { emit }) {\n    const { updateSource } = useCalendarSources();\n    const settings = inject(CalendarSettingsSymbol)!;\n\n    const tab = ref('general');\n\n    provide(ModalSettingsSymbol, {\n      isDisplay: computed(() => props.isDisplay),\n      activeTab: tab,\n    });\n\n    const refCalendarForm = ref<any>({});\n    const refTimezones = ref<any>(null);\n\n    const calendar = reactive({\n      name: '',\n      color: '',\n    });\n\n    // Set autofocus to timezone select\n    watch(\n      () => props.isDisplay,\n      isDisplay => {\n        if (!props.timezoneAutofocus || !isDisplay) {\n          return;\n        }\n\n        tab.value !== 'general' && (tab.value = 'general');\n\n        nextTick(() => {\n          refTimezones.value.focus();\n        });\n      },\n      { immediate: true },\n    );\n\n    const onChangeCalendarData = async ({ data, source, oldSource }: ChangeCalendarData) => {\n      try {\n        // Update calendar in API\n        await calendarService.updateCalendar(source.id, data);\n        // Update source in local data\n        updateSource(source.id, data);\n\n        emit('changeSource', { source, oldSource });\n\n        notification.success({\n          message: 'Calendar updated!',\n          placement: 'bottomRight',\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    return {\n      refCalendarForm,\n      refTimezones,\n      settings,\n      timezones,\n      calendar,\n      tab,\n      onChangeCalendarData,\n      onCreateCalendar: () => emit('createCalendar'),\n    };\n  },\n});\n","import { render } from \"./CalendarSettings.vue?vue&type=template&id=1c0ed85e&scoped=true\"\nimport script from \"./CalendarSettings.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarSettings.vue?vue&type=script&lang=ts\"\n\nimport \"./CalendarSettings.vue?vue&type=style&index=0&id=1c0ed85e&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1c0ed85e\"\n\nexport default script","\nimport { computed, defineComponent, nextTick, reactive, ref, toRefs, watch } from 'vue';\nimport {\n  RightOutlined,\n  LeftOutlined,\n  SettingOutlined,\n  PlusOutlined,\n  CalendarOutlined,\n  DownOutlined,\n  AimOutlined,\n  FormOutlined,\n  GlobalOutlined,\n  SearchOutlined,\n  ArrowLeftOutlined,\n  CloseOutlined,\n} from '@ant-design/icons-vue';\nimport moment from 'moment';\nimport CalendarSettings from '@/components/CalendarSettings.vue';\nimport { useCalendarSources, useModeFilter, useTime, useUsers } from '@/composables';\nimport {\n  CalendarBasics,\n  ChangeSource,\n  ToggleCalendarVisibilityParams,\n} from '@/types/calendar.type';\nimport useGlobal from '@/composables/use-global';\nimport { createDebounce } from '@/utils/functions';\nimport { CalendarContext } from '@/utils/enums/global.enum';\n\ninterface OnCalendarCheck {\n  checked: boolean;\n  calendar: {\n    id: string;\n    name: string;\n    color: string;\n    show: boolean;\n    isDefault: boolean;\n  };\n}\n\nexport default defineComponent({\n  components: {\n    CalendarSettings,\n    RightOutlined,\n    LeftOutlined,\n    SettingOutlined,\n    PlusOutlined,\n    CalendarOutlined,\n    DownOutlined,\n    AimOutlined,\n    FormOutlined,\n    GlobalOutlined,\n    SearchOutlined,\n    ArrowLeftOutlined,\n    CloseOutlined,\n  },\n  props: {\n    viewTitle: {\n      type: String,\n      required: true,\n    },\n    viewName: {\n      type: String,\n      required: true,\n    },\n  },\n  emits: [\n    'changeView',\n    'setToday',\n    'create',\n    'changeViewPage',\n    'gotoDate',\n    'changeCalendarVisibility',\n    'changeSource',\n    'fetchEvents',\n  ],\n  setup(_, { emit }) {\n    const { isLoading } = useGlobal();\n    const { whoami } = useUsers();\n    const { sourcesToRender, sources } = useCalendarSources();\n    const { timezoneLabel } = useTime();\n    const {\n      isModeFilter,\n      isDisplayInputSearch,\n      isFilterAppliedWithKeyword,\n      paginationStatus,\n      keyword,\n      setKeyword,\n      setVisibilityInputSearch,\n      setCalendarsToFilter,\n      setPaginationSkip,\n      resetPagination,\n      setFilterViewAsActive,\n    } = useModeFilter();\n\n    const timezoneAutofocus = ref(false);\n\n    const state = reactive({\n      showCalendarsDropdown: false,\n      viewSelectedLabel: isModeFilter.value ? 'list' : 'month',\n      calendars: [] as OnCalendarCheck['calendar'][],\n      modalSettings: false,\n      popoverCustomDate: moment(),\n      createType: 'event' as 'event' | 'calendar',\n      sourceToFilter: {} as { [key: string]: boolean },\n    });\n\n    const popover = reactive({\n      click: false,\n      hover: false,\n    });\n\n    const debounce = createDebounce();\n\n    const isHideTitle = computed(() => {\n      return isModeFilter.value && state.viewSelectedLabel === 'list';\n    });\n\n    const isNextDisabled = computed(() => {\n      return isHideTitle.value && !paginationStatus.value.next;\n    });\n\n    const isPrevDisabled = computed(() => {\n      return isHideTitle.value && !paginationStatus.value.prev;\n    });\n\n    const paginationLabel = computed(() => {\n      if (isHideTitle.value) {\n        return { prev: 'Previous page', next: 'Next page' };\n      }\n\n      const viewLabel = state.viewSelectedLabel;\n\n      return { prev: `Previous ${viewLabel}`, next: `Next ${viewLabel}` };\n    });\n\n    const popoverDateData = computed(() => {\n      switch (state.viewSelectedLabel) {\n        case 'day':\n        case 'week':\n        case 'list':\n          return { component: 'ADatePicker', format: 'LL' };\n        default:\n          return { component: 'AMonthPicker', format: 'MMMM YYYY' };\n      }\n    });\n\n    const sourcesToFilter = computed(() => {\n      if (!isDisplayInputSearch) {\n        return [];\n      }\n\n      const ids: string[] = [];\n\n      for (const source of sources.value) {\n        if (!state.sourceToFilter[source.id] && source.context !== CalendarContext.Google) {\n          ids.push(source.id);\n        }\n      }\n\n      return ids;\n    });\n\n    watch(\n      sourcesToFilter,\n      val => {\n        setCalendarsToFilter(val);\n      },\n      { immediate: true },\n    );\n\n    const refCalendarSettings = ref({});\n    const refInputKeyword = ref();\n\n    const handlePopoverCustomDateChange = (visible: boolean, trigger: 'hover' | 'click') => {\n      if (trigger === 'hover' && popover.click) {\n        return;\n      }\n\n      popover[trigger] = visible;\n      popover[trigger === 'hover' ? 'click' : 'hover'] = false;\n    };\n\n    /** Current date */\n    const today = moment().format('dddd, MMMM D');\n\n    const views = [\n      { name: 'timeGridDay', label: 'Day' },\n      { name: 'timeGridWeek', label: 'Week' },\n      { name: 'dayGridMonth', label: 'Month' },\n      { name: isModeFilter.value ? 'filter' : 'listWeek', label: 'List' },\n    ];\n\n    const setViewTitle = (viewName: string) => {\n      if (viewName === 'listWeek' || viewName === 'filter') {\n        state.viewSelectedLabel = 'list';\n        return;\n      }\n\n      const view = views.find(view => view.name === viewName)!;\n\n      if (!view) {\n        console.error(new Error(`View \"${viewName}\" not found`));\n      }\n\n      state.viewSelectedLabel = view.label.toLowerCase();\n    };\n\n    const onClickShowSearchBar = () => {\n      setVisibilityInputSearch(true);\n\n      nextTick(() => {\n        refInputKeyword.value.focus();\n      });\n    };\n\n    const onClickHideSearchBar = () => {\n      const hasFilter = !!keyword.value;\n      setVisibilityInputSearch(false);\n\n      hasFilter && emit('fetchEvents');\n    };\n\n    const onClickClearKeyword = () => {\n      setKeyword('');\n      refInputKeyword.value.focus();\n\n      resetPagination();\n      emit('fetchEvents');\n    };\n\n    const onCheckedCalendarSearch = (checked: boolean, calendar: CalendarBasics) => {\n      state.sourceToFilter[calendar.id] = !checked;\n\n      nextTick(() => emit('fetchEvents'));\n    };\n\n    const onChangeView = (view: string) => {\n      setViewTitle(view);\n      emit('changeView', view);\n\n      setFilterViewAsActive(view === 'filter');\n    };\n\n    const onSetToday = () => {\n      emit('setToday');\n    };\n\n    const onGotoCustomDate = () => {\n      emit('gotoDate', state.popoverCustomDate.toISOString());\n\n      // Reset date and close popover\n      state.popoverCustomDate = moment();\n      popover.click = false;\n    };\n\n    const onCreate = (type: 'event' | 'calendar') => {\n      emit('create', type);\n    };\n\n    const onChangeViewPage = (type: 'next' | 'prev') => {\n      if (!isHideTitle.value) {\n        emit('changeViewPage', type);\n\n        return;\n      }\n\n      setPaginationSkip(type);\n      emit('fetchEvents');\n    };\n\n    const onClickChangeTimezone = () => {\n      state.modalSettings = true;\n      timezoneAutofocus.value = true;\n    };\n\n    const onClickSettings = () => {\n      state.modalSettings = true;\n      timezoneAutofocus.value = false;\n    };\n\n    const handleMenuClick = ({ item }: any) => {\n      state.createType = item.value;\n    };\n\n    const onInputSearch = (value: string) => {\n      value = value.trimStart();\n\n      if (!value && !keyword.value) {\n        return;\n      }\n\n      setKeyword(value);\n\n      if (value.length > 0 && value.length < 2) {\n        return;\n      }\n\n      debounce(() => {\n        if (state.viewSelectedLabel !== 'list') {\n          onChangeView('filter');\n        }\n\n        emit('fetchEvents');\n      });\n    };\n\n    /** Show/hide calendars */\n    const onCalendarChecked = async (calendarId: string, checked: boolean) => {\n      emit('changeCalendarVisibility', { calendarId, checked } as ToggleCalendarVisibilityParams);\n    };\n\n    const onChangeSource = (data: ChangeSource) => {\n      emit('changeSource', data);\n    };\n\n    return {\n      today,\n      views,\n      ...toRefs(state),\n      isLoading,\n      refCalendarSettings,\n      refInputKeyword,\n      popover,\n      whoami,\n      keyword,\n      setKeyword,\n      isModeFilter,\n      isHideTitle,\n      isDisplayInputSearch,\n      isFilterAppliedWithKeyword,\n      isNextDisabled,\n      isPrevDisabled,\n      paginationLabel,\n      sourcesToRender,\n      sourcesToFilter,\n      popoverDateData,\n      setVisibilityInputSearch,\n      onInputSearch,\n      onClickClearKeyword,\n      onClickShowSearchBar,\n      onClickHideSearchBar,\n      onCheckedCalendarSearch,\n      onChangeView,\n      onSetToday,\n      onCreate,\n      onChangeViewPage,\n      onCalendarChecked,\n      onChangeSource,\n      handleMenuClick,\n      handlePopoverCustomDateChange,\n      onGotoCustomDate,\n      timezoneLabel,\n      timezoneAutofocus,\n      onClickChangeTimezone,\n      onClickSettings,\n    };\n  },\n});\n","import { render } from \"./CalendarToolbar.vue?vue&type=template&id=31cc7e82&scoped=true\"\nimport script from \"./CalendarToolbar.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarToolbar.vue?vue&type=script&lang=ts\"\n\nimport \"./CalendarToolbar.vue?vue&type=style&index=0&id=31cc7e82&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-31cc7e82\"\n\nexport default script","<template>\n  <AForm ref=\"refForm\" :model=\"form\" layout=\"vertical\">\n    <AFormItem\n      label=\"Event Title\"\n      name=\"title\"\n      :rules=\"{\n        required: true,\n        message: 'Event title can\\'t be empty',\n        trigger: 'change',\n      }\"\n    >\n      <AInput v-model:value=\"form.title\" placeholder=\"Type Event Title\" autocomplete=\"off\" />\n    </AFormItem>\n\n    <ARow :gutter=\"12\">\n      <ACol :span=\"dateCols.date\">\n        <AFormItem label=\"Event date\">\n          <ARangePicker\n            v-if=\"isSplitCurrentEvent || !form.isRecurringEvent\"\n            v-model:value=\"dateRange\"\n            :format=\"dateFormat\"\n            :allow-clear=\"false\"\n            separator=\"to\"\n            style=\"width: 100%\"\n          />\n          <ADatePicker\n            v-else\n            v-model:value=\"form.start\"\n            :format=\"dateFormat\"\n            style=\"width: 100%\"\n            :allow-clear=\"false\"\n            @change=\"onChangeDates('start', $event)\"\n          />\n        </AFormItem>\n      </ACol>\n\n      <ACol :span=\"dateCols.time\" v-if=\"!form.allDay\">\n        <ARow :gutter=\"12\">\n          <ACol :span=\"12\">\n            <AFormItem label=\"Starts at\">\n              <ATimePicker\n                v-model:value=\"form.start\"\n                use12-hours\n                format=\"h:mm a\"\n                :allow-clear=\"false\"\n                style=\"width: 100%\"\n                @change=\"onChangeDates('start', $event)\"\n              />\n            </AFormItem>\n          </ACol>\n          <ACol :span=\"12\">\n            <AFormItem label=\"Ends at\">\n              <ATimePicker\n                v-model:value=\"form.end\"\n                use12-hours\n                format=\"h:mm a\"\n                :allow-clear=\"false\"\n                style=\"width: 100%\"\n                @change=\"onChangeDates('end', $event)\"\n              />\n            </AFormItem>\n          </ACol>\n        </ARow>\n      </ACol>\n    </ARow>\n\n    <AFormItem>\n      <ARow :gutter=\"12\">\n        <ACol :span=\"12\">\n          <ARow>\n            <ACol :span=\"24\">\n              <VSwitch\n                v-model=\"form.allDay\"\n                label=\"All Day Event\"\n                size=\"small\"\n                @change=\"onChangeAllDay\"\n              />\n            </ACol>\n            <ACol v-if=\"type === 'create'\" :span=\"24\">\n              <VSwitch\n                v-model=\"includeContact\"\n                :disabled=\"!!contactData\"\n                label=\"Include Contact\"\n                size=\"small\"\n              />\n            </ACol>\n          </ARow>\n        </ACol>\n\n        <ACol :span=\"12\" v-if=\"!isHideRecurrenceOptions\">\n          <VSwitch\n            v-model=\"form.isRecurringEvent\"\n            label=\"Is a Recurring Event\"\n            size=\"small\"\n            :disabled=\"isOriginalEventRecurring\"\n            @change=\"onChangeEventType\"\n          />\n        </ACol>\n      </ARow>\n    </AFormItem>\n\n    <ACard\n      v-if=\"form.isRecurringEvent && !isHideRecurrenceOptions\"\n      title=\"Recurrence options\"\n      body-style=\"padding-bottom: 0\"\n      style=\"margin-bottom: 20px\"\n    >\n      <CalendarRecurrence\n        ref=\"refRecurrence\"\n        v-model:interval=\"recurrence.interval\"\n        v-model:freq=\"recurrence.freq\"\n        v-model:byweekday=\"recurrence.byweekday\"\n        v-model:ends=\"recurrence.ends\"\n        v-model:until=\"recurrence.until\"\n        v-model:count=\"recurrence.count\"\n        v-model:byDay=\"recurrence.byDay\"\n        :dtstart=\"recurrence.dtstart\"\n        @change-until=\"onChangeUntil\"\n      />\n    </ACard>\n\n    <ARow v-if=\"includeContact || (type === 'edit' && form.contact)\" :gutter=\"12\">\n      <ACol :span=\"12\">\n        <AFormItem\n          label=\"Contact\"\n          name=\"contact\"\n          :rules=\"{\n            required: true,\n            message: 'Required field',\n            trigger: 'change',\n            type: 'number',\n          }\"\n        >\n          <SelectContact\n            v-model=\"form.contact\"\n            :disabled=\"contactData && !!contactData.id\"\n            @change=\"onChangeContact\"\n          />\n        </AFormItem>\n      </ACol>\n\n      <ACol :span=\"12\">\n        <AFormItem\n          label=\"Case\"\n          name=\"case\"\n          :rules=\"{\n            required: isRequiredCaseField,\n            message: 'Required field',\n            trigger: 'change',\n            type: 'number',\n          }\"\n        >\n          <SelectCase\n            v-model=\"form.case\"\n            :contact=\"form.contact\"\n            :disabled=\"(contactData && !!contactData.caseId) || !form.contact || isLoading\"\n            @hasNotCases=\"isRequiredCaseField = false\"\n          />\n        </AFormItem>\n      </ACol>\n    </ARow>\n\n    <ARow :gutter=\"12\">\n      <ACol :span=\"12\">\n        <AFormItem label=\"Timezone\">\n          <ASelect v-model:value=\"form.timezone\" show-search>\n            <ASelectOption\n              v-for=\"(timezoneLabel, timezone) in timezones\"\n              :key=\"timezone\"\n              :value=\"timezone\"\n            >\n              {{ timezoneLabel }}\n            </ASelectOption>\n          </ASelect>\n        </AFormItem>\n      </ACol>\n      <ACol :span=\"10\">\n        <AFormItem label=\"Calendar\">\n          <ASelect\n            v-model:value=\"form.calendarId\"\n            @change=\"onChangeCalendar\"\n            show-search\n            :filter-option=\"onFilterCalendars\"\n          >\n            <ASelectOption\n              v-for=\"calendar of sourcesToRender.own\"\n              :value=\"calendar.id\"\n              :key=\"calendar.id\"\n            >\n              {{ calendar.name }}\n            </ASelectOption>\n\n            <ASelectOption\n              v-for=\"calendar of sharedCalendars\"\n              :value=\"calendar.id\"\n              :key=\"calendar.id\"\n            >\n              {{ calendar.name }} ({{ calendar.user.fullName }})\n            </ASelectOption>\n          </ASelect>\n        </AFormItem>\n      </ACol>\n      <ACol :span=\"2\">\n        <div style=\"display: flex; height: 100%; align-items: center\">\n          <Color v-model=\"form.color\" :colors-data=\"colors\" />\n        </div>\n      </ACol>\n    </ARow>\n\n    <ARow>\n      <ACol :span=\"24\">\n        <AFormItem label=\"Location\">\n          <AInput\n            v-model:value=\"form.location\"\n            :disabled=\"isLoading\"\n            placeholder=\"610 E 16th St, Holland, MI\"\n          />\n        </AFormItem>\n      </ACol>\n    </ARow>\n\n    <ARow>\n      <ACol :span=\"24\">\n        <AFormItem\n          label=\"Attendees\"\n          name=\"attendees\"\n          :rules=\"{\n            trigger: 'change',\n            type: 'array',\n            validator: attendeesValidator,\n          }\"\n        >\n          <ASelect\n            v-model:value=\"form.attendees\"\n            mode=\"tags\"\n            style=\"width: 100%\"\n            :token-separators=\"[',']\"\n            :disabled=\"isLoading\"\n            placeholder=\"Attendees\"\n          ></ASelect>\n        </AFormItem>\n      </ACol>\n    </ARow>\n\n    <AFormItem label=\"Description\">\n      <Editor v-model=\"form.description\" />\n    </AFormItem>\n  </AForm>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, provide, reactive, ref, unref, watch } from 'vue';\nimport CalendarRecurrence from '@/components/CalendarRecurrence.vue';\nimport VSwitch from '@/components/VSwitch.vue';\nimport SelectContact from '@/components/SelectContact.vue';\nimport SelectCase from '@/components/SelectCase.vue';\nimport Editor from '@/components/Editor.vue';\nimport Color from '@/components/Color.vue';\n\nimport { Moment } from 'moment-timezone';\nimport {\n  CalendarEvent,\n  CalendarEventDuration,\n  CalendarEventPosition,\n  CalendarFormEventNew,\n  CalendarRecurrenceNew,\n  CalendarRecurringEvent,\n  EditRecurringType,\n} from '@/types/calendar.type';\nimport { EventFrequency, Permission } from '@/utils/enums/global.enum';\nimport {\n  formatEventDates,\n  getCurrentAvailableTimeRange,\n  getRuleDates,\n} from '@/helpers/calendar.helper';\nimport {\n  useCalendar,\n  useCalendarSources,\n  useGlobalProps,\n  useModeFilter,\n  useTime,\n} from '@/composables';\nimport { CalendarFormSymbol } from '@/utils/symbols';\nimport { FORMAT_EVENT } from '@/utils/constants';\nimport { Color as IColor } from '@/types/color.type';\nimport {\n  cloneObject,\n  isArrayAndHasItems,\n  isoDateWithoutTime,\n  isUndefined,\n  isValidEmail,\n  removeObjectProps,\n} from '@/utils/functions';\nimport { calendarHelper } from '@/helpers';\nimport timezones from '@/utils/timezones.json';\nimport moment from 'moment';\nimport { EventColors } from '@/utils/enums/colors.enum';\nimport { RuleObject } from 'ant-design-vue/lib/form/interface';\n\nexport default defineComponent({\n  components: { CalendarRecurrence, VSwitch, Editor, SelectContact, SelectCase, Color },\n  props: {\n    type: {\n      type: String as PropType<'edit' | 'create'>,\n      default: 'create',\n    },\n    data: Object as PropType<CalendarEvent>,\n    isDisplay: {\n      type: Boolean,\n      required: true,\n    },\n    editRecurringType: String as PropType<EditRecurringType>,\n    newEventRange: {\n      type: Object as PropType<CalendarEventPosition>,\n      required: true,\n    },\n  },\n  setup(props) {\n    const { time, timezone } = useTime();\n    const { isLoading } = useGlobalProps();\n    const { getSourcePermission } = useCalendarSources();\n    const {\n      selectedSource,\n      defaultSource,\n      sourcesToRender,\n      setCurrentCalendarId,\n      currentEventApi,\n    } = useCalendar();\n\n    const { isModeFilter, contactData } = useModeFilter();\n\n    const refForm = ref();\n    const refRecurrence = ref();\n    const isRequiredCaseField = ref(true);\n\n    const form = reactive<CalendarFormEventNew>({\n      id: undefined,\n      timezone: unref(timezone.value),\n      calendarId: '',\n      title: undefined,\n      start: time(),\n      end: time(),\n      allDay: false,\n      isRecurringEvent: false,\n      contact: undefined,\n      case: undefined,\n      description: undefined,\n      color: undefined,\n      location: undefined,\n      attendees: undefined,\n    });\n\n    const recurrence = reactive<CalendarRecurrenceNew>({\n      interval: 1,\n      freq: EventFrequency.Weekly,\n      byweekday: undefined,\n      ends: 'never',\n      until: undefined,\n      dtstart: time(),\n      count: undefined,\n      byDay: undefined,\n    });\n\n    const isEndDateChangedByUser = ref(false);\n    const includeContact = ref(true);\n\n    const isOriginalEventRecurring = computed(() => {\n      return props.type === 'edit' && !!props.data && !!props.data.rrule;\n    });\n\n    const isSplitCurrentEvent = computed(() => {\n      return (\n        isOriginalEventRecurring.value &&\n        props.type === 'edit' &&\n        props.editRecurringType === 'current'\n      );\n    });\n\n    const eventToForm = (event: CalendarEvent) => {\n      if (isUndefined(event.contact)) {\n        includeContact.value = false;\n      }\n\n      let start = {} as Moment;\n      let end = null as Moment | null;\n\n      // Recurring event\n      if (event.rrule) {\n        // Split event from recurrence\n        if (isSplitCurrentEvent.value) {\n          // Assign dates of selected event\n          start = time(currentEventApi.value.startStr, event.timezone);\n          end = time(currentEventApi.value.endStr, event.timezone);\n\n          if (end.diff(start, 'day') > 0) {\n            end.subtract(1, 'day');\n          }\n        } else {\n          // Edit all recurrence\n          const { rrule } = event;\n\n          start = time(event.rrule.dtstart, event.timezone);\n\n          if (rrule.until) {\n            end = time(rrule.until, event.timezone);\n\n            // Assign specific time to end date\n            if (!event.allDay) {\n              let newEnd: string | Moment = calendarHelper.updateDateFromDuration({\n                date: event.rrule!.dtstart,\n                allDay: false,\n                duration: event.duration!,\n              });\n\n              newEnd = time(newEnd, event.timezone);\n\n              end.set({\n                hours: newEnd.get('hours'),\n                minutes: newEnd.get('minutes'),\n                seconds: 0,\n              });\n            }\n          }\n\n          // Set other recurrence options\n          recurrence.freq = rrule.freq;\n          recurrence.interval = rrule.interval;\n          rrule.byweekday && (recurrence.byweekday = rrule.byweekday);\n          rrule.count && (recurrence.count = rrule.count);\n\n          if (rrule.freq === 'MONTHLY' && rrule.byweekday) {\n            recurrence.byDay = true;\n          }\n\n          if (rrule.count) {\n            recurrence.ends = 'ocurrences';\n          } else if (rrule.until) {\n            recurrence.ends = 'on';\n            recurrence.until = end as Moment;\n          } else {\n            recurrence.ends = 'never';\n          }\n        }\n      } else {\n        // Normal event\n        start = time(event.start, event.timezone);\n        end = time(event.end, event.timezone);\n\n        if (end.diff(start, 'day') > 0) {\n          end.subtract(1, 'day');\n        }\n      }\n\n      form.id = event.id;\n      form.calendarId = event.calendarId;\n      form.timezone = event.timezone;\n      form.title = event.title;\n      form.allDay = event.allDay;\n      form.contact = event.contact;\n      form.case = event.case;\n      form.description = event.description;\n      form.color = event.color || selectedSource.value.color;\n      form.isRecurringEvent = !!event.rrule;\n      form.start = start;\n      form.location = event.location;\n      form.attendees = event.attendees;\n\n      // Recurring event with until\n      if (end) {\n        form.end = end;\n\n        return;\n      }\n\n      // Recurring event without until date, assign\n      form.end = time(\n        calendarHelper.updateDateFromDuration({\n          date: event.rrule!.dtstart,\n          duration: event.duration!,\n          allDay: false,\n        }),\n        event.timezone,\n      );\n    };\n\n    /** Verify if the dates are in the same day */\n    const isDatesSameDay = (start: Moment, end: Moment) => {\n      return start.dayOfYear() === end.dayOfYear();\n    };\n\n    const setDates = (firstTime = false) => {\n      if (props.type === 'create' && firstTime) {\n        form.start = time(props.newEventRange.start);\n        form.end = time(props.newEventRange.end).subtract(1, 'days');\n      }\n\n      if (form.allDay) {\n        form.start.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n        form.end.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n\n        return;\n      }\n\n      let { start, end } = getCurrentAvailableTimeRange(time());\n\n      form.start.set({\n        hours: start.get('hours'),\n        minutes: start.get('minutes'),\n        seconds: start.get('seconds'),\n      });\n\n      // Same day\n      if (isDatesSameDay(start, end)) {\n        form.end.set({\n          hours: end.get('hours'),\n          minutes: end.get('minutes'),\n          seconds: end.get('seconds'),\n        });\n\n        return;\n      }\n\n      // Different days, non-recurring events\n      if (!form.isRecurringEvent) {\n        form.end.set({\n          hours: start.get('hours') + 1,\n          minutes: start.get('minutes'),\n          seconds: start.get('seconds'),\n        });\n\n        return;\n      }\n\n      // Different days, recurring events\n      form.end = form.end.clone().endOf('day').set({ milliseconds: 0 });\n    };\n\n    watch(\n      () => props.isDisplay,\n      isDisplay => {\n        if (!isDisplay) {\n          return resetForm();\n        }\n\n        if (props.type === 'create') {\n          form.calendarId = defaultSource.value.id;\n          form.timezone = timezone.value;\n          form.color = defaultSource.value.color;\n\n          if (contactData.value) {\n            form.contact = contactData.value.id;\n\n            if (contactData.value.caseId) {\n              form.case = contactData.value.caseId;\n            }\n          }\n\n          setDates(true);\n          return;\n        }\n\n        // Edit event\n        if (!props.data) {\n          throw new Error(`For event edition the \"data\" params is required.`);\n        }\n\n        // Set props to form\n        eventToForm(props.data);\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => ({ start: form.start, isRecurringEvent: form.isRecurringEvent }),\n      ({ start, isRecurringEvent }) => {\n        if (!isRecurringEvent) {\n          return;\n        }\n\n        recurrence.dtstart = start.clone();\n\n        if (props.type === 'edit' || !recurrence.until) {\n          return;\n        }\n\n        const [dtstart, until] = [\n          start.clone().format('YYYY-MM-DD'),\n          recurrence.until.clone().format('YYYY-MM-DD'),\n        ];\n\n        const isSameOrAfter = moment.utc(dtstart).isSameOrAfter(moment.utc(until));\n\n        if (isSameOrAfter || !isEndDateChangedByUser.value) {\n          recurrence.until = start.clone().add(1, 'months');\n        }\n      },\n      { immediate: true },\n    );\n\n    // Update time when timezone is changed\n    watch(\n      () => form.timezone,\n      (timezone, oldTimezone) => {\n        const start = time(form.start, oldTimezone).format(FORMAT_EVENT);\n        const end = time(form.end, oldTimezone).format(FORMAT_EVENT);\n\n        form.start = time(start, timezone);\n        form.end = time(end, timezone);\n      },\n    );\n    const dateFormat = 'dddd, MMMM D';\n\n    /** Used in normal events */\n    const dateRange = computed<[Moment, Moment]>({\n      get() {\n        return [form.start, form.end];\n      },\n\n      set(dates: [Moment, Moment]) {\n        form.start = dates[0];\n        form.end = dates[1];\n      },\n    });\n\n    const dateCols = computed(() => {\n      const cols = { date: 24, time: 24 };\n\n      if (!isSplitCurrentEvent.value && form.isRecurringEvent) {\n        cols.date = 12;\n        cols.time = 12;\n      }\n\n      return cols;\n    });\n\n    const colors = computed<IColor[]>(() => {\n      const _colors = Object.values(EventColors) as string[];\n\n      const appendColor = selectedSource.value\n        ? selectedSource.value.color\n        : defaultSource.value.color;\n\n      _colors.unshift(appendColor);\n\n      const arrColors: IColor[] = _colors.map(color => ({\n        color,\n        animate: true,\n        disabled: false,\n        active: form.color === color,\n        fixed: appendColor === color,\n      }));\n\n      const _color = (props.data && props.data.color!) || selectedSource.value.color;\n\n      if (\n        props.data &&\n        props.data.color !== appendColor &&\n        _colors.every(color => color !== _color)\n      ) {\n        arrColors.push({\n          color: _color,\n          animate: true,\n          disabled: false,\n          active: _color === form.color,\n          isOut: true,\n        });\n      }\n\n      return arrColors;\n    });\n\n    const isSourceColor = computed(() => {\n      return sourcesToRender.value.own.some(source => source.color === form.color);\n    });\n\n    const isChildEvent = computed(() => {\n      if (!props.data) {\n        return false;\n      }\n\n      return !!props.data.parentId;\n    });\n\n    const isHideRecurrenceOptions = computed(() => {\n      if (isChildEvent.value) {\n        return true;\n      }\n\n      if (!isOriginalEventRecurring.value) {\n        return false;\n      }\n\n      return isSplitCurrentEvent.value;\n    });\n\n    const sharedCalendars = computed(() => {\n      return sourcesToRender.value.shared.filter(source => {\n        const permission = getSourcePermission(source);\n\n        return permission === Permission.All;\n      });\n    });\n\n    const allCalendars = computed(() => {\n      return [...sourcesToRender.value.own, ...sharedCalendars.value];\n    });\n\n    const resetForm = () => {\n      form.id = undefined;\n      form.calendarId = '';\n      form.title = undefined;\n      form.start = time();\n      form.end = time();\n      form.allDay = false;\n      form.isRecurringEvent = false;\n      form.contact = undefined;\n      form.case = undefined;\n      form.description = undefined;\n      form.color = undefined;\n      form.location = undefined;\n      form.attendees = undefined;\n\n      recurrence.interval = 1;\n      recurrence.freq = EventFrequency.Weekly;\n      recurrence.byweekday = undefined;\n      recurrence.ends = 'never';\n      recurrence.until = undefined;\n      recurrence.dtstart = time();\n      recurrence.count = undefined;\n      recurrence.byDay = undefined;\n\n      includeContact.value = true;\n      clearValidate('contact');\n      clearValidate('case');\n    };\n\n    const getEventDuration = () => {\n      // Apply time of end date for calculate duration\n      const tempStart = form.start.clone().set({\n        hours: form.end.get('hours'),\n        minutes: form.end.get('minutes'),\n        seconds: form.end.get('seconds'),\n      });\n\n      return removeObjectProps<CalendarEventDuration>(\n        calendarHelper.generateEventDuration(form.start.clone(), tempStart),\n        'daysDiff',\n      );\n    };\n\n    const formToRecurringEvent = () => {\n      const rrule: any = {\n        dtstart: recurrence.dtstart.toISOString(),\n        interval: recurrence.interval,\n        freq: recurrence.freq,\n      };\n\n      if (recurrence.freq === 'WEEKLY' || (recurrence.freq === 'MONTHLY' && recurrence.byDay)) {\n        rrule.byweekday = recurrence.byweekday!;\n      }\n\n      if (recurrence.ends === 'on') {\n        rrule.until = recurrence.until!.toISOString();\n      } else if (recurrence.ends === 'ocurrences') {\n        rrule.count = recurrence.count!;\n\n        let dtstart = recurrence.dtstart.toISOString();\n\n        if (!form.allDay) {\n          dtstart = recurrence.dtstart.format(FORMAT_EVENT) + '.000Z';\n        }\n\n        let tmpUntil = '';\n\n        if (!form.allDay && isArrayAndHasItems(rrule.byweekday)) {\n          const offset = recurrence.dtstart.format('Z');\n\n          const dates = calendarHelper.getFormattedRuleDates({\n            realStart: dtstart,\n            offset,\n            event: { rrule } as any,\n          });\n\n          const duration = getEventDuration();\n\n          tmpUntil = calendarHelper.updateDateFromDuration({\n            date: dates[dates.length - 1],\n            duration,\n            allDay: form.allDay,\n          });\n        } else {\n          const dates = getRuleDates({ rrule: { ...rrule, dtstart } } as any);\n\n          tmpUntil = isoDateWithoutTime(dates[dates.length - 1]);\n        }\n\n        // Assign until date for backend filters\n        rrule.until = tmpUntil;\n      }\n\n      return rrule as CalendarRecurringEvent;\n    };\n\n    const getEvent = (): CalendarEvent => {\n      isEndDateChangedByUser.value = false;\n\n      form.start.set({ seconds: 0, milliseconds: 0 });\n      form.end.set({ seconds: 0, milliseconds: 0 });\n\n      let event: any = {\n        title: form.title!,\n        timezone: form.timezone,\n        calendarId: form.calendarId!,\n        allDay: form.allDay,\n        contact: form.contact,\n        case: form.case,\n        description: form.description || null,\n        location: form.location || null,\n        attendees: form.attendees || null,\n      };\n\n      if (!includeContact.value && props.type === 'create') {\n        event = removeObjectProps(event, 'contact', 'case');\n      }\n\n      !isSourceColor.value && (event.color = form.color);\n\n      const isUpdateAll = props.editRecurringType === 'all';\n      /** Update current normal event, not split from recurrence */\n      const isUpdateCurrent = props.editRecurringType === 'current' && !isSplitCurrentEvent.value;\n\n      if (props.type === 'edit' && (isUpdateAll || isUpdateCurrent)) {\n        event.id = form.id!;\n      }\n\n      // Normal event\n      if (!form.isRecurringEvent || isSplitCurrentEvent.value) {\n        event.start = form.start.toISOString();\n\n        event.end = !form.allDay\n          ? form.end.toISOString()\n          : form.end.clone().add(1, 'days').toISOString();\n\n        props.data?.parentId && (event.parentId = props.data!.parentId);\n      } else {\n        // Recurring event\n        event.exdate = props.data?.exdate || [];\n        event.rrule = formToRecurringEvent();\n\n        // Default duration, all day event\n        event.duration = {\n          days: 1,\n          hours: 0,\n          minutes: 0,\n        };\n\n        if (!event.allDay) {\n          event.duration = getEventDuration();\n\n          return cloneObject(event) as CalendarEvent;\n        }\n      }\n\n      if (event.allDay) {\n        return formatEventDates(cloneObject(event) as CalendarEvent);\n      }\n\n      return cloneObject(event);\n    };\n\n    const attendeesValidator = (_: RuleObject, value: string[] = []) => {\n      if (!value.length) {\n        return Promise.resolve();\n      }\n\n      for (const email of value) {\n        if (!isValidEmail(email)) {\n          return Promise.reject('This field must contain a valid email address list.');\n        }\n      }\n\n      return Promise.resolve();\n    };\n\n    /** Changing between normal/recurring events */\n    const onChangeEventType = () => {\n      if (!isDatesSameDay(form.start, form.end)) {\n        setDates();\n      }\n\n      if (form.isRecurringEvent && !isEndDateChangedByUser.value && recurrence.until) {\n        recurrence.until = form.end.clone().add(1, 'months');\n      }\n    };\n\n    const onChangeAllDay = () => {\n      if (form.isRecurringEvent && isEndDateChangedByUser.value) {\n        return;\n      }\n\n      setDates();\n      // form.start.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n      // form.end.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n\n      if (!recurrence.until) {\n        return;\n      }\n\n      // Remove time on all day events\n      if (form.allDay) {\n        recurrence.until.set({ hours: 0, minutes: 0, seconds: 0 });\n      } else {\n        recurrence.until.set({\n          hours: form.end.get('hours'),\n          minutes: form.end.get('minutes'),\n          seconds: 0,\n        });\n      }\n    };\n\n    const onChangeStartDate = (date: Moment) => {\n      if (props.type === 'edit' && recurrence.until) {\n        const [dtstart, until] = [\n          form.start.clone().format('YYYY-MM-DD'),\n          recurrence.until.clone().format('YYYY-MM-DD'),\n        ];\n\n        const isSameOrAfter = moment.utc(dtstart).isSameOrAfter(moment.utc(until));\n\n        if (isSameOrAfter) {\n          recurrence.until = form.start.clone().add(1, 'months');\n        }\n      }\n\n      const endTemp = form.start.clone().set({\n        hours: form.end.get('hours'),\n        minutes: form.end.get('minutes'),\n      });\n\n      if (!date.isSameOrAfter(endTemp.clone())) {\n        return;\n      }\n\n      let newEnd = date.clone().add(1, 'hours');\n\n      // In non-recurring events\n      if (!form.isRecurringEvent) {\n        form.end = newEnd;\n        return;\n      }\n\n      // Recurring events\n      if (!isDatesSameDay(form.start, newEnd)) {\n        newEnd = form.start.clone().endOf('day').set({ milliseconds: 0 });\n      }\n\n      form.end = form.end.clone().set({\n        hours: newEnd.get('hours'),\n        minutes: newEnd.get('minutes'),\n      });\n\n      if (form.start.isSameOrAfter(form.end)) {\n        form.start = form.start\n          .clone()\n          .endOf('day')\n          .subtract(4, 'minutes')\n          .set({ milliseconds: 0 });\n      }\n    };\n\n    const onChangeEndDate = (date: Moment) => {\n      const startTemp = form.end.clone().set({\n        hours: form.start.get('hours'),\n        minutes: form.start.get('minutes'),\n      });\n\n      if (date.isAfter(startTemp)) {\n        return;\n      }\n\n      let newStart = date.clone().subtract(1, 'hours');\n\n      // In non-recurring events\n      if (!form.isRecurringEvent) {\n        form.start = newStart;\n        return;\n      }\n\n      if (!isDatesSameDay(newStart, form.end)) {\n        newStart = form.end.clone().startOf('day');\n        form.end = form.end.clone().startOf('day').add(5, 'minutes');\n      }\n\n      form.start = form.start.clone().set({\n        hours: newStart.get('hours'),\n        minutes: newStart.get('minutes'),\n      });\n    };\n\n    const onChangeDates = (field: 'start' | 'end', date: Moment) => {\n      field === 'start' ? onChangeStartDate(date) : onChangeEndDate(date);\n    };\n\n    const onChangeUntil = () => {\n      isEndDateChangedByUser.value = true;\n    };\n\n    /** Clear case on contact change */\n    const onChangeContact = () => {\n      form.case = undefined;\n      clearValidate('case');\n\n      isRequiredCaseField.value = true;\n    };\n\n    const onChangeCalendar = (calendarId: string) => {\n      setCurrentCalendarId(calendarId);\n\n      if (isSourceColor.value) {\n        form.color = selectedSource.value.color;\n      }\n    };\n\n    /** Select filter option */\n    const onFilterCalendars = (input: string, option: any) => {\n      input = input.trim().toLowerCase();\n      const currentCalendar = allCalendars.value.find(calendar => calendar.id === option.value);\n\n      if (!currentCalendar) {\n        return false;\n      }\n\n      const fullName = `${currentCalendar.name} ${currentCalendar.user?.fullName}`.toLowerCase();\n\n      return fullName.includes(input);\n    };\n\n    const clearValidate = (field?: string) => refForm.value.clearValidate(field);\n\n    const validateForm = async () => {\n      const promises = [refForm.value.validate()];\n\n      if (form.isRecurringEvent && refRecurrence.value) {\n        promises.push(refRecurrence.value.validateForm());\n      }\n\n      return Promise.all(promises);\n    };\n\n    const onCreated = () => {\n      provide(CalendarFormSymbol, form);\n    };\n\n    onCreated();\n\n    return {\n      form,\n      timezones,\n      recurrence,\n      isRequiredCaseField,\n      refForm,\n      includeContact,\n      isModeFilter,\n      contactData,\n      refRecurrence,\n      selectedSource,\n      isLoading,\n      isHideRecurrenceOptions,\n      isOriginalEventRecurring,\n      isChildEvent,\n      isSplitCurrentEvent,\n      dateRange,\n      dateCols,\n      dateFormat,\n      colors,\n      sourcesToRender,\n      allCalendars,\n      sharedCalendars,\n      validateForm,\n      clearValidate,\n      getEvent,\n      attendeesValidator,\n      onChangeAllDay,\n      onChangeDates,\n      onChangeEventType,\n      onChangeContact,\n      onChangeCalendar,\n      onChangeUntil,\n      onFilterCalendars,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-switch {\n  cursor: pointer;\n  margin-left: 5px;\n}\n</style>\n","<template>\n  <AForm ref=\"refForm\" :model=\"$props\" layout=\"vertical\" class=\"CustomRecurrence\">\n    <ARow :gutter=\"12\">\n      <ACol :span=\"24\">\n        <AFormItem label=\"Repeat every\">\n          <AInputGroup compact>\n            <AInputNumber\n              :value=\"$props.interval\"\n              type=\"number\"\n              :max=\"365\"\n              :min=\"1\"\n              style=\"width: 30%\"\n              @change=\"$emit('update:interval', $event)\"\n            />\n            <ASelect :value=\"$props.freq\" @change=\"onChangeFreq\" style=\"width: 70%\">\n              <ASelectOption :value=\"frequency.Daily\">\n                {{ periodLabel('Day') }}\n              </ASelectOption>\n              <ASelectOption :value=\"frequency.Weekly\">\n                {{ periodLabel('Week') }}\n              </ASelectOption>\n              <ASelectOption :value=\"frequency.Monthly\">\n                {{ periodLabel('Month') }}\n              </ASelectOption>\n              <ASelectOption :value=\"frequency.Yearly\">\n                {{ periodLabel('Year') }}\n              </ASelectOption>\n            </ASelect>\n          </AInputGroup>\n        </AFormItem>\n      </ACol>\n    </ARow>\n\n    <ARow v-if=\"$props.freq === frequency.Monthly\" :gutter=\"12\" style=\"margin-bottom: 20px\">\n      <ACol :span=\"7\" style=\"line-height: 30px\">\n        <VSwitch :modelValue=\"$props.byDay\" label=\"By day\" size=\"small\" @change=\"onChangeByDay\" />\n      </ACol>\n\n      <ACol :span=\"17\" v-if=\"$props.byDay\">\n        <AInputGroup compact>\n          <ASelect\n            v-model:value=\"internalByWeekday.monthly.n\"\n            style=\"width: 35%\"\n            @change=\"onChangeMonthlyWeekday('n', $event)\"\n          >\n            <ASelectOption :value=\"1\">1st</ASelectOption>\n            <ASelectOption :value=\"2\">2nd</ASelectOption>\n            <ASelectOption :value=\"3\">3rd</ASelectOption>\n            <ASelectOption :value=\"4\">4th</ASelectOption>\n            <ASelectOption :value=\"5\">5th</ASelectOption>\n            <ASelectOption :value=\"-1\">Last</ASelectOption>\n          </ASelect>\n          <ASelect\n            v-model:value=\"internalByWeekday.monthly.weekday\"\n            style=\"width: 65%\"\n            @change=\"onChangeMonthlyWeekday('weekday', $event)\"\n          >\n            <ASelectOption v-for=\"day of allDays\" :key=\"day.min\" :value=\"day.min\">\n              {{ day.full }}\n            </ASelectOption>\n          </ASelect>\n        </AInputGroup>\n      </ACol>\n    </ARow>\n\n    <AFormItem\n      v-if=\"$props.freq === frequency.Weekly\"\n      label=\"Repeat on\"\n      name=\"byweekday\"\n      :rules=\"{\n        required: true,\n        type: 'array',\n        message: 'Please select the days to repeat',\n      }\"\n    >\n      <div class=\"tags-days-container\">\n        <ATooltip v-for=\"day of allDays\" :key=\"day.short\" :title=\"day.full\">\n          <ACheckableTag\n            :checked=\"isDayChecked(day.min)\"\n            @change=\"onChangeByweekday(day.min, $event)\"\n          >\n            {{ day.short }}\n          </ACheckableTag>\n        </ATooltip>\n      </div>\n    </AFormItem>\n\n    <AFormItem label=\"Ends\" style=\"margin-bottom: 10px\">\n      <ARadioGroup\n        :value=\"$props.ends\"\n        @change=\"onChangeEnds($event.target.value)\"\n        style=\"width: 100%\"\n      >\n        <div style=\"display: flex; justify-content: space-between\">\n          <ARadio value=\"never\" style=\"display: block; line-height: 30px\">Never</ARadio>\n        </div>\n        <div style=\"display: flex; justify-content: space-between\">\n          <ARadio value=\"on\" style=\"display: block; line-height: 30px\">On</ARadio>\n          <ADatePicker\n            v-if=\"$props.ends === 'on'\"\n            :value=\"$props.until\"\n            :allow-clear=\"false\"\n            :disabled-date=\"disabledDate\"\n            @change=\"onChangeUntil\"\n          >\n            <span class=\"display-date\">{{ untilDateLabel }}</span>\n          </ADatePicker>\n        </div>\n        <div style=\"display: flex; justify-content: space-between\">\n          <ARadio value=\"ocurrences\" style=\"display: block; line-height: 30px\">Ocurrences</ARadio>\n          <div v-if=\"$props.ends === 'ocurrences'\">\n            <AInputNumber\n              type=\"number\"\n              :value=\"$props.count\"\n              :min=\"1\"\n              class=\"custom input-text-center\"\n              style=\"width: 60px; margin-right: 5px\"\n              @change=\"$emit('update:count', $event)\"\n            />\n            times\n          </div>\n        </div>\n      </ARadioGroup>\n    </AFormItem>\n  </AForm>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  PropType,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue';\nimport VSwitch from '@/components/VSwitch.vue';\nimport {\n  Byweekday,\n  CalendarRecurrenceEndsType,\n  EventFrequencyType,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { Moment } from 'moment';\nimport { EventFrequency } from '@/utils/enums/global.enum';\nimport { DAYS } from '@/utils/constants';\nimport { isArrayEmpty, isObjectEmpty, valueIs } from '@/utils/functions';\nimport { CalendarFormSymbol } from '@/utils/symbols';\nimport { useTime } from '@/composables';\nimport { dateHelper } from '@/helpers';\n\nexport default defineComponent({\n  components: { VSwitch },\n  props: {\n    interval: {\n      type: Number,\n      default: 1,\n    },\n    freq: {\n      type: String as PropType<EventFrequencyType>,\n      default: EventFrequency.Weekly,\n    },\n    byweekday: Array as PropType<Byweekday[]>,\n    ends: {\n      type: String as PropType<CalendarRecurrenceEndsType>,\n      default: 'never',\n    },\n    until: Object as PropType<Moment>,\n    count: Number,\n    dtstart: {\n      type: Object as PropType<Moment>,\n      required: true,\n    },\n    byDay: Boolean,\n  },\n\n  emits: [\n    'update:interval',\n    'update:freq',\n    'update:byweekday',\n    'update:ends',\n    'update:until',\n    'update:count',\n    'update:byDay',\n    'changeUntil',\n  ],\n\n  setup(props, { emit }) {\n    const { time } = useTime();\n    const parentForm = inject(CalendarFormSymbol)!;\n\n    const refForm = ref();\n    const allDays = DAYS;\n\n    const internalByWeekday = reactive({\n      weekly: [] as Byweekday[],\n      monthly: {} as Byweekday,\n    });\n\n    /** Generate period label */\n    const periodLabel = (label: string) => {\n      return props.interval > 1 ? `${label}s` : label;\n    };\n\n    const setWeekday = (firstTime = false) => {\n      // Not reseat passed values from parent\n      if (firstTime && !isArrayEmpty(props.byweekday || [])) {\n        return;\n      }\n\n      // Set selected day as checked in select days\n      const day = props.dtstart.day();\n      const itemDay = allDays.find(item => item.numeric.fullcalendar === day)!;\n\n      // Not cached\n      if (firstTime) {\n        // Monthly \"byDay\"\n        internalByWeekday.monthly = {\n          weekday: itemDay.min,\n          n: 1,\n        };\n      }\n\n      if (props.freq === 'WEEKLY') {\n        internalByWeekday.weekly = [{ weekday: itemDay.min }];\n        return emit('update:byweekday', [{ weekday: itemDay.min }]);\n      }\n\n      if (!props.byDay) {\n        return;\n      }\n\n      emit('update:byweekday', [internalByWeekday.monthly]);\n    };\n\n    // Validate \"byweekday\" prop in real time\n    watch(\n      () => props.byweekday,\n      async () => {\n        if (!refForm.value) return;\n\n        try {\n          await refForm.value.validateField('byweekday');\n        } catch (error: any) {\n          error.errorFields.length && console.error(error);\n        }\n      },\n      { deep: true },\n    );\n\n    watchEffect(() => {\n      if (!props.interval) {\n        emit('update:interval', 1);\n      }\n    });\n\n    watch(\n      () => props.dtstart,\n      dtstart => {\n        if (\n          props.byweekday?.length !== 1 ||\n          !valueIs(props.freq, EventFrequency.Monthly, EventFrequency.Weekly)\n        ) {\n          return;\n        }\n\n        const day = dateHelper.getWeekday(dtstart);\n        const weekday = { weekday: day.min } as Byweekday;\n\n        const byweekday = dateHelper.getDayPositionOfMonth(dtstart);\n        internalByWeekday.monthly = byweekday;\n\n        // Monthly\n        if (props.freq === 'MONTHLY') {\n          if (!props.byDay) {\n            return;\n          }\n\n          emit('update:byweekday', [byweekday]);\n          return;\n        }\n\n        internalByWeekday.weekly = [weekday];\n        // Weekly\n        emit('update:byweekday', [weekday]);\n      },\n    );\n\n    const untilDateLabel = computed(() => {\n      if (!props.until) {\n        return null;\n      }\n\n      return time(props.until).format('dddd, MMMM D, YYYY');\n    });\n\n    const disabledDate = (current: Moment) => {\n      // Can not select days before today and today\n      return current && current <= props.dtstart.clone().add(1, 'days').startOf('day');\n    };\n\n    const isDayChecked = (day: WeekDayMinType) => {\n      return props.byweekday && props.byweekday.some(item => item.weekday === day);\n    };\n\n    const sortDays = (days: Byweekday[]): Byweekday[] => {\n      return allDays\n        .filter(item => days.some(day => day.weekday === item.min))\n        .map(item => ({ weekday: item.min }));\n    };\n\n    const onChangeFreq = (freq: EventFrequencyType) => {\n      emit('update:freq', freq);\n\n      // Monthly \"byDay\"\n      if (freq === 'MONTHLY' && props.byDay) {\n        return emit('update:byweekday', [internalByWeekday.monthly]);\n      }\n\n      if (freq !== 'WEEKLY') {\n        return;\n      }\n\n      if (isArrayEmpty(internalByWeekday.weekly)) {\n        nextTick(setWeekday);\n      } else {\n        emit('update:byweekday', internalByWeekday.weekly);\n      }\n    };\n\n    const onChangeByweekday = (day: WeekDayMinType, checked: boolean) => {\n      let newDays = props.byweekday || [];\n\n      if (!checked) {\n        newDays = newDays.filter(v => v.weekday !== day);\n      } else {\n        newDays.push({ weekday: day });\n      }\n\n      const sorted = sortDays(newDays);\n\n      internalByWeekday.weekly = sorted;\n      emit('update:byweekday', sorted);\n    };\n\n    const onChangeByDay = (checked: boolean) => {\n      emit('update:byDay', checked);\n\n      nextTick(() => {\n        // Set today as selected\n        if (checked) {\n          if (isObjectEmpty(internalByWeekday.monthly)) {\n            const byweekday = dateHelper.getDayPositionOfMonth(props.dtstart);\n\n            internalByWeekday.monthly = byweekday;\n          }\n\n          return setWeekday();\n        }\n\n        emit('update:byweekday', undefined);\n      });\n    };\n\n    const onChangeEnds = (ends: 'never' | 'on' | 'ocurrences') => {\n      emit('update:ends', ends);\n\n      if (ends === 'on' && !props.until) {\n        emit('update:until', parentForm.end.clone().add(1, 'months'));\n        return;\n      }\n\n      if (ends === 'ocurrences' && !props.count) {\n        emit('update:count', 10);\n      }\n    };\n\n    const onChangeMonthlyWeekday = (field: 'n' | 'weekday', value: WeekDayMinType | number) => {\n      const byweekday = { ...internalByWeekday.monthly, [field]: value };\n      emit('update:byweekday', [byweekday]);\n    };\n\n    const onChangeUntil = (date: string) => {\n      emit('update:until', date);\n\n      emit('changeUntil', date);\n    };\n\n    const validateForm = () => refForm.value.validate();\n\n    const onCreated = () => {\n      setWeekday(true);\n      const isEmptyByweekday = isArrayEmpty(props.byweekday || []);\n\n      if (isEmptyByweekday) {\n        return;\n      }\n\n      if (props.freq === 'WEEKLY') {\n        internalByWeekday.weekly = props.byweekday!;\n        return;\n      }\n\n      // Monthly by day\n      if (props.byDay || props.freq === 'MONTHLY') {\n        internalByWeekday.monthly = props.byweekday![0];\n        return;\n      }\n    };\n\n    onCreated();\n\n    return {\n      parentForm,\n      internalByWeekday,\n      periodLabel,\n      untilDateLabel,\n      validateForm,\n      refForm,\n      allDays,\n      frequency: EventFrequency,\n      disabledDate,\n      isDayChecked,\n      onChangeFreq,\n      onChangeByweekday,\n      onChangeByDay,\n      onChangeEnds,\n      onChangeMonthlyWeekday,\n      onChangeUntil,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.tags-days-container {\n  display: flex;\n  justify-content: center;\n\n  .ant-tag {\n    font-weight: 600;\n\n    &:not(.ant-tag-checkable-checked) {\n      background-color: $google-bg;\n      color: #80868b;\n    }\n  }\n}\n\n.CustomRecurrence {\n  width: 100%;\n  // width: calc(317px + 2.5rem);\n  // padding: 1rem;\n  // border: 1px solid rgba(0, 0, 0, 0.1);\n  // border: 1px solid rgba(0, 0, 0, 0.1);\n  // border-radius: 5px;\n}\n\n.display-date {\n  line-height: 30px;\n  padding: 0.5rem;\n  background-color: $google-bg;\n}\n</style>\n","<template>\n  <div class=\"VSwitch\">\n    <ASwitch\n      :checked=\"$props.modelValue\"\n      @change=\"updateValue\"\n      v-bind=\"$attrs\"\n      :disabled=\"$props.disabled\"\n    />\n    <span\n      @click=\"updateValue\"\n      class=\"VSwitch__label\"\n      :class=\"{ 'VSwitch--disabled': $props.disabled }\"\n    >\n      {{ $props.label }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false,\n    },\n    label: String,\n    disabled: Boolean,\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const updateValue = () => {\n      if (props.disabled) {\n        return;\n      }\n\n      emit('update:modelValue', !props.modelValue);\n      emit('change', !props.modelValue);\n    };\n\n    return { updateValue };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.VSwitch {\n  display: flex;\n  align-items: center;\n  line-height: 30px;\n\n  &__label {\n    cursor: pointer;\n    margin-left: 5px;\n  }\n\n  &--disabled {\n    cursor: not-allowed;\n  }\n}\n</style>\n","\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  inheritAttrs: false,\n  props: {\n    modelValue: {\n      type: Boolean,\n      default: false,\n    },\n    label: String,\n    disabled: Boolean,\n  },\n  emits: ['update:modelValue', 'change'],\n  setup(props, { emit }) {\n    const updateValue = () => {\n      if (props.disabled) {\n        return;\n      }\n\n      emit('update:modelValue', !props.modelValue);\n      emit('change', !props.modelValue);\n    };\n\n    return { updateValue };\n  },\n});\n","import { render } from \"./VSwitch.vue?vue&type=template&id=afe305b8&scoped=true\"\nimport script from \"./VSwitch.vue?vue&type=script&lang=ts\"\nexport * from \"./VSwitch.vue?vue&type=script&lang=ts\"\n\nimport \"./VSwitch.vue?vue&type=style&index=0&id=afe305b8&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-afe305b8\"\n\nexport default script","\nimport {\n  computed,\n  defineComponent,\n  inject,\n  nextTick,\n  PropType,\n  reactive,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue';\nimport VSwitch from '@/components/VSwitch.vue';\nimport {\n  Byweekday,\n  CalendarRecurrenceEndsType,\n  EventFrequencyType,\n  WeekDayMinType,\n} from '@/types/calendar.type';\nimport { Moment } from 'moment';\nimport { EventFrequency } from '@/utils/enums/global.enum';\nimport { DAYS } from '@/utils/constants';\nimport { isArrayEmpty, isObjectEmpty, valueIs } from '@/utils/functions';\nimport { CalendarFormSymbol } from '@/utils/symbols';\nimport { useTime } from '@/composables';\nimport { dateHelper } from '@/helpers';\n\nexport default defineComponent({\n  components: { VSwitch },\n  props: {\n    interval: {\n      type: Number,\n      default: 1,\n    },\n    freq: {\n      type: String as PropType<EventFrequencyType>,\n      default: EventFrequency.Weekly,\n    },\n    byweekday: Array as PropType<Byweekday[]>,\n    ends: {\n      type: String as PropType<CalendarRecurrenceEndsType>,\n      default: 'never',\n    },\n    until: Object as PropType<Moment>,\n    count: Number,\n    dtstart: {\n      type: Object as PropType<Moment>,\n      required: true,\n    },\n    byDay: Boolean,\n  },\n\n  emits: [\n    'update:interval',\n    'update:freq',\n    'update:byweekday',\n    'update:ends',\n    'update:until',\n    'update:count',\n    'update:byDay',\n    'changeUntil',\n  ],\n\n  setup(props, { emit }) {\n    const { time } = useTime();\n    const parentForm = inject(CalendarFormSymbol)!;\n\n    const refForm = ref();\n    const allDays = DAYS;\n\n    const internalByWeekday = reactive({\n      weekly: [] as Byweekday[],\n      monthly: {} as Byweekday,\n    });\n\n    /** Generate period label */\n    const periodLabel = (label: string) => {\n      return props.interval > 1 ? `${label}s` : label;\n    };\n\n    const setWeekday = (firstTime = false) => {\n      // Not reseat passed values from parent\n      if (firstTime && !isArrayEmpty(props.byweekday || [])) {\n        return;\n      }\n\n      // Set selected day as checked in select days\n      const day = props.dtstart.day();\n      const itemDay = allDays.find(item => item.numeric.fullcalendar === day)!;\n\n      // Not cached\n      if (firstTime) {\n        // Monthly \"byDay\"\n        internalByWeekday.monthly = {\n          weekday: itemDay.min,\n          n: 1,\n        };\n      }\n\n      if (props.freq === 'WEEKLY') {\n        internalByWeekday.weekly = [{ weekday: itemDay.min }];\n        return emit('update:byweekday', [{ weekday: itemDay.min }]);\n      }\n\n      if (!props.byDay) {\n        return;\n      }\n\n      emit('update:byweekday', [internalByWeekday.monthly]);\n    };\n\n    // Validate \"byweekday\" prop in real time\n    watch(\n      () => props.byweekday,\n      async () => {\n        if (!refForm.value) return;\n\n        try {\n          await refForm.value.validateField('byweekday');\n        } catch (error: any) {\n          error.errorFields.length && console.error(error);\n        }\n      },\n      { deep: true },\n    );\n\n    watchEffect(() => {\n      if (!props.interval) {\n        emit('update:interval', 1);\n      }\n    });\n\n    watch(\n      () => props.dtstart,\n      dtstart => {\n        if (\n          props.byweekday?.length !== 1 ||\n          !valueIs(props.freq, EventFrequency.Monthly, EventFrequency.Weekly)\n        ) {\n          return;\n        }\n\n        const day = dateHelper.getWeekday(dtstart);\n        const weekday = { weekday: day.min } as Byweekday;\n\n        const byweekday = dateHelper.getDayPositionOfMonth(dtstart);\n        internalByWeekday.monthly = byweekday;\n\n        // Monthly\n        if (props.freq === 'MONTHLY') {\n          if (!props.byDay) {\n            return;\n          }\n\n          emit('update:byweekday', [byweekday]);\n          return;\n        }\n\n        internalByWeekday.weekly = [weekday];\n        // Weekly\n        emit('update:byweekday', [weekday]);\n      },\n    );\n\n    const untilDateLabel = computed(() => {\n      if (!props.until) {\n        return null;\n      }\n\n      return time(props.until).format('dddd, MMMM D, YYYY');\n    });\n\n    const disabledDate = (current: Moment) => {\n      // Can not select days before today and today\n      return current && current <= props.dtstart.clone().add(1, 'days').startOf('day');\n    };\n\n    const isDayChecked = (day: WeekDayMinType) => {\n      return props.byweekday && props.byweekday.some(item => item.weekday === day);\n    };\n\n    const sortDays = (days: Byweekday[]): Byweekday[] => {\n      return allDays\n        .filter(item => days.some(day => day.weekday === item.min))\n        .map(item => ({ weekday: item.min }));\n    };\n\n    const onChangeFreq = (freq: EventFrequencyType) => {\n      emit('update:freq', freq);\n\n      // Monthly \"byDay\"\n      if (freq === 'MONTHLY' && props.byDay) {\n        return emit('update:byweekday', [internalByWeekday.monthly]);\n      }\n\n      if (freq !== 'WEEKLY') {\n        return;\n      }\n\n      if (isArrayEmpty(internalByWeekday.weekly)) {\n        nextTick(setWeekday);\n      } else {\n        emit('update:byweekday', internalByWeekday.weekly);\n      }\n    };\n\n    const onChangeByweekday = (day: WeekDayMinType, checked: boolean) => {\n      let newDays = props.byweekday || [];\n\n      if (!checked) {\n        newDays = newDays.filter(v => v.weekday !== day);\n      } else {\n        newDays.push({ weekday: day });\n      }\n\n      const sorted = sortDays(newDays);\n\n      internalByWeekday.weekly = sorted;\n      emit('update:byweekday', sorted);\n    };\n\n    const onChangeByDay = (checked: boolean) => {\n      emit('update:byDay', checked);\n\n      nextTick(() => {\n        // Set today as selected\n        if (checked) {\n          if (isObjectEmpty(internalByWeekday.monthly)) {\n            const byweekday = dateHelper.getDayPositionOfMonth(props.dtstart);\n\n            internalByWeekday.monthly = byweekday;\n          }\n\n          return setWeekday();\n        }\n\n        emit('update:byweekday', undefined);\n      });\n    };\n\n    const onChangeEnds = (ends: 'never' | 'on' | 'ocurrences') => {\n      emit('update:ends', ends);\n\n      if (ends === 'on' && !props.until) {\n        emit('update:until', parentForm.end.clone().add(1, 'months'));\n        return;\n      }\n\n      if (ends === 'ocurrences' && !props.count) {\n        emit('update:count', 10);\n      }\n    };\n\n    const onChangeMonthlyWeekday = (field: 'n' | 'weekday', value: WeekDayMinType | number) => {\n      const byweekday = { ...internalByWeekday.monthly, [field]: value };\n      emit('update:byweekday', [byweekday]);\n    };\n\n    const onChangeUntil = (date: string) => {\n      emit('update:until', date);\n\n      emit('changeUntil', date);\n    };\n\n    const validateForm = () => refForm.value.validate();\n\n    const onCreated = () => {\n      setWeekday(true);\n      const isEmptyByweekday = isArrayEmpty(props.byweekday || []);\n\n      if (isEmptyByweekday) {\n        return;\n      }\n\n      if (props.freq === 'WEEKLY') {\n        internalByWeekday.weekly = props.byweekday!;\n        return;\n      }\n\n      // Monthly by day\n      if (props.byDay || props.freq === 'MONTHLY') {\n        internalByWeekday.monthly = props.byweekday![0];\n        return;\n      }\n    };\n\n    onCreated();\n\n    return {\n      parentForm,\n      internalByWeekday,\n      periodLabel,\n      untilDateLabel,\n      validateForm,\n      refForm,\n      allDays,\n      frequency: EventFrequency,\n      disabledDate,\n      isDayChecked,\n      onChangeFreq,\n      onChangeByweekday,\n      onChangeByDay,\n      onChangeEnds,\n      onChangeMonthlyWeekday,\n      onChangeUntil,\n    };\n  },\n});\n","import { render } from \"./CalendarRecurrence.vue?vue&type=template&id=1ae24390&scoped=true\"\nimport script from \"./CalendarRecurrence.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarRecurrence.vue?vue&type=script&lang=ts\"\n\nimport \"./CalendarRecurrence.vue?vue&type=style&index=0&id=1ae24390&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1ae24390\"\n\nexport default script","<template>\n  <ASelect :value=\"$props.modelValue\" v-bind=\"selectProps\">\n    <ASelectOption v-for=\"contact of contacts\" :value=\"contact.id\" :key=\"contact.id\">\n      {{ contact.fullName }}\n    </ASelectOption>\n  </ASelect>\n</template>\n\n<script lang=\"ts\">\nimport { ContactsService } from '@/services';\nimport { createDebounce } from '@/utils/functions';\nimport { computed, defineComponent, ref, watchEffect } from 'vue';\n\nexport default defineComponent({\n  props: {\n    modelValue: Number,\n    style: [String, Object],\n    placeholder: {\n      type: String,\n      default: 'Select Contact',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: Boolean,\n  },\n  emits: ['update:modelValue', 'change'],\n  inheritAttrs: false,\n  setup(props, { emit }) {\n    const debounce = createDebounce();\n    const contacts = ref<any[]>([]);\n\n    let defaultContacts: any[] = [];\n\n    /** Search contacts */\n    const searchContact = async (val = '', delay = 500) => {\n      // Clear whitespaces\n      val = val.trim();\n\n      // Empty string, set default contacts to list\n      if (!val && defaultContacts.length) {\n        contacts.value = defaultContacts;\n        return;\n      }\n\n      // Execute search\n      debounce(async () => {\n        const filter = [];\n\n        if (val) {\n          filter.push({\n            field: 'fullName',\n            value: val,\n            condition: 'like',\n          });\n        }\n\n        const results: any = await ContactsService.search({\n          limit: 6,\n          filter,\n        });\n\n        contacts.value = results;\n\n        if (!defaultContacts.length) {\n          defaultContacts = results;\n        }\n      }, delay);\n    };\n\n    const getContact = async (contactId: number) => {\n      try {\n        const [contact] = await ContactsService.search({\n          limit: 1,\n          filter: [\n            {\n              field: 'id',\n              value: contactId,\n            },\n          ],\n        });\n\n        return contact;\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    /** Update parent value */\n    const onChange = (value: string | number) => {\n      emit('update:modelValue', value);\n      emit('change', value);\n    };\n\n    const selectProps = computed(() => {\n      const _props = {\n        placeholder: props.placeholder,\n        filterOption: false,\n        style: props.style,\n        disabled: props.disabled,\n      } as any;\n\n      if (props.readonly) {\n        return {\n          ..._props,\n          showSearch: false,\n          allowClear: false,\n          open: false,\n        };\n      }\n\n      return {\n        ..._props,\n        showSearch: true,\n        allowClear: true,\n        filterOption: false,\n        onSearch: searchContact,\n        onChange: onChange,\n      };\n    });\n\n    // Load default values\n    searchContact('', 0);\n\n    watchEffect(async () => {\n      if (!props.modelValue || !contacts.value.length) {\n        return;\n      }\n\n      const contactId = props.modelValue;\n      const exists = contacts.value.some(contact => contact.id === contactId);\n\n      if (exists) return;\n      // Load from backed\n      const contact = await getContact(contactId);\n      // Insert to options\n      contacts.value.push(contact);\n    });\n\n    return { contacts, selectProps };\n  },\n});\n</script>\n","\nimport { ContactsService } from '@/services';\nimport { createDebounce } from '@/utils/functions';\nimport { computed, defineComponent, ref, watchEffect } from 'vue';\n\nexport default defineComponent({\n  props: {\n    modelValue: Number,\n    style: [String, Object],\n    placeholder: {\n      type: String,\n      default: 'Select Contact',\n    },\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n    disabled: Boolean,\n  },\n  emits: ['update:modelValue', 'change'],\n  inheritAttrs: false,\n  setup(props, { emit }) {\n    const debounce = createDebounce();\n    const contacts = ref<any[]>([]);\n\n    let defaultContacts: any[] = [];\n\n    /** Search contacts */\n    const searchContact = async (val = '', delay = 500) => {\n      // Clear whitespaces\n      val = val.trim();\n\n      // Empty string, set default contacts to list\n      if (!val && defaultContacts.length) {\n        contacts.value = defaultContacts;\n        return;\n      }\n\n      // Execute search\n      debounce(async () => {\n        const filter = [];\n\n        if (val) {\n          filter.push({\n            field: 'fullName',\n            value: val,\n            condition: 'like',\n          });\n        }\n\n        const results: any = await ContactsService.search({\n          limit: 6,\n          filter,\n        });\n\n        contacts.value = results;\n\n        if (!defaultContacts.length) {\n          defaultContacts = results;\n        }\n      }, delay);\n    };\n\n    const getContact = async (contactId: number) => {\n      try {\n        const [contact] = await ContactsService.search({\n          limit: 1,\n          filter: [\n            {\n              field: 'id',\n              value: contactId,\n            },\n          ],\n        });\n\n        return contact;\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    /** Update parent value */\n    const onChange = (value: string | number) => {\n      emit('update:modelValue', value);\n      emit('change', value);\n    };\n\n    const selectProps = computed(() => {\n      const _props = {\n        placeholder: props.placeholder,\n        filterOption: false,\n        style: props.style,\n        disabled: props.disabled,\n      } as any;\n\n      if (props.readonly) {\n        return {\n          ..._props,\n          showSearch: false,\n          allowClear: false,\n          open: false,\n        };\n      }\n\n      return {\n        ..._props,\n        showSearch: true,\n        allowClear: true,\n        filterOption: false,\n        onSearch: searchContact,\n        onChange: onChange,\n      };\n    });\n\n    // Load default values\n    searchContact('', 0);\n\n    watchEffect(async () => {\n      if (!props.modelValue || !contacts.value.length) {\n        return;\n      }\n\n      const contactId = props.modelValue;\n      const exists = contacts.value.some(contact => contact.id === contactId);\n\n      if (exists) return;\n      // Load from backed\n      const contact = await getContact(contactId);\n      // Insert to options\n      contacts.value.push(contact);\n    });\n\n    return { contacts, selectProps };\n  },\n});\n","import { render } from \"./SelectContact.vue?vue&type=template&id=cbc124ca\"\nimport script from \"./SelectContact.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectContact.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <ASelect :value=\"$props.modelValue\" v-bind=\"selectProps\">\n    <ASelectOption v-for=\"item of cases\" :value=\"item.id\" :key=\"item.id\">\n      {{ generateCaseFullName(item) }}\n    </ASelectOption>\n  </ASelect>\n</template>\n\n<script lang=\"ts\">\nimport { CasesService } from '@/services';\nimport { Case } from '@/types/cases.type';\nimport { computed, defineComponent, ref, watchEffect } from 'vue';\n\nexport default defineComponent({\n  props: {\n    modelValue: Number,\n    contact: Number,\n    placeholder: {\n      type: String,\n      default: 'Select Case',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    style: [String, Object],\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['update:modelValue', 'change', 'hasNotCases'],\n  inheritAttrs: false,\n  setup(props, { emit }) {\n    const cases = ref<Case[]>([]);\n    let defaultCases: Case[] = [];\n    const disabledField = ref(props.disabled);\n\n    const isDisabled = computed({\n      get() {\n        return props.disabled || disabledField.value;\n      },\n      set(val: boolean) {\n        disabledField.value = val;\n      },\n    });\n\n    /** Generate case full name */\n    const generateCaseFullName = (currentCase: Case) => {\n      const fullname = currentCase.name;\n\n      return currentCase.caseTypeName ? `${fullname} | ${currentCase.caseTypeName}` : fullname;\n    };\n\n    /** Select filter option */\n    const caseFilterOption = (input: string, option: any) => {\n      input = input.trim();\n      const currentCase = cases.value.find(item => item.id === option.value);\n\n      if (!currentCase) {\n        return false;\n      }\n\n      const fullName = generateCaseFullName(currentCase);\n\n      return fullName.toLowerCase().includes(input.toLowerCase());\n    };\n\n    /** Update parent value */\n    const updateValue = (value?: number) => {\n      if (value !== props.modelValue) {\n        emit('update:modelValue', value);\n        emit('change', value);\n      }\n    };\n\n    /** Search cases */\n    const getCases = async () => {\n      // Load from default cases\n      if (props.contact === undefined && defaultCases.length) {\n        cases.value = defaultCases;\n        return;\n      }\n\n      // Execute search\n      const results = await CasesService.search(props.contact);\n\n      if (!results.length) {\n        isDisabled.value = true;\n        // Notify to parent\n        emit('hasNotCases', true);\n        return;\n      } else {\n        isDisabled.value && (isDisabled.value = false);\n      }\n\n      cases.value = results;\n      // Set default cases\n      if (props.contact === undefined && !defaultCases.length) {\n        defaultCases = results;\n      }\n    };\n\n    const selectProps = computed(() => {\n      const _props = {\n        placeholder: props.placeholder,\n        style: props.style,\n        disabled: isDisabled.value,\n      } as any;\n\n      if (props.readonly) {\n        return {\n          ..._props,\n          filterOption: false,\n          showSearch: false,\n          allowClear: false,\n          open: false,\n        };\n      }\n\n      return {\n        ..._props,\n        filterOption: caseFilterOption,\n        showSearch: true,\n        allowClear: true,\n        onChange: updateValue,\n      };\n    });\n\n    watchEffect(() => getCases());\n\n    return {\n      cases,\n      generateCaseFullName,\n      selectProps,\n    };\n  },\n});\n</script>\n","\nimport { CasesService } from '@/services';\nimport { Case } from '@/types/cases.type';\nimport { computed, defineComponent, ref, watchEffect } from 'vue';\n\nexport default defineComponent({\n  props: {\n    modelValue: Number,\n    contact: Number,\n    placeholder: {\n      type: String,\n      default: 'Select Case',\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    style: [String, Object],\n    readonly: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  emits: ['update:modelValue', 'change', 'hasNotCases'],\n  inheritAttrs: false,\n  setup(props, { emit }) {\n    const cases = ref<Case[]>([]);\n    let defaultCases: Case[] = [];\n    const disabledField = ref(props.disabled);\n\n    const isDisabled = computed({\n      get() {\n        return props.disabled || disabledField.value;\n      },\n      set(val: boolean) {\n        disabledField.value = val;\n      },\n    });\n\n    /** Generate case full name */\n    const generateCaseFullName = (currentCase: Case) => {\n      const fullname = currentCase.name;\n\n      return currentCase.caseTypeName ? `${fullname} | ${currentCase.caseTypeName}` : fullname;\n    };\n\n    /** Select filter option */\n    const caseFilterOption = (input: string, option: any) => {\n      input = input.trim();\n      const currentCase = cases.value.find(item => item.id === option.value);\n\n      if (!currentCase) {\n        return false;\n      }\n\n      const fullName = generateCaseFullName(currentCase);\n\n      return fullName.toLowerCase().includes(input.toLowerCase());\n    };\n\n    /** Update parent value */\n    const updateValue = (value?: number) => {\n      if (value !== props.modelValue) {\n        emit('update:modelValue', value);\n        emit('change', value);\n      }\n    };\n\n    /** Search cases */\n    const getCases = async () => {\n      // Load from default cases\n      if (props.contact === undefined && defaultCases.length) {\n        cases.value = defaultCases;\n        return;\n      }\n\n      // Execute search\n      const results = await CasesService.search(props.contact);\n\n      if (!results.length) {\n        isDisabled.value = true;\n        // Notify to parent\n        emit('hasNotCases', true);\n        return;\n      } else {\n        isDisabled.value && (isDisabled.value = false);\n      }\n\n      cases.value = results;\n      // Set default cases\n      if (props.contact === undefined && !defaultCases.length) {\n        defaultCases = results;\n      }\n    };\n\n    const selectProps = computed(() => {\n      const _props = {\n        placeholder: props.placeholder,\n        style: props.style,\n        disabled: isDisabled.value,\n      } as any;\n\n      if (props.readonly) {\n        return {\n          ..._props,\n          filterOption: false,\n          showSearch: false,\n          allowClear: false,\n          open: false,\n        };\n      }\n\n      return {\n        ..._props,\n        filterOption: caseFilterOption,\n        showSearch: true,\n        allowClear: true,\n        onChange: updateValue,\n      };\n    });\n\n    watchEffect(() => getCases());\n\n    return {\n      cases,\n      generateCaseFullName,\n      selectProps,\n    };\n  },\n});\n","import { render } from \"./SelectCase.vue?vue&type=template&id=82edcaf0\"\nimport script from \"./SelectCase.vue?vue&type=script&lang=ts\"\nexport * from \"./SelectCase.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <CKEditor\n    :model-value=\"$props.modelValue\"\n    :editor=\"editor\"\n    :config=\"editorConfig\"\n    @input=\"onInput\"\n    style=\"border-radius: 5px\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue';\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport InlineEditor from '@ckeditor/ckeditor5-build-inline';\n\nexport default defineComponent({\n  components: {\n    CKEditor: CKEditor.component,\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: '',\n    },\n    config: {\n      type: Object,\n      default: () => ({} as any),\n    },\n    placeholder: String,\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit }) {\n    const defaultToolbar = [\n      'heading',\n      '|',\n      'bold',\n      'italic',\n      'link',\n      'bulletedList',\n      'numberedList',\n      '|',\n      'blockQuote',\n      'undo',\n      'redo',\n    ];\n\n    const editorConfig = computed(() => {\n      const _data: any = {};\n\n      _data.toolbar = !props.config?.toolbar ? defaultToolbar : props.config.toolbar;\n\n      _data.placeholder = !props.placeholder ? 'Type here...' : props.placeholder;\n\n      _data.link = {\n        addTargetToExternalLinks: true,\n        defaultProtocol: 'https://',\n      };\n\n      return _data;\n    });\n\n    /** Typing in editor, update parent value */\n    const onInput = (value: string | any) => {\n      if (typeof value !== 'string') return;\n\n      emit('update:modelValue', value);\n    };\n\n    return {\n      editor: InlineEditor,\n      editorConfig,\n      onInput,\n    };\n  },\n});\n</script>\n","\nimport { computed, defineComponent } from 'vue';\nimport CKEditor from '@ckeditor/ckeditor5-vue';\nimport InlineEditor from '@ckeditor/ckeditor5-build-inline';\n\nexport default defineComponent({\n  components: {\n    CKEditor: CKEditor.component,\n  },\n  props: {\n    modelValue: {\n      type: String,\n      default: '',\n    },\n    config: {\n      type: Object,\n      default: () => ({} as any),\n    },\n    placeholder: String,\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit }) {\n    const defaultToolbar = [\n      'heading',\n      '|',\n      'bold',\n      'italic',\n      'link',\n      'bulletedList',\n      'numberedList',\n      '|',\n      'blockQuote',\n      'undo',\n      'redo',\n    ];\n\n    const editorConfig = computed(() => {\n      const _data: any = {};\n\n      _data.toolbar = !props.config?.toolbar ? defaultToolbar : props.config.toolbar;\n\n      _data.placeholder = !props.placeholder ? 'Type here...' : props.placeholder;\n\n      _data.link = {\n        addTargetToExternalLinks: true,\n        defaultProtocol: 'https://',\n      };\n\n      return _data;\n    });\n\n    /** Typing in editor, update parent value */\n    const onInput = (value: string | any) => {\n      if (typeof value !== 'string') return;\n\n      emit('update:modelValue', value);\n    };\n\n    return {\n      editor: InlineEditor,\n      editorConfig,\n      onInput,\n    };\n  },\n});\n","import { render } from \"./Editor.vue?vue&type=template&id=62b6bdb5\"\nimport script from \"./Editor.vue?vue&type=script&lang=ts\"\nexport * from \"./Editor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, PropType, provide, reactive, ref, unref, watch } from 'vue';\nimport CalendarRecurrence from '@/components/CalendarRecurrence.vue';\nimport VSwitch from '@/components/VSwitch.vue';\nimport SelectContact from '@/components/SelectContact.vue';\nimport SelectCase from '@/components/SelectCase.vue';\nimport Editor from '@/components/Editor.vue';\nimport Color from '@/components/Color.vue';\n\nimport { Moment } from 'moment-timezone';\nimport {\n  CalendarEvent,\n  CalendarEventDuration,\n  CalendarEventPosition,\n  CalendarFormEventNew,\n  CalendarRecurrenceNew,\n  CalendarRecurringEvent,\n  EditRecurringType,\n} from '@/types/calendar.type';\nimport { EventFrequency, Permission } from '@/utils/enums/global.enum';\nimport {\n  formatEventDates,\n  getCurrentAvailableTimeRange,\n  getRuleDates,\n} from '@/helpers/calendar.helper';\nimport {\n  useCalendar,\n  useCalendarSources,\n  useGlobalProps,\n  useModeFilter,\n  useTime,\n} from '@/composables';\nimport { CalendarFormSymbol } from '@/utils/symbols';\nimport { FORMAT_EVENT } from '@/utils/constants';\nimport { Color as IColor } from '@/types/color.type';\nimport {\n  cloneObject,\n  isArrayAndHasItems,\n  isoDateWithoutTime,\n  isUndefined,\n  isValidEmail,\n  removeObjectProps,\n} from '@/utils/functions';\nimport { calendarHelper } from '@/helpers';\nimport timezones from '@/utils/timezones.json';\nimport moment from 'moment';\nimport { EventColors } from '@/utils/enums/colors.enum';\nimport { RuleObject } from 'ant-design-vue/lib/form/interface';\n\nexport default defineComponent({\n  components: { CalendarRecurrence, VSwitch, Editor, SelectContact, SelectCase, Color },\n  props: {\n    type: {\n      type: String as PropType<'edit' | 'create'>,\n      default: 'create',\n    },\n    data: Object as PropType<CalendarEvent>,\n    isDisplay: {\n      type: Boolean,\n      required: true,\n    },\n    editRecurringType: String as PropType<EditRecurringType>,\n    newEventRange: {\n      type: Object as PropType<CalendarEventPosition>,\n      required: true,\n    },\n  },\n  setup(props) {\n    const { time, timezone } = useTime();\n    const { isLoading } = useGlobalProps();\n    const { getSourcePermission } = useCalendarSources();\n    const {\n      selectedSource,\n      defaultSource,\n      sourcesToRender,\n      setCurrentCalendarId,\n      currentEventApi,\n    } = useCalendar();\n\n    const { isModeFilter, contactData } = useModeFilter();\n\n    const refForm = ref();\n    const refRecurrence = ref();\n    const isRequiredCaseField = ref(true);\n\n    const form = reactive<CalendarFormEventNew>({\n      id: undefined,\n      timezone: unref(timezone.value),\n      calendarId: '',\n      title: undefined,\n      start: time(),\n      end: time(),\n      allDay: false,\n      isRecurringEvent: false,\n      contact: undefined,\n      case: undefined,\n      description: undefined,\n      color: undefined,\n      location: undefined,\n      attendees: undefined,\n    });\n\n    const recurrence = reactive<CalendarRecurrenceNew>({\n      interval: 1,\n      freq: EventFrequency.Weekly,\n      byweekday: undefined,\n      ends: 'never',\n      until: undefined,\n      dtstart: time(),\n      count: undefined,\n      byDay: undefined,\n    });\n\n    const isEndDateChangedByUser = ref(false);\n    const includeContact = ref(true);\n\n    const isOriginalEventRecurring = computed(() => {\n      return props.type === 'edit' && !!props.data && !!props.data.rrule;\n    });\n\n    const isSplitCurrentEvent = computed(() => {\n      return (\n        isOriginalEventRecurring.value &&\n        props.type === 'edit' &&\n        props.editRecurringType === 'current'\n      );\n    });\n\n    const eventToForm = (event: CalendarEvent) => {\n      if (isUndefined(event.contact)) {\n        includeContact.value = false;\n      }\n\n      let start = {} as Moment;\n      let end = null as Moment | null;\n\n      // Recurring event\n      if (event.rrule) {\n        // Split event from recurrence\n        if (isSplitCurrentEvent.value) {\n          // Assign dates of selected event\n          start = time(currentEventApi.value.startStr, event.timezone);\n          end = time(currentEventApi.value.endStr, event.timezone);\n\n          if (end.diff(start, 'day') > 0) {\n            end.subtract(1, 'day');\n          }\n        } else {\n          // Edit all recurrence\n          const { rrule } = event;\n\n          start = time(event.rrule.dtstart, event.timezone);\n\n          if (rrule.until) {\n            end = time(rrule.until, event.timezone);\n\n            // Assign specific time to end date\n            if (!event.allDay) {\n              let newEnd: string | Moment = calendarHelper.updateDateFromDuration({\n                date: event.rrule!.dtstart,\n                allDay: false,\n                duration: event.duration!,\n              });\n\n              newEnd = time(newEnd, event.timezone);\n\n              end.set({\n                hours: newEnd.get('hours'),\n                minutes: newEnd.get('minutes'),\n                seconds: 0,\n              });\n            }\n          }\n\n          // Set other recurrence options\n          recurrence.freq = rrule.freq;\n          recurrence.interval = rrule.interval;\n          rrule.byweekday && (recurrence.byweekday = rrule.byweekday);\n          rrule.count && (recurrence.count = rrule.count);\n\n          if (rrule.freq === 'MONTHLY' && rrule.byweekday) {\n            recurrence.byDay = true;\n          }\n\n          if (rrule.count) {\n            recurrence.ends = 'ocurrences';\n          } else if (rrule.until) {\n            recurrence.ends = 'on';\n            recurrence.until = end as Moment;\n          } else {\n            recurrence.ends = 'never';\n          }\n        }\n      } else {\n        // Normal event\n        start = time(event.start, event.timezone);\n        end = time(event.end, event.timezone);\n\n        if (end.diff(start, 'day') > 0) {\n          end.subtract(1, 'day');\n        }\n      }\n\n      form.id = event.id;\n      form.calendarId = event.calendarId;\n      form.timezone = event.timezone;\n      form.title = event.title;\n      form.allDay = event.allDay;\n      form.contact = event.contact;\n      form.case = event.case;\n      form.description = event.description;\n      form.color = event.color || selectedSource.value.color;\n      form.isRecurringEvent = !!event.rrule;\n      form.start = start;\n      form.location = event.location;\n      form.attendees = event.attendees;\n\n      // Recurring event with until\n      if (end) {\n        form.end = end;\n\n        return;\n      }\n\n      // Recurring event without until date, assign\n      form.end = time(\n        calendarHelper.updateDateFromDuration({\n          date: event.rrule!.dtstart,\n          duration: event.duration!,\n          allDay: false,\n        }),\n        event.timezone,\n      );\n    };\n\n    /** Verify if the dates are in the same day */\n    const isDatesSameDay = (start: Moment, end: Moment) => {\n      return start.dayOfYear() === end.dayOfYear();\n    };\n\n    const setDates = (firstTime = false) => {\n      if (props.type === 'create' && firstTime) {\n        form.start = time(props.newEventRange.start);\n        form.end = time(props.newEventRange.end).subtract(1, 'days');\n      }\n\n      if (form.allDay) {\n        form.start.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n        form.end.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n\n        return;\n      }\n\n      let { start, end } = getCurrentAvailableTimeRange(time());\n\n      form.start.set({\n        hours: start.get('hours'),\n        minutes: start.get('minutes'),\n        seconds: start.get('seconds'),\n      });\n\n      // Same day\n      if (isDatesSameDay(start, end)) {\n        form.end.set({\n          hours: end.get('hours'),\n          minutes: end.get('minutes'),\n          seconds: end.get('seconds'),\n        });\n\n        return;\n      }\n\n      // Different days, non-recurring events\n      if (!form.isRecurringEvent) {\n        form.end.set({\n          hours: start.get('hours') + 1,\n          minutes: start.get('minutes'),\n          seconds: start.get('seconds'),\n        });\n\n        return;\n      }\n\n      // Different days, recurring events\n      form.end = form.end.clone().endOf('day').set({ milliseconds: 0 });\n    };\n\n    watch(\n      () => props.isDisplay,\n      isDisplay => {\n        if (!isDisplay) {\n          return resetForm();\n        }\n\n        if (props.type === 'create') {\n          form.calendarId = defaultSource.value.id;\n          form.timezone = timezone.value;\n          form.color = defaultSource.value.color;\n\n          if (contactData.value) {\n            form.contact = contactData.value.id;\n\n            if (contactData.value.caseId) {\n              form.case = contactData.value.caseId;\n            }\n          }\n\n          setDates(true);\n          return;\n        }\n\n        // Edit event\n        if (!props.data) {\n          throw new Error(`For event edition the \"data\" params is required.`);\n        }\n\n        // Set props to form\n        eventToForm(props.data);\n      },\n      { immediate: true },\n    );\n\n    watch(\n      () => ({ start: form.start, isRecurringEvent: form.isRecurringEvent }),\n      ({ start, isRecurringEvent }) => {\n        if (!isRecurringEvent) {\n          return;\n        }\n\n        recurrence.dtstart = start.clone();\n\n        if (props.type === 'edit' || !recurrence.until) {\n          return;\n        }\n\n        const [dtstart, until] = [\n          start.clone().format('YYYY-MM-DD'),\n          recurrence.until.clone().format('YYYY-MM-DD'),\n        ];\n\n        const isSameOrAfter = moment.utc(dtstart).isSameOrAfter(moment.utc(until));\n\n        if (isSameOrAfter || !isEndDateChangedByUser.value) {\n          recurrence.until = start.clone().add(1, 'months');\n        }\n      },\n      { immediate: true },\n    );\n\n    // Update time when timezone is changed\n    watch(\n      () => form.timezone,\n      (timezone, oldTimezone) => {\n        const start = time(form.start, oldTimezone).format(FORMAT_EVENT);\n        const end = time(form.end, oldTimezone).format(FORMAT_EVENT);\n\n        form.start = time(start, timezone);\n        form.end = time(end, timezone);\n      },\n    );\n    const dateFormat = 'dddd, MMMM D';\n\n    /** Used in normal events */\n    const dateRange = computed<[Moment, Moment]>({\n      get() {\n        return [form.start, form.end];\n      },\n\n      set(dates: [Moment, Moment]) {\n        form.start = dates[0];\n        form.end = dates[1];\n      },\n    });\n\n    const dateCols = computed(() => {\n      const cols = { date: 24, time: 24 };\n\n      if (!isSplitCurrentEvent.value && form.isRecurringEvent) {\n        cols.date = 12;\n        cols.time = 12;\n      }\n\n      return cols;\n    });\n\n    const colors = computed<IColor[]>(() => {\n      const _colors = Object.values(EventColors) as string[];\n\n      const appendColor = selectedSource.value\n        ? selectedSource.value.color\n        : defaultSource.value.color;\n\n      _colors.unshift(appendColor);\n\n      const arrColors: IColor[] = _colors.map(color => ({\n        color,\n        animate: true,\n        disabled: false,\n        active: form.color === color,\n        fixed: appendColor === color,\n      }));\n\n      const _color = (props.data && props.data.color!) || selectedSource.value.color;\n\n      if (\n        props.data &&\n        props.data.color !== appendColor &&\n        _colors.every(color => color !== _color)\n      ) {\n        arrColors.push({\n          color: _color,\n          animate: true,\n          disabled: false,\n          active: _color === form.color,\n          isOut: true,\n        });\n      }\n\n      return arrColors;\n    });\n\n    const isSourceColor = computed(() => {\n      return sourcesToRender.value.own.some(source => source.color === form.color);\n    });\n\n    const isChildEvent = computed(() => {\n      if (!props.data) {\n        return false;\n      }\n\n      return !!props.data.parentId;\n    });\n\n    const isHideRecurrenceOptions = computed(() => {\n      if (isChildEvent.value) {\n        return true;\n      }\n\n      if (!isOriginalEventRecurring.value) {\n        return false;\n      }\n\n      return isSplitCurrentEvent.value;\n    });\n\n    const sharedCalendars = computed(() => {\n      return sourcesToRender.value.shared.filter(source => {\n        const permission = getSourcePermission(source);\n\n        return permission === Permission.All;\n      });\n    });\n\n    const allCalendars = computed(() => {\n      return [...sourcesToRender.value.own, ...sharedCalendars.value];\n    });\n\n    const resetForm = () => {\n      form.id = undefined;\n      form.calendarId = '';\n      form.title = undefined;\n      form.start = time();\n      form.end = time();\n      form.allDay = false;\n      form.isRecurringEvent = false;\n      form.contact = undefined;\n      form.case = undefined;\n      form.description = undefined;\n      form.color = undefined;\n      form.location = undefined;\n      form.attendees = undefined;\n\n      recurrence.interval = 1;\n      recurrence.freq = EventFrequency.Weekly;\n      recurrence.byweekday = undefined;\n      recurrence.ends = 'never';\n      recurrence.until = undefined;\n      recurrence.dtstart = time();\n      recurrence.count = undefined;\n      recurrence.byDay = undefined;\n\n      includeContact.value = true;\n      clearValidate('contact');\n      clearValidate('case');\n    };\n\n    const getEventDuration = () => {\n      // Apply time of end date for calculate duration\n      const tempStart = form.start.clone().set({\n        hours: form.end.get('hours'),\n        minutes: form.end.get('minutes'),\n        seconds: form.end.get('seconds'),\n      });\n\n      return removeObjectProps<CalendarEventDuration>(\n        calendarHelper.generateEventDuration(form.start.clone(), tempStart),\n        'daysDiff',\n      );\n    };\n\n    const formToRecurringEvent = () => {\n      const rrule: any = {\n        dtstart: recurrence.dtstart.toISOString(),\n        interval: recurrence.interval,\n        freq: recurrence.freq,\n      };\n\n      if (recurrence.freq === 'WEEKLY' || (recurrence.freq === 'MONTHLY' && recurrence.byDay)) {\n        rrule.byweekday = recurrence.byweekday!;\n      }\n\n      if (recurrence.ends === 'on') {\n        rrule.until = recurrence.until!.toISOString();\n      } else if (recurrence.ends === 'ocurrences') {\n        rrule.count = recurrence.count!;\n\n        let dtstart = recurrence.dtstart.toISOString();\n\n        if (!form.allDay) {\n          dtstart = recurrence.dtstart.format(FORMAT_EVENT) + '.000Z';\n        }\n\n        let tmpUntil = '';\n\n        if (!form.allDay && isArrayAndHasItems(rrule.byweekday)) {\n          const offset = recurrence.dtstart.format('Z');\n\n          const dates = calendarHelper.getFormattedRuleDates({\n            realStart: dtstart,\n            offset,\n            event: { rrule } as any,\n          });\n\n          const duration = getEventDuration();\n\n          tmpUntil = calendarHelper.updateDateFromDuration({\n            date: dates[dates.length - 1],\n            duration,\n            allDay: form.allDay,\n          });\n        } else {\n          const dates = getRuleDates({ rrule: { ...rrule, dtstart } } as any);\n\n          tmpUntil = isoDateWithoutTime(dates[dates.length - 1]);\n        }\n\n        // Assign until date for backend filters\n        rrule.until = tmpUntil;\n      }\n\n      return rrule as CalendarRecurringEvent;\n    };\n\n    const getEvent = (): CalendarEvent => {\n      isEndDateChangedByUser.value = false;\n\n      form.start.set({ seconds: 0, milliseconds: 0 });\n      form.end.set({ seconds: 0, milliseconds: 0 });\n\n      let event: any = {\n        title: form.title!,\n        timezone: form.timezone,\n        calendarId: form.calendarId!,\n        allDay: form.allDay,\n        contact: form.contact,\n        case: form.case,\n        description: form.description || null,\n        location: form.location || null,\n        attendees: form.attendees || null,\n      };\n\n      if (!includeContact.value && props.type === 'create') {\n        event = removeObjectProps(event, 'contact', 'case');\n      }\n\n      !isSourceColor.value && (event.color = form.color);\n\n      const isUpdateAll = props.editRecurringType === 'all';\n      /** Update current normal event, not split from recurrence */\n      const isUpdateCurrent = props.editRecurringType === 'current' && !isSplitCurrentEvent.value;\n\n      if (props.type === 'edit' && (isUpdateAll || isUpdateCurrent)) {\n        event.id = form.id!;\n      }\n\n      // Normal event\n      if (!form.isRecurringEvent || isSplitCurrentEvent.value) {\n        event.start = form.start.toISOString();\n\n        event.end = !form.allDay\n          ? form.end.toISOString()\n          : form.end.clone().add(1, 'days').toISOString();\n\n        props.data?.parentId && (event.parentId = props.data!.parentId);\n      } else {\n        // Recurring event\n        event.exdate = props.data?.exdate || [];\n        event.rrule = formToRecurringEvent();\n\n        // Default duration, all day event\n        event.duration = {\n          days: 1,\n          hours: 0,\n          minutes: 0,\n        };\n\n        if (!event.allDay) {\n          event.duration = getEventDuration();\n\n          return cloneObject(event) as CalendarEvent;\n        }\n      }\n\n      if (event.allDay) {\n        return formatEventDates(cloneObject(event) as CalendarEvent);\n      }\n\n      return cloneObject(event);\n    };\n\n    const attendeesValidator = (_: RuleObject, value: string[] = []) => {\n      if (!value.length) {\n        return Promise.resolve();\n      }\n\n      for (const email of value) {\n        if (!isValidEmail(email)) {\n          return Promise.reject('This field must contain a valid email address list.');\n        }\n      }\n\n      return Promise.resolve();\n    };\n\n    /** Changing between normal/recurring events */\n    const onChangeEventType = () => {\n      if (!isDatesSameDay(form.start, form.end)) {\n        setDates();\n      }\n\n      if (form.isRecurringEvent && !isEndDateChangedByUser.value && recurrence.until) {\n        recurrence.until = form.end.clone().add(1, 'months');\n      }\n    };\n\n    const onChangeAllDay = () => {\n      if (form.isRecurringEvent && isEndDateChangedByUser.value) {\n        return;\n      }\n\n      setDates();\n      // form.start.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n      // form.end.set({ hours: 0, minutes: 0, seconds: 0, milliseconds: 0 });\n\n      if (!recurrence.until) {\n        return;\n      }\n\n      // Remove time on all day events\n      if (form.allDay) {\n        recurrence.until.set({ hours: 0, minutes: 0, seconds: 0 });\n      } else {\n        recurrence.until.set({\n          hours: form.end.get('hours'),\n          minutes: form.end.get('minutes'),\n          seconds: 0,\n        });\n      }\n    };\n\n    const onChangeStartDate = (date: Moment) => {\n      if (props.type === 'edit' && recurrence.until) {\n        const [dtstart, until] = [\n          form.start.clone().format('YYYY-MM-DD'),\n          recurrence.until.clone().format('YYYY-MM-DD'),\n        ];\n\n        const isSameOrAfter = moment.utc(dtstart).isSameOrAfter(moment.utc(until));\n\n        if (isSameOrAfter) {\n          recurrence.until = form.start.clone().add(1, 'months');\n        }\n      }\n\n      const endTemp = form.start.clone().set({\n        hours: form.end.get('hours'),\n        minutes: form.end.get('minutes'),\n      });\n\n      if (!date.isSameOrAfter(endTemp.clone())) {\n        return;\n      }\n\n      let newEnd = date.clone().add(1, 'hours');\n\n      // In non-recurring events\n      if (!form.isRecurringEvent) {\n        form.end = newEnd;\n        return;\n      }\n\n      // Recurring events\n      if (!isDatesSameDay(form.start, newEnd)) {\n        newEnd = form.start.clone().endOf('day').set({ milliseconds: 0 });\n      }\n\n      form.end = form.end.clone().set({\n        hours: newEnd.get('hours'),\n        minutes: newEnd.get('minutes'),\n      });\n\n      if (form.start.isSameOrAfter(form.end)) {\n        form.start = form.start\n          .clone()\n          .endOf('day')\n          .subtract(4, 'minutes')\n          .set({ milliseconds: 0 });\n      }\n    };\n\n    const onChangeEndDate = (date: Moment) => {\n      const startTemp = form.end.clone().set({\n        hours: form.start.get('hours'),\n        minutes: form.start.get('minutes'),\n      });\n\n      if (date.isAfter(startTemp)) {\n        return;\n      }\n\n      let newStart = date.clone().subtract(1, 'hours');\n\n      // In non-recurring events\n      if (!form.isRecurringEvent) {\n        form.start = newStart;\n        return;\n      }\n\n      if (!isDatesSameDay(newStart, form.end)) {\n        newStart = form.end.clone().startOf('day');\n        form.end = form.end.clone().startOf('day').add(5, 'minutes');\n      }\n\n      form.start = form.start.clone().set({\n        hours: newStart.get('hours'),\n        minutes: newStart.get('minutes'),\n      });\n    };\n\n    const onChangeDates = (field: 'start' | 'end', date: Moment) => {\n      field === 'start' ? onChangeStartDate(date) : onChangeEndDate(date);\n    };\n\n    const onChangeUntil = () => {\n      isEndDateChangedByUser.value = true;\n    };\n\n    /** Clear case on contact change */\n    const onChangeContact = () => {\n      form.case = undefined;\n      clearValidate('case');\n\n      isRequiredCaseField.value = true;\n    };\n\n    const onChangeCalendar = (calendarId: string) => {\n      setCurrentCalendarId(calendarId);\n\n      if (isSourceColor.value) {\n        form.color = selectedSource.value.color;\n      }\n    };\n\n    /** Select filter option */\n    const onFilterCalendars = (input: string, option: any) => {\n      input = input.trim().toLowerCase();\n      const currentCalendar = allCalendars.value.find(calendar => calendar.id === option.value);\n\n      if (!currentCalendar) {\n        return false;\n      }\n\n      const fullName = `${currentCalendar.name} ${currentCalendar.user?.fullName}`.toLowerCase();\n\n      return fullName.includes(input);\n    };\n\n    const clearValidate = (field?: string) => refForm.value.clearValidate(field);\n\n    const validateForm = async () => {\n      const promises = [refForm.value.validate()];\n\n      if (form.isRecurringEvent && refRecurrence.value) {\n        promises.push(refRecurrence.value.validateForm());\n      }\n\n      return Promise.all(promises);\n    };\n\n    const onCreated = () => {\n      provide(CalendarFormSymbol, form);\n    };\n\n    onCreated();\n\n    return {\n      form,\n      timezones,\n      recurrence,\n      isRequiredCaseField,\n      refForm,\n      includeContact,\n      isModeFilter,\n      contactData,\n      refRecurrence,\n      selectedSource,\n      isLoading,\n      isHideRecurrenceOptions,\n      isOriginalEventRecurring,\n      isChildEvent,\n      isSplitCurrentEvent,\n      dateRange,\n      dateCols,\n      dateFormat,\n      colors,\n      sourcesToRender,\n      allCalendars,\n      sharedCalendars,\n      validateForm,\n      clearValidate,\n      getEvent,\n      attendeesValidator,\n      onChangeAllDay,\n      onChangeDates,\n      onChangeEventType,\n      onChangeContact,\n      onChangeCalendar,\n      onChangeUntil,\n      onFilterCalendars,\n    };\n  },\n});\n","import { render } from \"./CalendarEventForm.vue?vue&type=template&id=685c7ca5&scoped=true\"\nimport script from \"./CalendarEventForm.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarEventForm.vue?vue&type=script&lang=ts\"\n\nimport \"./CalendarEventForm.vue?vue&type=style&index=0&id=685c7ca5&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-685c7ca5\"\n\nexport default script","<template>\n  <AForm :layout=\"layout\">\n    <AFormItem label=\"Name\" v-bind=\"formItemProps\" required>\n      <AInput\n        :value=\"$props.name\"\n        placeholder=\"Name\"\n        @change=\"updateValue('name', $event.target.value)\"\n        v-bind=\"formProps.field\"\n      />\n      <div style=\"position: absolute; right: -35px; top: -7px\">\n        <Color\n          :model-value=\"color\"\n          :colors-data=\"colors\"\n          :default=\"defaultColor\"\n          @change=\"updateValue('color', $event)\"\n        />\n      </div>\n    </AFormItem>\n  </AForm>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref } from 'vue';\nimport Color from '@/components/Color.vue';\nimport { useCalendarSources } from '@/composables';\n\nexport default defineComponent({\n  components: { Color },\n  props: {\n    name: String,\n    color: String,\n    layout: {\n      type: String as PropType<'vertical' | 'horizontal'>,\n      default: 'vertical',\n      validator: (val: string) => ['vertical', 'horizontal'].includes(val),\n    },\n    defaultColor: String,\n  },\n  emits: ['update:name', 'update:color'],\n  setup(props, { emit }) {\n    const isNameTouched = ref(false);\n\n    const { sourceColors } = useCalendarSources();\n\n    const updateValue = (field: 'name' | 'color', value: string) => {\n      emit(`update:${field}` as any, value);\n\n      if (field === 'name' && !isNameTouched.value) {\n        isNameTouched.value = true;\n      }\n    };\n\n    const nameStatus = computed(() => {\n      if (isNameTouched.value && !props.name) {\n        return {\n          help: 'Required field',\n          validateStatus: 'error',\n        };\n      }\n\n      return {\n        validateStatus: 'success',\n      };\n    });\n\n    const formProps = computed(() => {\n      if (props.layout === 'vertical') {\n        return {\n          field: { style: 'width: 89%' },\n          formItem: undefined,\n        };\n      }\n\n      return {\n        field: { style: 'width: 85%' },\n        formItem: {\n          wrapperCol: { span: 18 },\n          labelCol: { span: 6 },\n        },\n      };\n    });\n\n    const formItemProps = computed(() => {\n      return { ...nameStatus.value, ...formProps.value.formItem };\n    });\n\n    const colors = computed(() => {\n      const _colors = [...sourceColors.value];\n\n      if (sourceColors.value.every(sourceColor => sourceColor.color !== props.color)) {\n        _colors.push({\n          color: props.color!,\n          disabled: false,\n          animate: true,\n          isOut: true,\n          active: true,\n        });\n      }\n\n      return _colors;\n    });\n\n    const resetFieldName = (name = '') => {\n      updateValue('name', name);\n      isNameTouched.value = false;\n    };\n\n    return {\n      updateValue,\n      sourceColors,\n      nameStatus,\n      resetFieldName,\n      formProps,\n      formItemProps,\n      colors,\n    };\n  },\n});\n</script>\n","\nimport { computed, defineComponent, PropType, ref } from 'vue';\nimport Color from '@/components/Color.vue';\nimport { useCalendarSources } from '@/composables';\n\nexport default defineComponent({\n  components: { Color },\n  props: {\n    name: String,\n    color: String,\n    layout: {\n      type: String as PropType<'vertical' | 'horizontal'>,\n      default: 'vertical',\n      validator: (val: string) => ['vertical', 'horizontal'].includes(val),\n    },\n    defaultColor: String,\n  },\n  emits: ['update:name', 'update:color'],\n  setup(props, { emit }) {\n    const isNameTouched = ref(false);\n\n    const { sourceColors } = useCalendarSources();\n\n    const updateValue = (field: 'name' | 'color', value: string) => {\n      emit(`update:${field}` as any, value);\n\n      if (field === 'name' && !isNameTouched.value) {\n        isNameTouched.value = true;\n      }\n    };\n\n    const nameStatus = computed(() => {\n      if (isNameTouched.value && !props.name) {\n        return {\n          help: 'Required field',\n          validateStatus: 'error',\n        };\n      }\n\n      return {\n        validateStatus: 'success',\n      };\n    });\n\n    const formProps = computed(() => {\n      if (props.layout === 'vertical') {\n        return {\n          field: { style: 'width: 89%' },\n          formItem: undefined,\n        };\n      }\n\n      return {\n        field: { style: 'width: 85%' },\n        formItem: {\n          wrapperCol: { span: 18 },\n          labelCol: { span: 6 },\n        },\n      };\n    });\n\n    const formItemProps = computed(() => {\n      return { ...nameStatus.value, ...formProps.value.formItem };\n    });\n\n    const colors = computed(() => {\n      const _colors = [...sourceColors.value];\n\n      if (sourceColors.value.every(sourceColor => sourceColor.color !== props.color)) {\n        _colors.push({\n          color: props.color!,\n          disabled: false,\n          animate: true,\n          isOut: true,\n          active: true,\n        });\n      }\n\n      return _colors;\n    });\n\n    const resetFieldName = (name = '') => {\n      updateValue('name', name);\n      isNameTouched.value = false;\n    };\n\n    return {\n      updateValue,\n      sourceColors,\n      nameStatus,\n      resetFieldName,\n      formProps,\n      formItemProps,\n      colors,\n    };\n  },\n});\n","import { render } from \"./CalendarForm.vue?vue&type=template&id=ffd175fe\"\nimport script from \"./CalendarForm.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarForm.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <AModal :footer=\"null\" :closable=\"false\">\n    <template #title>\n      <div style=\"display: flex; justify-content: flex-end\">\n        <div>\n          <ATooltip v-if=\"permission === 'all'\" title=\"Edit Event\" placement=\"bottom\">\n            <APopconfirm\n              v-if=\"isRecurringEvent\"\n              @confirm=\"onConfirmEditEvent\"\n              @visible-change=\"onChangeVisiblePopConfirm\"\n            >\n              <template #title>\n                <div style=\"display: flex; flex-direction: column\">\n                  Edit recurring event\n                  <ARadioGroup\n                    style=\"margin-top: 0.3rem; margin-left: -22px\"\n                    :value=\"$props.editRecurrenceType\"\n                    @change=\"updateEditRecurrenceType($event.target.value)\"\n                  >\n                    <ARadio\n                      v-if=\"!$props.hideCurrentCheckItem\"\n                      value=\"current\"\n                      class=\"radio-vertical\"\n                    >\n                      This event\n                    </ARadio>\n                    <ARadio\n                      v-if=\"!$props.hideFollowingCheckItem\"\n                      value=\"following\"\n                      class=\"radio-vertical\"\n                    >\n                      This and following events\n                    </ARadio>\n                    <ARadio value=\"all\" class=\"radio-vertical\">All events</ARadio>\n                  </ARadioGroup>\n                </div>\n              </template>\n              <AButton type=\"link\" style=\"padding-right: 8px\">\n                <EditOutlined style=\"font-size: 18px\" />\n              </AButton>\n            </APopconfirm>\n\n            <AButton v-else @click=\"onConfirmEditEvent\" type=\"link\" style=\"padding-right: 8px\">\n              <EditOutlined style=\"font-size: 18px\" />\n            </AButton>\n          </ATooltip>\n\n          <ATooltip v-if=\"permission === 'all'\" title=\"Delete Event\" placement=\"bottom\">\n            <APopconfirm\n              ok-text=\"Yes\"\n              cancel-text=\"No\"\n              @confirm=\"onConfirmDeleteEvent\"\n              @visible-change=\"onChangeVisiblePopConfirm\"\n            >\n              <template #title>\n                <div v-if=\"isRecurringEvent\" style=\"display: flex; flex-direction: column\">\n                  Delete recurring event\n                  <ARadioGroup\n                    :value=\"$props.editRecurrenceType\"\n                    @change=\"updateEditRecurrenceType($event.target.value)\"\n                    style=\"margin-top: 0.3rem; margin-left: -22px\"\n                  >\n                    <ARadio\n                      v-if=\"!$props.hideCurrentCheckItem\"\n                      value=\"current\"\n                      class=\"radio-vertical\"\n                    >\n                      This event\n                    </ARadio>\n                    <ARadio\n                      v-if=\"!$props.hideFollowingCheckItem\"\n                      value=\"following\"\n                      class=\"radio-vertical\"\n                    >\n                      This and following events\n                    </ARadio>\n                    <ARadio value=\"all\" class=\"radio-vertical\">All events</ARadio>\n                  </ARadioGroup>\n                </div>\n                <span v-else>Are you sure?</span>\n              </template>\n              <AButton type=\"link\" style=\"padding-left: 8px\">\n                <DeleteOutlined style=\"font-size: 18px\" />\n              </AButton>\n            </APopconfirm>\n          </ATooltip>\n\n          <ATooltip title=\"Close\" placement=\"bottom\">\n            <AButton type=\"link\" style=\"padding-right: 0\" @click=\"closeModal\">\n              <CloseOutlined style=\"font-size: 16px\" />\n            </AButton>\n          </ATooltip>\n        </div>\n      </div>\n    </template>\n    <h2 style=\"margin-bottom: 0\">{{ event.title }}</h2>\n\n    <div style=\"display: flex; align-items: center\">\n      <ColorCircle :color=\"selectedSource.color\" size=\"extraSmall\" :animate=\"false\" />\n      <h4 style=\"color: gray; margin: 0 0 0 0.5rem\">\n        {{ selectedSource.name }}\n      </h4>\n\n      <h4 style=\"color: gray; margin: 0 0 0 0.8rem\">\n        <CalendarOutlined style=\"margin-right: 0.2rem\" />\n        {{ eventLabel }}\n      </h4>\n\n      <ATooltip v-if=\"!isGoogleEvent\" title=\"Created By\" placement=\"top\">\n        <h4 style=\"color: gray; margin: 0 0 0 0.8rem\">\n          <UserAddOutlined style=\"margin-right: 0.2rem\" />\n          {{ createdBy.fullName }}\n        </h4>\n      </ATooltip>\n    </div>\n    <h4\n      v-if=\"isRecurringEvent\"\n      v-html=\"recurrenceLabel\"\n      style=\"color: gray; margin: 0; display: block\"\n    ></h4>\n\n    <ARow :gutter=\"12\" style=\"margin-top: 1rem\">\n      <ACol v-if=\"!isGoogleEvent && event.contact\" :span=\"12\">\n        <h4 style=\"color: grey; margin-bottom: 0.5rem\">Contact</h4>\n        <SelectContact :model-value=\"event.contact\" style=\"width: 100%\" readonly />\n      </ACol>\n\n      <ACol v-if=\"!isGoogleEvent && event.contact\" :span=\"12\">\n        <h4 style=\"color: grey; margin-bottom: 0.5rem\">Case</h4>\n        <SelectCase\n          :model-value=\"event.case\"\n          :contact=\"event.contact\"\n          :disabled=\"!event.contact || isLoading\"\n          readonly\n          placeholder=\"Without Case\"\n          style=\"width: 100%\"\n        />\n      </ACol>\n\n      <ACol v-if=\"showDescription\" :span=\"24\" style=\"margin-top: 0.7rem\">\n        <h4 style=\"color: grey; margin-bottom: 0.5rem\">Description</h4>\n        <Editor :model-value=\"event.description\" disabled></Editor>\n      </ACol>\n    </ARow>\n  </AModal>\n</template>\n\n<script lang=\"ts\">\nimport { useCalendar, useGlobalProps, useTime, useUsers } from '@/composables';\nimport { computed, defineComponent, nextTick, PropType, ref } from 'vue';\nimport ColorCircle from '@/components/ColorCircle.vue';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CalendarOutlined,\n  UserAddOutlined,\n} from '@ant-design/icons-vue';\nimport { CustomRecurrenceHelper } from '@/helpers';\nimport SelectContact from '@/components/SelectContact.vue';\nimport SelectCase from '@/components/SelectCase.vue';\nimport Editor from '@/components/Editor.vue';\nimport { EditRecurringType } from '@/types/calendar.type';\nimport { CalendarContext } from '@/utils/enums/global.enum';\n\nexport default defineComponent({\n  components: {\n    SelectContact,\n    SelectCase,\n    Editor,\n    ColorCircle,\n    EditOutlined,\n    DeleteOutlined,\n    CloseOutlined,\n    CalendarOutlined,\n    UserAddOutlined,\n  },\n  props: {\n    editRecurrenceType: {\n      type: String as PropType<EditRecurringType>,\n      required: true,\n    },\n    hideFollowingCheckItem: {\n      type: Boolean,\n      required: false,\n    },\n    hideCurrentCheckItem: {\n      type: Boolean,\n      required: false,\n    },\n  },\n  emits: ['update:editRecurrenceType', 'close', 'confirmEditEvent', 'confirmDeleteEvent'],\n  setup(_, { emit }) {\n    const { selectedSource, currentData, currentEventApi, permission } = useCalendar();\n    const { time, timezone, getTimeZoneLabel } = useTime();\n\n    const { isLoading } = useGlobalProps();\n    const { users, whoami } = useUsers();\n\n    const isConfirmed = ref(false);\n    const event = computed(() => currentData.event);\n\n    const isRecurringEvent = computed(() => !!event.value.rrule);\n\n    const createdBy = computed(() => {\n      const createdById = event.value.createdBy;\n\n      if (createdById === whoami.value.id) {\n        return whoami.value;\n      }\n\n      return users.value.find(user => user.id === event.value.createdBy);\n    });\n\n    const recurrenceLabel = computed(() => {\n      if (!isRecurringEvent.value) {\n        return '';\n      }\n\n      const helper = new CustomRecurrenceHelper(event.value.rrule!);\n\n      let label = helper.getLabel();\n\n      if (!event.value.allDay && event.value.timezone !== timezone.value) {\n        label += ` <i>${getTimeZoneLabel(event.value.timezone)}</i>`;\n      }\n\n      return label;\n    });\n\n    const showDescription = computed(() => {\n      const description = event.value.description || '';\n\n      return !!description.trim();\n    });\n\n    const isGoogleEvent = computed(() => event.value.calendarContext === CalendarContext.Google);\n\n    const eventDate = computed(() => {\n      const start = time(currentEventApi.value.startStr);\n      const end = time(currentEventApi.value.endStr);\n\n      if (currentEventApi.value.allDay && end.diff(start, 'days')) {\n        end.subtract(1, 'days');\n      }\n\n      return { start: start.toISOString(), end: end.toISOString() };\n    });\n\n    const eventLabel = computed(() => {\n      if (currentEventApi.value.allDay) {\n        let startStr = time(eventDate.value.start).format('dddd, MMM D');\n\n        // Same day\n        if (time(eventDate.value.start).isSame(eventDate.value.end, 'days')) {\n          return startStr;\n        }\n\n        startStr = time(eventDate.value.start).format('MMMM D');\n        const endStr = time(eventDate.value.end).format('MMMM D');\n\n        return `${startStr} - ${endStr}`;\n      }\n\n      const startStr = time(eventDate.value.start).format('MMM D, h:mm a');\n\n      const endStr = time(eventDate.value.start).isSame(eventDate.value.end, 'days')\n        ? time(eventDate.value.end).format('h:mm a')\n        : time(eventDate.value.end).format('MMM D, h:mm a');\n\n      return `${startStr} - ${endStr}`;\n    });\n\n    const updateEditRecurrenceType = (value: EditRecurringType) => {\n      emit('update:editRecurrenceType', value);\n    };\n\n    const onConfirmEditEvent = () => {\n      isConfirmed.value = true;\n      emit('confirmEditEvent');\n      closeModal();\n    };\n\n    const onConfirmDeleteEvent = () => {\n      isConfirmed.value = true;\n      emit('confirmDeleteEvent');\n      closeModal();\n    };\n\n    const closeModal = () => {\n      emit('close');\n    };\n\n    const onChangeVisiblePopConfirm = (visible: boolean) => {\n      nextTick(() => {\n        if (!visible && !isConfirmed.value) {\n          updateEditRecurrenceType('current');\n          isConfirmed.value = false;\n        }\n      });\n    };\n\n    return {\n      event,\n      selectedSource,\n      permission,\n      isRecurringEvent,\n      isGoogleEvent,\n      showDescription,\n      createdBy,\n      eventLabel,\n      recurrenceLabel,\n      isLoading,\n      updateEditRecurrenceType,\n      closeModal,\n      onChangeVisiblePopConfirm,\n      onConfirmEditEvent,\n      onConfirmDeleteEvent,\n    };\n  },\n});\n</script>\n","\nimport { useCalendar, useGlobalProps, useTime, useUsers } from '@/composables';\nimport { computed, defineComponent, nextTick, PropType, ref } from 'vue';\nimport ColorCircle from '@/components/ColorCircle.vue';\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  CloseOutlined,\n  CalendarOutlined,\n  UserAddOutlined,\n} from '@ant-design/icons-vue';\nimport { CustomRecurrenceHelper } from '@/helpers';\nimport SelectContact from '@/components/SelectContact.vue';\nimport SelectCase from '@/components/SelectCase.vue';\nimport Editor from '@/components/Editor.vue';\nimport { EditRecurringType } from '@/types/calendar.type';\nimport { CalendarContext } from '@/utils/enums/global.enum';\n\nexport default defineComponent({\n  components: {\n    SelectContact,\n    SelectCase,\n    Editor,\n    ColorCircle,\n    EditOutlined,\n    DeleteOutlined,\n    CloseOutlined,\n    CalendarOutlined,\n    UserAddOutlined,\n  },\n  props: {\n    editRecurrenceType: {\n      type: String as PropType<EditRecurringType>,\n      required: true,\n    },\n    hideFollowingCheckItem: {\n      type: Boolean,\n      required: false,\n    },\n    hideCurrentCheckItem: {\n      type: Boolean,\n      required: false,\n    },\n  },\n  emits: ['update:editRecurrenceType', 'close', 'confirmEditEvent', 'confirmDeleteEvent'],\n  setup(_, { emit }) {\n    const { selectedSource, currentData, currentEventApi, permission } = useCalendar();\n    const { time, timezone, getTimeZoneLabel } = useTime();\n\n    const { isLoading } = useGlobalProps();\n    const { users, whoami } = useUsers();\n\n    const isConfirmed = ref(false);\n    const event = computed(() => currentData.event);\n\n    const isRecurringEvent = computed(() => !!event.value.rrule);\n\n    const createdBy = computed(() => {\n      const createdById = event.value.createdBy;\n\n      if (createdById === whoami.value.id) {\n        return whoami.value;\n      }\n\n      return users.value.find(user => user.id === event.value.createdBy);\n    });\n\n    const recurrenceLabel = computed(() => {\n      if (!isRecurringEvent.value) {\n        return '';\n      }\n\n      const helper = new CustomRecurrenceHelper(event.value.rrule!);\n\n      let label = helper.getLabel();\n\n      if (!event.value.allDay && event.value.timezone !== timezone.value) {\n        label += ` <i>${getTimeZoneLabel(event.value.timezone)}</i>`;\n      }\n\n      return label;\n    });\n\n    const showDescription = computed(() => {\n      const description = event.value.description || '';\n\n      return !!description.trim();\n    });\n\n    const isGoogleEvent = computed(() => event.value.calendarContext === CalendarContext.Google);\n\n    const eventDate = computed(() => {\n      const start = time(currentEventApi.value.startStr);\n      const end = time(currentEventApi.value.endStr);\n\n      if (currentEventApi.value.allDay && end.diff(start, 'days')) {\n        end.subtract(1, 'days');\n      }\n\n      return { start: start.toISOString(), end: end.toISOString() };\n    });\n\n    const eventLabel = computed(() => {\n      if (currentEventApi.value.allDay) {\n        let startStr = time(eventDate.value.start).format('dddd, MMM D');\n\n        // Same day\n        if (time(eventDate.value.start).isSame(eventDate.value.end, 'days')) {\n          return startStr;\n        }\n\n        startStr = time(eventDate.value.start).format('MMMM D');\n        const endStr = time(eventDate.value.end).format('MMMM D');\n\n        return `${startStr} - ${endStr}`;\n      }\n\n      const startStr = time(eventDate.value.start).format('MMM D, h:mm a');\n\n      const endStr = time(eventDate.value.start).isSame(eventDate.value.end, 'days')\n        ? time(eventDate.value.end).format('h:mm a')\n        : time(eventDate.value.end).format('MMM D, h:mm a');\n\n      return `${startStr} - ${endStr}`;\n    });\n\n    const updateEditRecurrenceType = (value: EditRecurringType) => {\n      emit('update:editRecurrenceType', value);\n    };\n\n    const onConfirmEditEvent = () => {\n      isConfirmed.value = true;\n      emit('confirmEditEvent');\n      closeModal();\n    };\n\n    const onConfirmDeleteEvent = () => {\n      isConfirmed.value = true;\n      emit('confirmDeleteEvent');\n      closeModal();\n    };\n\n    const closeModal = () => {\n      emit('close');\n    };\n\n    const onChangeVisiblePopConfirm = (visible: boolean) => {\n      nextTick(() => {\n        if (!visible && !isConfirmed.value) {\n          updateEditRecurrenceType('current');\n          isConfirmed.value = false;\n        }\n      });\n    };\n\n    return {\n      event,\n      selectedSource,\n      permission,\n      isRecurringEvent,\n      isGoogleEvent,\n      showDescription,\n      createdBy,\n      eventLabel,\n      recurrenceLabel,\n      isLoading,\n      updateEditRecurrenceType,\n      closeModal,\n      onChangeVisiblePopConfirm,\n      onConfirmEditEvent,\n      onConfirmDeleteEvent,\n    };\n  },\n});\n","import { render } from \"./CalendarModalEventInfo.vue?vue&type=template&id=8d9e2bbc\"\nimport script from \"./CalendarModalEventInfo.vue?vue&type=script&lang=ts\"\nexport * from \"./CalendarModalEventInfo.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { computed, defineComponent, onMounted, reactive, ref, watch, provide, nextTick } from 'vue';\nimport CalendarToolbar from '@/components/CalendarToolbar.vue';\nimport CalendarEventForm from '@/components/CalendarEventForm.vue';\nimport CalendarForm from '@/components/CalendarForm.vue';\nimport CalendarModalEventInfo from '@/components/CalendarModalEventInfo.vue';\nimport { Calendar, DateSelectArg, EventApi, EventDropArg } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport listGridPlugin from '@fullcalendar/list';\nimport interactionPlugin, {\n  EventDragStartArg,\n  EventResizeDoneArg,\n  EventResizeStartArg,\n} from '@fullcalendar/interaction';\nimport rrulePlugin from '@fullcalendar/rrule';\nimport moment from 'moment-timezone';\n\nimport {\n  useCalendar,\n  useTime,\n  useGlobalProps,\n  useCalendarEvents,\n  useCalendarSources,\n  useModeFilter,\n} from '@/composables';\nimport {\n  capitalize,\n  removeObjectProps,\n  isoDateWithoutTime,\n  cloneObject,\n  getObjChangedProps,\n  isArrayEmpty,\n  isArrayAndHasItems,\n  isUndefined,\n  isObjectEmpty,\n} from '@/utils/functions';\nimport {\n  Byweekday,\n  CalendarCreate,\n  CalendarEvent,\n  CalendarSettings,\n  CalendarWriteShowFor,\n  ChangeSource,\n  EditRecurringType,\n  FilterDeleteEvent,\n  GenerateDateRangeParams,\n  ReturnCalendarEvent,\n  ToggleCalendarVisibilityParams,\n  UpdateEvent,\n} from '@/types/calendar.type';\nimport { notification } from 'ant-design-vue';\nimport {\n  CalendarInstanceSymbol,\n  CalendarSettingsSymbol,\n  CalendarCurrentDataSymbol,\n} from '@/utils/symbols';\nimport { calendarService } from '@/services';\nimport { calendarHelper, dateHelper } from '@/helpers';\nimport { AntNotificationType } from '@/types/ant-design.type';\nimport { FORMAT_EVENT, UNAUTHORIZED_ERROR } from '@/utils/constants';\nimport { EventFrequency, Permission } from '@/utils/enums/global.enum';\nimport { eventApiDateToEventZone } from '@/helpers/date.helper';\nimport { FetchEventsMap } from '@/types/services.type';\n\nexport default defineComponent({\n  components: {\n    CalendarToolbar,\n    CalendarEventForm,\n    CalendarForm,\n    CalendarModalEventInfo,\n  },\n  setup() {\n    let calendar = {} as Calendar;\n    provide(CalendarInstanceSymbol, calendar);\n\n    const { isModeFilter, getFilteredEvents, globalFilter } = useModeFilter();\n\n    const {\n      getRecurrenceChildren,\n      getChildrenDataToUpdate,\n      getEventFromSource,\n      splitExdate,\n      regenerateByweekday,\n      renewLocalEvent,\n    } = useCalendarEvents();\n\n    const {\n      isSourceDisplayed,\n      getSourceById,\n      sourcesToRender,\n      isCalendarOwn,\n      addNewEventInSource,\n      deleteEventInSource,\n    } = useCalendarSources();\n\n    const {\n      sources,\n      permission,\n      setCalendarInstance,\n      setDataOfCurrentEvent,\n      setActiveDateRange,\n      setCurrentCalendarId,\n      setOldRecurringPosition,\n      addNewCalendarSource,\n      getCurrentFullEvent,\n      getEventDate,\n      getActiveDatesRange,\n      selectedSource,\n      defaultSource,\n      isRecurringEvent,\n      isChildEvent,\n      currentData,\n      currentEventApi,\n    } = useCalendar();\n\n    const { isLoading, setLoading, setAwaitLoading, awaitLoading } = useGlobalProps();\n\n    const refFormEvent = ref();\n    const eventToForm = ref<CalendarEvent | null>(null);\n\n    const state = reactive({\n      recurrenceLabel: '',\n      eventDateLabel: '',\n      newEventRange: { start: '', end: '' },\n    });\n\n    const settings: CalendarSettings = reactive({\n      timezone: moment.tz.guess(),\n    });\n\n    const { time, setTimezone, timezoneLabel } = useTime(settings.timezone);\n\n    const modal = reactive({\n      visible: false,\n      type: 'create' as 'create' | 'edit',\n      calendar: false,\n      /** Modal information visible */\n      info: false,\n      recurrence: false,\n      moveRecurrence: false,\n    });\n\n    const editRecurringType = ref<EditRecurringType>('current');\n    /** Know where the current action is running from **/\n    const eventAction = ref<'modal' | 'dragAndDrop' | 'resize'>('modal');\n\n    const showRecurrenceSelect = computed(() => {\n      if (isChildEvent.value) {\n        return false;\n      }\n\n      if (modal.type === 'create' || !isRecurringEvent.value) {\n        return true;\n      }\n\n      return editRecurringType.value !== 'current';\n    });\n\n    const modalActionTitle = computed(() => {\n      return `${capitalize(modal.type)} ${isRecurringEvent.value ? 'Recurring' : ''} Event`;\n    });\n\n    const formatEventDates = (oldTimezone?: string) => {\n      const events = calendar.getEvents();\n\n      for (const event of events) {\n        /* Without old timezone and calendar timezone is equals to calendar's */\n        const keepCurrentDate = !oldTimezone && settings.timezone === event.extendedProps.timezone;\n\n        if (event.allDay || keepCurrentDate) {\n          continue;\n        }\n\n        // Convert event date to old timezone selected or a his own's\n        const start = moment.tz(event.startStr, oldTimezone || event.extendedProps.timezone);\n        const end = moment.tz(event.endStr, oldTimezone || event.extendedProps.timezone);\n\n        // Convert date to new timezone selected and update event date\n        event.setStart(time(start).format(FORMAT_EVENT));\n        event.setEnd(time(end).format(FORMAT_EVENT));\n      }\n    };\n\n    const getVisibleRange = (calendars: FetchEventsMap[]) => {\n      let foreverEvent = false;\n      const events = calendars.map(calendar => calendar.events).flat();\n\n      const range = events.reduce(\n        (range, current) => {\n          const start = current.start || current.rrule!.dtstart!;\n          const end = current.end || current.rrule!.until!;\n\n          if (!range.start && !range.end) {\n            if (events.length === 1) {\n              foreverEvent = !end && !foreverEvent;\n            }\n\n            return { start, end };\n          }\n\n          if (!end && !foreverEvent) {\n            foreverEvent = true;\n          }\n\n          const temp: any = {};\n\n          if (new Date(start) < new Date(range.start)) {\n            temp.start = start;\n          }\n\n          if (end && range.end && new Date(end) > new Date(range.end)) {\n            temp.end = end;\n          }\n\n          return { ...range, ...temp };\n        },\n        { start: '', end: '' },\n      );\n\n      if (foreverEvent) {\n        range.end = moment(range.end || new Date())\n          .add(13, 'months')\n          .toISOString();\n      }\n\n      range.start = moment(range.start).subtract(10, 'days').toISOString();\n      range.end = moment(range.end).add(10, 'days').toISOString();\n\n      return range;\n    };\n\n    const fetchEvents = async () => {\n      try {\n        let results: FetchEventsMap[];\n        const isFilter = isModeFilter.value && calendar.view.type === 'filter';\n        let filterFrom: 'backend' | 'local' = 'backend';\n\n        if (isFilter) {\n          calendar.removeAllEvents();\n\n          const { from, sourceEvents } = await getFilteredEvents(sources.value);\n          filterFrom = from as 'backend' | 'local';\n\n          const visibleRange = getVisibleRange(sourceEvents);\n          calendar.setOption('visibleRange', visibleRange);\n\n          results = sourceEvents;\n        } else {\n          const { start, end } = getActiveDatesRange();\n\n          results = await calendarService.getEvents({ start, end }, globalFilter.value);\n        }\n\n        calendar.batchRendering(() => {\n          for (const result of results) {\n            const index = sources.value.findIndex(source => source.id === result.id);\n\n            if (index === -1) {\n              throw new Error(`Calendar with the ID \"${result.id}\" was not found`);\n            }\n\n            const source = sources.value[index];\n\n            if (!isFilter || filterFrom === 'backend') {\n              source.events = result.events;\n            }\n\n            if (source.show || isFilter) {\n              const calendarSource = calendar.getEventSourceById(result.id)!;\n\n              if (!calendarSource) {\n                calendar.addEventSource({ ...source, events: result.fullCalendarEvents } as any);\n              } else {\n                calendarSource.remove();\n                calendar.addEventSource({ ...source, events: result.fullCalendarEvents } as any);\n              }\n            }\n          }\n\n          formatEventDates();\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    watch(awaitLoading, (val, oldVal) => {\n      // Stop loading\n      if (!val && oldVal) {\n        setLoading(false);\n      }\n    });\n\n    watch(\n      () => currentData.activeDateRange,\n      activeDateRange => {\n        const hasActiveDateRange = 'start' in activeDateRange;\n\n        hasActiveDateRange && fetchEvents();\n      },\n    );\n\n    const showAlert = (message: string, type: AntNotificationType = 'success') => {\n      notification[type]({\n        message: message,\n        placement: 'bottomRight',\n      });\n    };\n\n    // Update timezone\n    watch(\n      () => settings.timezone,\n      (timezone, oldTimezone) => {\n        setTimezone(timezone);\n        calendar.setOption('timeZone', timezone);\n\n        calendar.batchRendering(() => formatEventDates(oldTimezone));\n\n        showAlert(`Timezone changed to ${timezoneLabel.value}`, 'info');\n      },\n    );\n\n    /** Hide item \"Current\" */\n    const hideCurrentItem = computed(() => {\n      if (!isRecurringEvent.value) {\n        return false;\n      }\n\n      const currentEvent = getCurrentFullEvent();\n\n      // Forever event\n      if (!currentEvent.rrule!.until) {\n        return false;\n      }\n\n      let until = '';\n\n      if (currentEvent.allDay) {\n        until = isoDateWithoutTime(currentEvent.rrule!.until);\n      } else {\n        until = calendarHelper.subtractDate({\n          date: currentEvent.rrule!.until,\n          duration: currentEvent.duration!,\n          allDay: currentEvent.allDay,\n        });\n      }\n\n      if (moment.utc(until).isSame(moment.utc(currentEvent.rrule!.dtstart))) {\n        return true;\n      }\n\n      if (!isUndefined(currentEvent.rrule!.count) && currentEvent.rrule!.count === 1) {\n        return true;\n      }\n\n      const dates = calendarHelper.getRuleMatches({ recurringEvent: currentEvent });\n      return dates.length === 1;\n    });\n\n    const generateDateRange = ({ date, rrule, field }: GenerateDateRangeParams) => {\n      // Base range\n      const between = {\n        start: date,\n        end: date,\n      };\n\n      // Get method according field\n      const methods = {\n        start: 'subtract',\n        end: 'add',\n      };\n\n      // Get invert field\n      const invertField = {\n        start: 'end',\n        end: 'start',\n      };\n\n      // Get moment unit according to event frequency\n      const frequency: any = {\n        [EventFrequency['Daily']]: 'days',\n        [EventFrequency['Weekly']]: 'weeks',\n        [EventFrequency['Monthly']]: 'months',\n        [EventFrequency['Yearly']]: 'years',\n      };\n\n      // Example: field = start\n\n      // end\n      const invert = invertField[field] as 'start' | 'end';\n      // subtract\n      const method = methods[field] as 'add' | 'subtract';\n\n      // between.start\n      between[field] = moment\n        // between.end\n        .utc(between[invert])\n        // subtract                   // days | weeks | mponths | years\n        [method](rrule!.interval * 2, frequency[rrule!.freq])\n        .toISOString();\n\n      return between;\n    };\n\n    /** Hide item \"This and following events\" **/\n    const hideFollowingCheckItem = computed(() => {\n      if (!currentData || !currentData.oldRecurringPosition || !isRecurringEvent.value) {\n        return false;\n      }\n\n      const currentEvent = getCurrentFullEvent();\n      const range = { ...currentData.oldRecurringPosition! };\n\n      const rrule = currentEvent.rrule!;\n      const recurrenceStart = moment.utc(rrule!.dtstart);\n\n      // Current selected event date is the first\n      if (recurrenceStart.isSame(range.start)) {\n        return true;\n      }\n\n      let betweenDates = generateDateRange({\n        date: recurrenceStart.toISOString(),\n        rrule,\n        field: 'end',\n      });\n\n      // Start: deep validation\n      if (calendarHelper.isFirstEventOfRecurrence(range.start, betweenDates, currentEvent)) {\n        return true;\n      }\n\n      // Wihout finish date, skip\n      if (!rrule!.until) {\n        return false;\n      }\n\n      if (currentData.event!.allDay) {\n        range.end = time(range.end).subtract(1, 'days').toISOString();\n      }\n\n      // Current selected event date is the end\n      if (moment.utc(rrule!.until).isSame(range.end)) {\n        return true;\n      }\n\n      betweenDates = generateDateRange({\n        date: moment.utc(rrule!.until).toISOString(),\n        rrule,\n        field: 'start',\n      });\n\n      // End: deep validation\n      return calendarHelper.isLastEventOfRecurrence(range.start, betweenDates, currentEvent);\n    });\n\n    // ----- Calendar events -----\n    const onEventClick = (e: EventApi) => {\n      setDataOfCurrentEvent(e);\n      eventAction.value = 'modal';\n\n      setOldRecurringPosition(getEventOldPosition(e));\n      modal.info = true;\n\n      // Select item according disponibility\n      nextTick(() => {\n        if (isRecurringEvent.value) {\n          if (!hideCurrentItem.value) {\n            editRecurringType.value = 'current';\n          } else if (!hideFollowingCheckItem.value) {\n            editRecurringType.value = 'following';\n          } else {\n            editRecurringType.value = 'all';\n          }\n        }\n      });\n    };\n\n    const addEventToView = (event: CalendarEvent) => {\n      // If the source is displayed\n      if (isSourceDisplayed(event.calendarId)) {\n        // Add, doesn't exists\n        calendar.addEvent(event as any, event.calendarId);\n      }\n    };\n\n    const updateEventsTimeInView = (events: EventApi[]) => {\n      events.forEach(event => {\n        // Convert event date to old timezone selected or a his own's\n        const start = moment.tz(event.startStr, event.extendedProps.timezone);\n\n        const end = moment.tz(event.endStr, event.extendedProps.timezone);\n\n        // Convert date to new timezone selected and update event date\n        event.setStart(time(start).format(FORMAT_EVENT));\n        event.setEnd(time(end).format(FORMAT_EVENT));\n      });\n    };\n\n    const refreshEventsInView = (...events: CalendarEvent[]) => {\n      calendar.batchRendering(() => {\n        events.forEach(event => {\n          const eventUI = calendar.getEventById(event.id);\n\n          // Exists, remove and replace\n          !!eventUI && eventUI.remove();\n          addEventToView(event);\n        });\n\n        // Update time\n        const eventsUI = calendar.getEvents().filter(event => {\n          const needUpdate = events.some(item => item.id === event.id);\n          const isSameTimezone = event.extendedProps.timezone === settings.timezone;\n\n          return !event.allDay && !isSameTimezone && needUpdate;\n        });\n\n        updateEventsTimeInView(eventsUI);\n      });\n    };\n\n    /** Get previous event end date in the current recurrence according to event selected */\n    const getPrevEventEndDate = () => {\n      const activeRange = getActiveDatesRange();\n      const dates = currentData.oldRecurringPosition!;\n\n      const currentEvent = getCurrentFullEvent();\n\n      const between = {\n        start: activeRange.start,\n        // Set invalid date to get the last allowed date in recurrence\n        end: moment.utc(dates.start).subtract(1, 'days').toISOString(),\n      };\n\n      // Subtract time according to event interval and frequency\n      switch (currentEvent.rrule!.freq) {\n        case 'DAILY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'days')\n            .toISOString();\n          break;\n\n        case 'WEEKLY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'weeks')\n            .toISOString();\n          break;\n\n        case 'MONTHLY':\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'months')\n            .toISOString();\n          break;\n\n        default:\n          between.start = moment\n            .utc(between.end)\n            .subtract(currentEvent.rrule!.interval * 2, 'years')\n            .toISOString();\n          break;\n      }\n\n      const matches = calendarHelper.getRuleMatches({\n        recurringEvent: currentData!.event!,\n        betweenDates: between,\n        exclude: false,\n      });\n\n      let until = matches[matches.length - 1];\n\n      if (currentData.event!.allDay) {\n        until = isoDateWithoutTime(until);\n      } else {\n        until = calendarHelper.updateDateFromDuration({\n          date: until,\n          duration: currentData.event!.duration!,\n          allDay: false,\n        });\n      }\n\n      return until;\n    };\n\n    const getCalendarsToRefeatch = (eventCalendarId: string) => {\n      const calendarIds = [currentData.event.calendarId!];\n      let oldCalendarId: string | undefined = undefined;\n\n      // Move event to another source\n      if (!isCurrentCalendarId(eventCalendarId)) {\n        calendarIds.push(eventCalendarId);\n\n        oldCalendarId = currentData.event.calendarId!;\n      }\n\n      return { calendarIds, oldCalendarId };\n    };\n\n    /** Cut recurrence via modal or drag and drop */\n    const cutRecurrence = async (data?: CalendarEvent) => {\n      const isEditViaModal = !!data;\n      const currentEvent = removeObjectProps<CalendarEvent>(\n        getCurrentFullEvent(),\n        'createdBy',\n        'calendarContext',\n      );\n      const newEvent =\n        data || removeObjectProps(getCurrentFullEvent(), 'id', 'createdBy', 'calendarContext')!;\n\n      const prevEventEnd = getPrevEventEndDate();\n      let newCount = undefined as undefined | number;\n\n      let { until } = { ...currentEvent.rrule };\n      currentEvent.rrule!.until = prevEventEnd;\n\n      // Current event ends by \"count\" field, recalc\n      if (!isUndefined(currentEvent.rrule!.count)) {\n        const dates = calendarHelper.getRuleMatches({\n          recurringEvent: {\n            ...currentEvent,\n            rrule: { ...currentEvent.rrule!, count: undefined },\n          },\n          exclude: false,\n        });\n\n        newCount = currentEvent.rrule!.count! - dates.length;\n        // Assing new \"count\" to old current recurrence\n        currentEvent.rrule!.count = dates.length;\n      }\n\n      const currentEventStartDate = eventApiDateToEventZone(\n        currentEventApi.value.startStr,\n        newEvent.timezone,\n      );\n\n      // Distance between old and new position\n      const distance = calendarHelper.generateEventDuration(\n        currentData.oldRecurringPosition!.start,\n        currentEventStartDate,\n      );\n\n      let splitDate = '';\n\n      if (!currentEvent.allDay) {\n        splitDate = calendarHelper.subtractDate({\n          date: prevEventEnd,\n          duration: currentEvent.duration!,\n          allDay: false,\n        });\n      } else {\n        splitDate = moment.utc(prevEventEnd).toISOString();\n      }\n\n      // manage exdate property\n      if (isArrayAndHasItems(currentEvent.exdate)) {\n        const exdate = splitExdate(currentEvent.exdate!, splitDate);\n\n        currentEvent.exdate = exdate.current;\n        newEvent.exdate = exdate.new;\n      }\n\n      const isEventMoved = distance.daysDiff !== 0;\n      const hasByweekday = isArrayAndHasItems(currentEvent.rrule!.byweekday);\n\n      // Date changes, update \"byweekday\"\n      if (!isEditViaModal && isEventMoved && hasByweekday) {\n        newEvent.rrule!.byweekday = regenerateByweekday({\n          currentByweekday: newEvent.rrule!.byweekday! as Byweekday[],\n          daysDiff: distance.daysDiff,\n          freq: newEvent.rrule!.freq,\n          eventSelectedDate: currentEventApi.value.startStr,\n        });\n      }\n\n      // Via mouse actions\n      if (!isEditViaModal) {\n        newEvent.rrule!.dtstart = newEvent.allDay\n          ? currentEventApi.value.startStr\n          : time(currentEventApi.value.startStr).toISOString();\n\n        // Has \"count\" field\n        if (newCount) {\n          newEvent.rrule!.count = newCount;\n          const dates = calendarHelper.getRuleMatches({ recurringEvent: newEvent, exclude: false });\n\n          let untilByCount = calendarHelper.formatEventDayByAllDay(\n            dates[dates.length - 1],\n            newEvent.allDay,\n          );\n\n          untilByCount = calendarHelper.updateDateFromDuration({\n            date: untilByCount,\n            duration: newEvent.duration!,\n            allDay: newEvent.allDay,\n          });\n\n          // Assign and format \"until\", required for backend filtering\n          newEvent.rrule!.until = untilByCount;\n        } else if (until) {\n          // Finish with \"until\" field, update according to moved days\n          until = calendarHelper.updateDateFromDuration({\n            date: until,\n            duration: removeObjectProps(distance, 'daysDiff'),\n            allDay: newEvent.allDay,\n          });\n\n          newEvent.rrule!.until = calendarHelper.formatEventDayByAllDay(until, newEvent.allDay);\n        }\n      }\n\n      let childrenToUpdate = [] as UpdateEvent[];\n      let children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n\n      // Children to new recurrence\n      if (!isArrayEmpty(children)) {\n        // children = children.filter(child => moment(child.start).isSameOrAfter(splitDate));\n        children = children.filter(child => moment.utc(child.start!).isAfter(splitDate));\n      }\n\n      // Data to update of children\n      if (isEditViaModal && !isArrayEmpty(children)) {\n        // Manage children\n        childrenToUpdate = getChildrenDataToUpdate({ currentEvent, newEvent, children });\n      }\n\n      try {\n        newEvent.createdBy && delete (newEvent as any).createdBy;\n\n        const [[currentEventBackend], newEventBackend] = await Promise.all([\n          // Update current recurrence\n          calendarService.updateEvents({\n            filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n            newData: getCurrentEventChanges(currentEvent),\n          }),\n          // Create new recurrence\n          calendarService.createEvent(newEvent),\n        ]);\n\n        const eventsToLocalUpdate = [currentEventBackend.localEvent];\n\n        const fullCalendarEvents = [\n          currentEventBackend.fullCalendarEvent,\n          newEventBackend.fullCalendarEvent,\n        ];\n\n        // Update children events\n        if (!isArrayEmpty(children)) {\n          // Add new \"parentId\" to generated data for update (via modal)\n          if (!isArrayEmpty(childrenToUpdate)) {\n            childrenToUpdate = childrenToUpdate.map(child => ({\n              ...child,\n              newData: { ...child.newData, parentId: newEventBackend.localEvent.id },\n            }));\n          } else {\n            // Generate data for update (via modal (without apply changes) or drag and dropd)\n            childrenToUpdate = children.map(child => ({\n              filter: { id: child.id, calendarId: child.calendarId },\n              newData: { parentId: newEventBackend.localEvent.id },\n            }));\n          }\n\n          const childrenBackend = await calendarService.updateEvents(...childrenToUpdate);\n\n          childrenBackend.forEach(item => {\n            eventsToLocalUpdate.push(item.localEvent);\n            fullCalendarEvents.push(item.fullCalendarEvent);\n          });\n        }\n\n        const { oldCalendarId } = getCalendarsToRefeatch(newEventBackend.localEvent.calendarId);\n\n        // Update events locally\n        eventsToLocalUpdate.forEach(eventToUpdate => renewLocalEvent(eventToUpdate, oldCalendarId));\n        // Add new recurrence\n        // addLocalEvent(newEventBackend.localEvent);\n        addNewEventInSource(newEventBackend.localEvent);\n\n        if (!isSourceDisplayed(newEventBackend.localEvent.calendarId)) {\n          await onChangeCalendarVisibility({\n            calendarId: newEventBackend.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        refreshEventsInView(...fullCalendarEvents);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const isCurrentCalendarId = (calendarId: string) => {\n      if (currentData.event.calendarId === undefined) {\n        return false;\n      }\n\n      return currentData.event.calendarId === calendarId;\n    };\n\n    const manageUnauthorizedError = (errors: any[]) => {\n      const hasUnauthorizedError = errors.some(error => {\n        return error.message && error.message.includes(UNAUTHORIZED_ERROR);\n      });\n\n      if (hasUnauthorizedError) {\n        showAlert(`You don't have permission for this action`, 'warning');\n      }\n\n      return { hasUnauthorizedError };\n    };\n\n    const updateVisibleRangeOnFilterView = async () => {\n      // update filter view range\n      if (isModeFilter.value && calendar.view.type === 'filter') {\n        const { sourceEvents } = await getFilteredEvents(sources.value);\n\n        const visibleRange = getVisibleRange(sourceEvents);\n        calendar.setOption('visibleRange', visibleRange);\n      }\n    };\n\n    const writeEvent = async () => {\n      try {\n        await refFormEvent.value.validateForm();\n        const _event = refFormEvent.value.getEvent();\n\n        setAwaitLoading(true);\n        if (modal.type === 'edit') {\n          return await handleUpdateEventFromModal(_event);\n        }\n\n        const newEvent = await calendarService.createEvent(_event);\n\n        if (isSourceDisplayed(newEvent.localEvent.calendarId)) {\n          // addLocalEvent(newEvent.localEvent);\n          addNewEventInSource(newEvent.localEvent);\n\n          // update filter view range\n          updateVisibleRangeOnFilterView();\n\n          if (newEvent.localEvent.allDay) {\n            addEventToView(newEvent.fullCalendarEvent);\n          } else {\n            // Add and update the time if is necessary (timezone not equals to global)\n            refreshEventsInView(newEvent.fullCalendarEvent);\n          }\n        } else {\n          // Hidden source, display and fetch events\n          await onChangeCalendarVisibility({\n            calendarId: newEvent.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        if (isModeFilter.value && calendar.view.type === 'filter') {\n          fetchEvents();\n        }\n\n        showAlert('Event created!');\n        modal.visible = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        Array.isArray(error) && manageUnauthorizedError(error);\n      } finally {\n        setAwaitLoading(false);\n      }\n    };\n\n    /** Select date (or range) to create new event */\n    const onSelect = (args: DateSelectArg) => {\n      eventAction.value = 'modal';\n      setCurrentCalendarId(defaultSource.value.id);\n      state.newEventRange = { start: args.startStr, end: args.endStr };\n\n      modal.type = 'create';\n      modal.visible = true;\n    };\n\n    /** Click on custom button \"New Event\" */\n    const onNewEventFromCustomButton = () => {\n      modal.type = 'create';\n      const today = moment();\n\n      state.newEventRange = {\n        start: today.toISOString(),\n        end: today.clone().add(1, 'days').toISOString(),\n      };\n\n      modal.visible = true;\n      refFormEvent.value && refFormEvent.value.clearValidate();\n    };\n\n    const onConfirmEditEvent = () => {\n      eventToForm.value = getCurrentFullEvent();\n\n      // Cut recurrence\n      if (isRecurringEvent.value && editRecurringType.value === 'following') {\n        const temptEvent = getCurrentFullEvent();\n\n        if (typeof temptEvent.rrule!.count !== 'undefined') {\n          const end = getPrevEventEndDate();\n\n          temptEvent.rrule!.until = end;\n          const dates = calendarHelper.getRuleDates({\n            ...temptEvent,\n            rrule: { ...temptEvent.rrule!, count: undefined },\n          });\n\n          const count = temptEvent.rrule!.count - dates.length;\n\n          eventToForm.value.rrule!.count = count;\n          eventToForm.value.rrule!.dtstart = currentEventApi.value.startStr;\n        }\n      }\n\n      modal.info = false;\n      modal.type = 'edit';\n      modal.visible = true;\n    };\n\n    /** Hook of create/edit modal */\n    const onAfterCloseModal = () => {\n      editRecurringType.value = 'current';\n    };\n\n    const onClickDeleteEvent = () => {\n      editRecurringType.value = 'current';\n    };\n\n    /** Remove normal event */\n    const deleteEvent = async () => {\n      const { id, calendarId } = getCurrentFullEvent();\n\n      try {\n        // Remove in backend\n        await calendarService.deleteEvents({\n          field: 'id',\n          value: id,\n          calendarId,\n        });\n\n        // Remove in local data\n        // deleteLocalEvent(id, calendarId);\n        deleteEventInSource(id, calendarId);\n        // Remove from view\n        calendar.getEventById(id)?.remove();\n\n        showAlert('Event removed!');\n        modal.info = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteEventFromRecurrence = async () => {\n      const currentEvent = getCurrentFullEvent();\n      const { start } = currentData.oldRecurringPosition!;\n\n      const exdate = [...(currentEvent.exdate || []), start];\n\n      try {\n        const [updated] = await calendarService.updateEvents({\n          filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n          newData: { exdate },\n        });\n\n        renewLocalEvent(updated.localEvent);\n        refreshEventsInView(updated.fullCalendarEvent);\n\n        showAlert('Event updated!');\n\n        modal.info = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteThisAndFollowingEvents = async () => {\n      const currentEvent = getCurrentFullEvent();\n      const end = getPrevEventEndDate();\n\n      currentEvent.rrule!.until = end;\n\n      // Current event ends by \"count\" field, recalc\n      if (!isUndefined(currentEvent.rrule!.count)) {\n        const dates = calendarHelper.getRuleMatches({\n          recurringEvent: { ...currentEvent, rrule: { ...currentEvent.rrule!, count: undefined } },\n          exclude: false,\n        });\n\n        // Assing new \"count\" to old current recurrence\n        currentEvent.rrule!.count = dates.length;\n      }\n\n      let splitDate = '';\n\n      if (!currentEvent.allDay) {\n        splitDate = calendarHelper.subtractDate({\n          date: end,\n          duration: currentEvent.duration!,\n          allDay: false,\n        });\n      } else {\n        splitDate = moment.utc(end).toISOString();\n      }\n\n      // Manage \"exdate\" property\n      if (isArrayAndHasItems(currentEvent.exdate!)) {\n        const ex = splitExdate(currentEvent.exdate!, splitDate);\n\n        currentEvent.exdate = ex.current;\n      }\n\n      let children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n\n      // Get children to delete\n      if (!isArrayEmpty(children)) {\n        children = children.filter(child => moment.utc(child.start!).isAfter(splitDate));\n      }\n\n      try {\n        const promises: [Promise<ReturnCalendarEvent[]>, Promise<CalendarEvent[]>] = [] as any;\n\n        promises.push(\n          calendarService.updateEvents({\n            filter: { id: currentEvent.id, calendarId: currentEvent.calendarId },\n            newData: { exdate: currentEvent.exdate!, rrule: currentEvent.rrule! },\n          }),\n        );\n\n        // Remove children\n        if (!isArrayEmpty(children)) {\n          // Add request\n          promises.push(\n            // Generate data for children deleting\n            calendarService.deleteEvents(\n              ...children.map(child => {\n                return {\n                  field: 'id',\n                  value: child.id,\n                  calendarId: child.calendarId,\n                } as FilterDeleteEvent;\n              }),\n            ),\n          );\n        }\n\n        const [[updated], childrenDeleted] = await Promise.all(promises);\n\n        renewLocalEvent(updated.localEvent);\n        refreshEventsInView(updated.fullCalendarEvent);\n\n        if (childrenDeleted) {\n          const { source } = getSourceById(currentEvent.calendarId);\n          // Remove events of local and UI\n          calendar.batchRendering(() => {\n            childrenDeleted.forEach(deletedEvent => {\n              // UI\n              calendar.getEventById(deletedEvent.id)?.remove();\n              // Local\n              deleteEventInSource(deletedEvent.id, source.id);\n            });\n          });\n        }\n\n        modal.info = false;\n        showAlert('Event removed!');\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const deleteAllEvents = async () => {\n      const event = getCurrentFullEvent();\n\n      const toDelete: FilterDeleteEvent[] = [\n        { field: 'id', value: event.id, calendarId: event.calendarId },\n      ];\n\n      const children = getRecurrenceChildren(event.calendarId, event.id);\n\n      if (children.length) {\n        // Remove children\n        toDelete.unshift({\n          field: 'parentId',\n          value: event.id,\n          calendarId: event.calendarId,\n        });\n      }\n\n      try {\n        const { source } = getSourceById(event.calendarId);\n        const deletedEvents = await calendarService.deleteEvents(...toDelete);\n\n        // Remove events of local and UI\n        calendar.batchRendering(() => {\n          deletedEvents.forEach(deletedEvent => {\n            // UI\n            calendar.getEventById(deletedEvent.id)?.remove();\n            // Local\n            deleteEventInSource(deletedEvent.id, source.id);\n          });\n        });\n\n        modal.info = false;\n        showAlert(`${children.length ? 'Events' : 'Event'} removed!`);\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const handleDeleteEvents = async () => {\n      // Remove normal event\n      if (!isRecurringEvent.value) {\n        return deleteEvent();\n      }\n\n      // Remove only event selected of recurrence\n      if (editRecurringType.value === 'current') {\n        return deleteEventFromRecurrence();\n      }\n\n      // Remove this and following events\n      switch (editRecurringType.value) {\n        case 'following':\n          await deleteThisAndFollowingEvents();\n          break;\n\n        default:\n          // Remove all events\n          await deleteAllEvents();\n          break;\n      }\n    };\n\n    /** Split event from recurrence via modal or drag and drop */\n    const splitEventFromRecurrence = async (data?: CalendarEvent) => {\n      // Split from mouse events, drag and drop\n      if (!data) {\n        data = removeObjectProps<CalendarEvent>(\n          getCurrentFullEvent(),\n          'id',\n          'duration',\n          'rrule',\n          'exdate',\n          'createdBy',\n          'calendarContext',\n        );\n\n        /** Current dates range */\n        const { start, end } = getEventDate();\n\n        data.start = start;\n        data.end = end;\n      }\n\n      const parent = cloneObject(currentData.event);\n      const oldPosition = time(currentData.oldRecurringPosition!.start).toISOString();\n\n      // Exclude from parent\n      parent.exdate = [...parent.exdate!, oldPosition];\n\n      const { oldCalendarId } = getCalendarsToRefeatch(data.calendarId);\n\n      if (!oldCalendarId) {\n        // Assign parent\n        data.parentId = parent.id;\n      }\n\n      try {\n        // Update recurring event and create a new child in backend.\n        const [[parentUpdated], newChildEvent] = await Promise.all([\n          calendarService.updateEvents({\n            filter: { id: parent.id, calendarId: parent.calendarId },\n            newData: { exdate: parent.exdate },\n          }),\n          calendarService.createEvent(data),\n        ]);\n\n        addNewEventInSource(newChildEvent.localEvent);\n        renewLocalEvent(parentUpdated.localEvent, oldCalendarId);\n        refreshEventsInView(parentUpdated.fullCalendarEvent);\n\n        if (isSourceDisplayed(newChildEvent.localEvent.calendarId)) {\n          refreshEventsInView(newChildEvent.fullCalendarEvent);\n        } else {\n          // Hidden source, display and fetch events\n          await onChangeCalendarVisibility({\n            calendarId: newChildEvent.localEvent.calendarId,\n            checked: true,\n          });\n        }\n\n        showAlert('Event updated!');\n\n        modal.visible = false;\n\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const getCurrentEventChanges = (newEventData: CalendarEvent) => {\n      let compareData = cloneObject(newEventData);\n\n      const currentEvent = removeObjectProps<CalendarEvent>(\n        getCurrentFullEvent(),\n        'createdBy',\n        'calendarContext',\n      );\n\n      if (compareData.description === null && currentEvent.description === undefined) {\n        (currentEvent as any).description = null;\n      }\n\n      // Quit color\n      if (currentEvent.color && isUndefined(compareData.color)) {\n        (compareData.color as any) = null;\n      }\n\n      if (isUndefined(currentEvent.location)) {\n        (currentEvent.location as any) = null;\n      }\n\n      if (isUndefined(currentEvent.attendees)) {\n        (currentEvent.attendees as any) = null;\n      }\n\n      return getObjChangedProps<CalendarEvent>(currentEvent, compareData);\n    };\n\n    /** Update events from modal */\n    const handleUpdateEventFromModal = async (data: CalendarEvent) => {\n      // Edit normal event\n      if (!isRecurringEvent.value) {\n        try {\n          let oldCalendarId = undefined as string | undefined;\n\n          if (data.calendarId !== currentData.event.calendarId) {\n            oldCalendarId = currentData.event.calendarId!;\n\n            data.parentId && ((data as any).parentId = null);\n          }\n\n          const changes = getCurrentEventChanges(data);\n\n          if (isObjectEmpty(changes)) {\n            return showAlert('Please apply any change to current event before', 'warning');\n          }\n\n          const [newData] = await calendarService.updateEvents({\n            filter: { id: data.id, calendarId: currentData.event.calendarId },\n            newData: changes,\n          });\n\n          if (isSourceDisplayed(newData.localEvent.calendarId)) {\n            renewLocalEvent(newData.localEvent, oldCalendarId);\n\n            // update filter view range\n            updateVisibleRangeOnFilterView();\n\n            refreshEventsInView(newData.fullCalendarEvent);\n          } else {\n            calendar.getEventById(data.id)?.remove();\n            // Hidden source, display and fetch events\n            await onChangeCalendarVisibility({\n              calendarId: newData.localEvent.calendarId,\n              checked: true,\n            });\n          }\n\n          showAlert('Event updated!');\n\n          modal.visible = false;\n        } catch (error: any) {\n          console.error(error);\n\n          manageUnauthorizedError(error);\n        }\n\n        return;\n      }\n\n      // Split event from recurrence\n      if (editRecurringType.value === 'current') {\n        return splitEventFromRecurrence({ ...data });\n      }\n\n      // Cut current recurrence\n      if (editRecurringType.value === 'following') {\n        return cutRecurrence({ ...data });\n      }\n\n      // ------- Update all recurrence ------\n      const currentEvent = getCurrentFullEvent();\n\n      const newData = getCurrentEventChanges(data);\n\n      if (isObjectEmpty(newData)) {\n        return showAlert('Please apply any change to current event before', 'warning');\n      }\n\n      const { oldCalendarId } = getCalendarsToRefeatch(data.calendarId);\n\n      const children = getRecurrenceChildren(currentEvent.calendarId, currentEvent.id);\n      let childrenToUpdate = [] as UpdateEvent[];\n\n      if (isArrayAndHasItems(children)) {\n        childrenToUpdate = getChildrenDataToUpdate({\n          currentEvent,\n          newEvent: data,\n          children,\n        });\n      }\n\n      try {\n        const events = await calendarService.updateEvents(\n          {\n            // Send current calendarId, not new if this is changed\n            filter: { id: data.id, calendarId: currentEvent.calendarId },\n            newData,\n          },\n          ...childrenToUpdate,\n        );\n\n        const fullCalendarEvents: CalendarEvent[] = [];\n\n        events.forEach(event => {\n          renewLocalEvent(event.localEvent, oldCalendarId);\n          fullCalendarEvents.push(event.fullCalendarEvent);\n        });\n\n        // update filter view range\n        updateVisibleRangeOnFilterView();\n\n        refreshEventsInView(...fullCalendarEvents);\n\n        if (!isSourceDisplayed(data.calendarId)) {\n          await onChangeCalendarVisibility({\n            calendarId: data.calendarId,\n            checked: true,\n          });\n        }\n\n        showAlert('Event updated!');\n        modal.visible = false;\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    const updateMonthlyByDay = async () => {\n      const newEvent = getCurrentFullEvent();\n\n      const month = calendarHelper.getRecurrenceNewMonth({\n        dateAbsulute: newEvent.rrule!.dtstart,\n        eventOldPosition: currentData.oldRecurringPosition!.start,\n        eventNewPosition: currentEventApi.value.startStr,\n      });\n\n      let currentStart = currentEventApi.value.startStr;\n\n      if (!newEvent.allDay) {\n        const tmpStart = eventApiDateToEventZone(currentStart, newEvent.timezone);\n\n        currentStart = tmpStart.format(FORMAT_EVENT);\n      }\n\n      const position = dateHelper.getDayPositionOfMonth(currentStart);\n\n      const newDtstart = dateHelper.getDateByPositionInMonth({\n        month,\n        year: new Date(newEvent.rrule!.dtstart).getUTCFullYear(),\n        byweekday: position,\n      });\n\n      // Update \"dtstart\" field\n      if (!newEvent.allDay) {\n        // Add time for to correct formating\n        let temp = `${newDtstart.substr(0, 10)}T${currentStart.split('T')[1]}`;\n\n        newEvent.rrule!.dtstart = time(temp, newEvent.timezone).toISOString();\n      } else {\n        newEvent.rrule!.dtstart = moment.utc(newDtstart).format('YYYY-MM-DD');\n      }\n\n      (newEvent.rrule!.byweekday as any) = [position];\n\n      // Has finish\n      if (!isUndefined(newEvent.rrule!.until)) {\n        // Ends by \"count\" field\n        if (!isUndefined(newEvent.rrule?.count)) {\n          const matches = calendarHelper.getRuleMatches({\n            recurringEvent: newEvent,\n            exclude: false,\n          });\n\n          newEvent.rrule!.until = matches[matches.length - 1];\n\n          if (!newEvent.allDay) {\n            newEvent.rrule!.until = calendarHelper.updateDateFromDuration({\n              date: newEvent.rrule!.until!,\n              duration: newEvent.duration!,\n              allDay: newEvent.allDay,\n            });\n          } else {\n            newEvent.rrule!.until = isoDateWithoutTime(newEvent.rrule!.until);\n          }\n        } else {\n          // Ends by \"until\" field\n          const monthU = calendarHelper.getRecurrenceNewMonth({\n            dateAbsulute: newEvent.rrule!.until!,\n            eventOldPosition: currentData.oldRecurringPosition!.start,\n            eventNewPosition: currentEventApi.value.startStr,\n          });\n\n          const newUntil = dateHelper.getDateByPositionInMonth({\n            month: monthU,\n            year: new Date(newEvent.rrule!.until!).getUTCFullYear(),\n            byweekday: position,\n          });\n\n          // Update \"dtstart\" field\n          if (!newEvent.allDay) {\n            // Add time for to correct formating\n            let temp = `${newUntil.substr(0, 10)}T${newEvent.rrule!.until!.split('T')[1]}`;\n\n            newEvent.rrule!.until = time(temp, newEvent.timezone).toISOString();\n          } else {\n            newEvent.rrule!.until = moment.utc(newUntil).format('YYYY-MM-DD');\n          }\n        }\n      }\n\n      try {\n        const [result] = await calendarService.updateEvents({\n          filter: { id: newEvent.id, calendarId: newEvent.calendarId },\n          newData: { rrule: newEvent.rrule },\n        });\n\n        // Update events locally\n        renewLocalEvent(result.localEvent);\n\n        refreshEventsInView(result.fullCalendarEvent);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      }\n    };\n\n    /** Update recurring event from resizing and drag and drop */\n    const handleUpdateRecurringMouseActions = async () => {\n      try {\n        console.time('WRITE MOUSE');\n        setAwaitLoading(true);\n        // Split one event of the recurrence\n        if (editRecurringType.value === 'current') {\n          await splitEventFromRecurrence();\n          return;\n        }\n\n        if (editRecurringType.value === 'following') {\n          return await cutRecurrence();\n        }\n\n        // ----- Move all recurrence ----\n        const newEvent = removeObjectProps<CalendarEvent>(getCurrentFullEvent(), 'createdBy');\n\n        // Update monthly by day\n        if (newEvent.rrule!.freq === 'MONTHLY' && isArrayAndHasItems(newEvent.rrule!.byweekday)) {\n          return updateMonthlyByDay();\n        }\n\n        // Rest of cases\n\n        const currentEventStartDate = eventApiDateToEventZone(\n          currentEventApi.value.startStr,\n          newEvent.timezone,\n        );\n\n        // Distance between old and new position\n        const distance = calendarHelper.generateEventDuration(\n          currentData.oldRecurringPosition!.start,\n          currentEventStartDate,\n        );\n\n        // New dtstart\n        newEvent.rrule!.dtstart = calendarHelper.updateDateFromDuration({\n          date: newEvent.rrule!.dtstart,\n          duration: removeObjectProps(distance, 'daysDiff'),\n          allDay: newEvent.allDay,\n        });\n\n        // Update \"byweekday\" field\n        if (isArrayAndHasItems(newEvent.rrule!.byweekday!)) {\n          newEvent.rrule!.byweekday = regenerateByweekday({\n            currentByweekday: newEvent.rrule!.byweekday! as Byweekday[],\n            daysDiff: distance.daysDiff,\n            freq: newEvent.rrule!.freq,\n            eventSelectedDate: currentEventApi.value.startStr,\n          });\n        }\n\n        // Recurring event ends by \"count\" field\n        if (!isUndefined(newEvent.rrule!.count)) {\n          const dates = calendarHelper.getRuleMatches({ recurringEvent: newEvent, exclude: false });\n\n          newEvent.rrule!.until = dates[dates.length - 1];\n        } else if (newEvent.rrule!.until) {\n          // Recurring event ends by \"until\" field\n          newEvent.rrule!.until = calendarHelper.updateDateFromDuration({\n            date: newEvent.rrule!.until,\n            duration: removeObjectProps(distance, 'daysDiff'),\n            allDay: newEvent.allDay,\n          });\n        }\n\n        const [result] = await calendarService.updateEvents({\n          filter: { id: newEvent.id, calendarId: newEvent.calendarId },\n          newData: { rrule: newEvent.rrule },\n        });\n\n        // Update events locally\n        renewLocalEvent(result.localEvent);\n\n        refreshEventsInView(result.fullCalendarEvent);\n        showAlert('Event updated!');\n\n        modal.visible = false;\n        modal.moveRecurrence = false;\n        editRecurringType.value = 'current';\n      } catch (error: any) {\n        console.error(error);\n\n        manageUnauthorizedError(error);\n      } finally {\n        setAwaitLoading(false);\n        console.timeEnd('WRITE MOUSE');\n      }\n    };\n\n    const setCurrentActiveRange = () => {\n      const { start, end } = getActiveDatesRange();\n      let areDatesEquals = false;\n\n      if ('start' in currentData.activeDateRange) {\n        const active = currentData.activeDateRange;\n\n        areDatesEquals =\n          time(start).utc().isSame(active.start) && time(end).utc().isSame(active.end);\n      }\n\n      !areDatesEquals && setActiveDateRange({ start, end });\n    };\n\n    const getEventOldPosition = (event: EventApi) => {\n      if (event.allDay) {\n        return {\n          start: calendarHelper.convertOffsetTimeToUTC(event.startStr),\n          end: calendarHelper.convertOffsetTimeToUTC(event.endStr),\n        };\n      }\n\n      const eventTimezone = event.extendedProps.timezone;\n\n      // Event and calendar with the same timezone\n      if (settings.timezone === eventTimezone) {\n        return {\n          start: time(event.startStr, eventTimezone).toISOString(),\n          end: time(event.endStr, eventTimezone).toISOString(),\n        };\n      }\n\n      return {\n        start: time(event.startStr, settings.timezone).tz(eventTimezone).toISOString(),\n        end: time(event.endStr, settings.timezone).tz(eventTimezone).toISOString(),\n      };\n    };\n\n    /** Revert change of event position */\n    let revertEventChangePosition: () => void;\n\n    /** Manage normal event resizing or moving */\n    const manageEventOnResizeOrMoving = async (event: EventApi, oldEvent: EventApi) => {\n      // It indicates that the event is recurring\n      if (isRecurringEvent.value) {\n        setOldRecurringPosition(getEventOldPosition(oldEvent));\n        modal.moveRecurrence = true;\n        return;\n      }\n\n      // Update normal event\n      try {\n        const [{ localEvent }] = await calendarService.updateEvents({\n          filter: { id: event.id, calendarId: event.extendedProps.calendarId },\n          newData: getEventOldPosition(event),\n        });\n\n        renewLocalEvent(localEvent);\n        showAlert('Event updated!');\n      } catch (error: any) {\n        console.error(error);\n\n        const { hasUnauthorizedError } = manageUnauthorizedError(error);\n\n        if (hasUnauthorizedError) {\n          revertEventChangePosition();\n        }\n      }\n    };\n\n    const onEventResizeStart = (args: EventResizeStartArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        return showAlert('This event is read-only for you', 'warning');\n      }\n\n      const { rrule } = getCurrentFullEvent();\n\n      if (rrule) {\n        return showAlert(\"Recurring events can't be resized\", 'warning');\n      }\n    };\n\n    const onEventResize = async (args: EventResizeDoneArg) => {\n      if (permission.value === Permission.Read || currentData.event.rrule) {\n        args.revert();\n        return;\n      }\n\n      revertEventChangePosition = args.revert;\n      eventAction.value = 'resize';\n\n      manageEventOnResizeOrMoving(args.event, args.oldEvent);\n    };\n\n    const onEventDragStart = (args: EventDragStartArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        return showAlert('This event is read-only for you', 'warning');\n      }\n    };\n\n    const onEventDrop = async (args: EventDropArg) => {\n      setDataOfCurrentEvent(args.event);\n\n      if (permission.value === Permission.Read) {\n        args.revert();\n        return;\n      }\n\n      revertEventChangePosition = args.revert;\n      eventAction.value = 'dragAndDrop';\n\n      manageEventOnResizeOrMoving(args.event, args.oldEvent);\n    };\n\n    const restartRecurringEventPosition = () => {\n      revertEventChangePosition();\n\n      editRecurringType.value = 'current';\n      // Remove temp position data\n      setOldRecurringPosition(null);\n    };\n\n    const calendarFormData = reactive({\n      name: undefined as string | undefined,\n      color: undefined as string | undefined,\n    });\n\n    const onCreateNewCalendar = async () => {\n      if (!calendarFormData.name || !calendarFormData.color) {\n        throw new Error(`Name and color fields are required to create new calendar source`);\n      }\n\n      const newCalendar: CalendarCreate = {\n        ...(calendarFormData as any),\n        isDefault: false,\n      };\n\n      try {\n        const source = await calendarService.createCalendar(newCalendar);\n        // Add source to local data and calendar UI\n        addNewCalendarSource(source);\n      } catch (error: any) {\n        console.error(error);\n      }\n\n      calendarFormData.name = undefined;\n      calendarFormData.color = undefined;\n\n      showAlert('New calendar created!');\n      modal.calendar = false;\n    };\n\n    const onCancelNewCalendar = () => {\n      calendarFormData.name = undefined;\n      calendarFormData.color = undefined;\n    };\n\n    /** Update events color */\n    const onChangeSource = ({ source, oldSource }: ChangeSource) => {\n      if (source.color === oldSource.color) {\n        return;\n      }\n\n      const fullSource = getSourceById(source.id).source;\n\n      // Change events color\n      calendar.batchRendering(() => {\n        // Get only events of changed calendar and without color\n        const events = calendar.getEvents().filter(event => {\n          const belongsToCalendar = event.extendedProps.calendarId === source.id;\n\n          if (!belongsToCalendar) {\n            return false;\n          }\n\n          const fullEvent = getEventFromSource(event.id, fullSource).event;\n          return !fullEvent.color;\n          // return belongsToCalendar && !event.backgroundColor && !event.borderColor;\n        });\n\n        events.forEach(event => {\n          event.setProp('backgroundColor', source.color);\n          event.setProp('borderColor', source.color);\n        });\n      });\n    };\n\n    /** Show/hide calendars */\n    const onChangeCalendarVisibility = async ({\n      calendarId,\n      checked,\n    }: ToggleCalendarVisibilityParams) => {\n      const { source } = getSourceById(calendarId);\n\n      // Hide calendar\n      if (!checked) {\n        // Update in database, not default calendar\n        if (defaultSource.value.id !== calendarId) {\n          try {\n            await calendarService.updateCalendarVisibility(source.context, calendarId, checked);\n          } catch (error: any) {\n            console.error(error);\n          }\n        }\n\n        // Hide and clear local data\n        source.show = false;\n        source.events = [];\n\n        let removed = false;\n\n        while (!removed) {\n          calendar.getEventSourceById(calendarId)?.remove();\n\n          removed = !calendar.getEventSourceById(calendarId);\n        }\n\n        return;\n      }\n\n      source.show = true;\n      source.events = [];\n\n      const { activeDateRange } = currentData;\n\n      const promises: Promise<CalendarWriteShowFor | ReturnCalendarEvent[]>[] = [\n        calendarService.getEventsFromOneCalendar(\n          calendarId,\n          source.context,\n          activeDateRange,\n          globalFilter.value,\n        ),\n      ];\n\n      // Update in database, not default\n      if (defaultSource.value.id !== calendarId) {\n        promises.push(\n          calendarService.updateCalendarVisibility(source.context, calendarId, checked),\n        );\n      }\n\n      try {\n        const [events] = await Promise.all(promises);\n\n        if (!isArrayAndHasItems(events)) {\n          return;\n        }\n\n        const [localEvents, fullCalendarEvents] = (events as ReturnCalendarEvent[]).reduce(\n          (acc, item) => {\n            acc[0].push(item.localEvent);\n            acc[1].push(item.fullCalendarEvent);\n\n            return acc;\n          },\n          [[] as CalendarEvent[], [] as CalendarEvent[]],\n        );\n\n        calendar.batchRendering(() => {\n          calendar.addEventSource({ ...source, events: fullCalendarEvents } as any);\n          source.events.push(...localEvents);\n\n          // Events to update\n          const eventsUI = calendar.getEvents().filter(event => {\n            const needUpdate = settings.timezone !== event.extendedProps.timezone;\n\n            return !event.allDay && needUpdate && event.extendedProps.calendarId === calendarId;\n          });\n\n          if (isArrayEmpty(eventsUI)) {\n            return;\n          }\n\n          updateEventsTimeInView(eventsUI);\n        });\n      } catch (error: any) {\n        console.error(error);\n      }\n    };\n\n    /** CalendarToolbar component data and events */\n    const calendarToolbar = reactive({\n      viewTitle: '',\n      viewName: '',\n      /** Create new event/calendar from custom button */\n      onCreate(type: 'event' | 'calendar') {\n        if (type === 'event') {\n          return onNewEventFromCustomButton();\n        }\n\n        modal.calendar = true;\n      },\n      /** Change view from \"CalendarToolbar\" component */\n      onChangeView(view: string) {\n        isModeFilter.value && calendar.removeAllEvents();\n\n        calendar.changeView(view);\n        setCurrentActiveRange();\n      },\n      /** Set custom date in calendar */\n      onGotoDate(date: string) {\n        calendar.gotoDate(date);\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n\n        setCurrentActiveRange();\n      },\n      /** Moves the calendar to the current date */\n      onSetToday() {\n        calendar.today();\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n\n        setCurrentActiveRange();\n      },\n      /** Go to next/prev page */\n      async onChangeViewPage(type: 'next' | 'prev') {\n        calendar[type]();\n\n        setCurrentActiveRange();\n\n        // Update title in \"CalendarToolbar\" component\n        calendarToolbar.viewTitle = calendar.currentData.viewTitle;\n      },\n      onFetchEvents: () => fetchEvents(),\n      onChangeCalendarVisibility,\n      onChangeSource,\n    });\n\n    const onCreated = async () => {\n      provide(CalendarSettingsSymbol, settings);\n    };\n\n    onCreated();\n\n    onMounted(async () => {\n      const el = document.getElementById('calendar') as HTMLDivElement;\n\n      calendar = new Calendar(el, {\n        aspectRatio: 19 / 8,\n        plugins: [\n          rrulePlugin,\n          // momentTimezonePlugin,\n          dayGridPlugin,\n          timeGridPlugin,\n          listGridPlugin,\n          interactionPlugin,\n        ],\n        views: {\n          filter: { type: 'list' },\n        },\n        initialView: isModeFilter.value ? 'filter' : 'dayGridMonth',\n        timeZone: settings.timezone,\n        headerToolbar: false,\n        editable: true,\n        selectable: true,\n        dayMaxEvents: true, // when too many events in a day, show the popover\n        slotDuration: '00:15:00',\n        allDayText: 'All day',\n        slotLabelFormat: {\n          hour: 'numeric',\n          minute: '2-digit',\n          omitZeroMinute: true,\n          meridiem: 'lowercase',\n        },\n        select: onSelect,\n        eventDragStart: onEventDragStart,\n        eventDrop: onEventDrop,\n        eventResize: onEventResize,\n        eventResizeStart: onEventResizeStart,\n        eventClick: args => onEventClick(args.event),\n        viewClassNames({ view }) {\n          calendarToolbar.viewTitle = view.title;\n          calendarToolbar.viewName = view.type;\n\n          return [];\n        },\n      });\n\n      provide(CalendarInstanceSymbol, calendar);\n      provide(CalendarCurrentDataSymbol, currentData);\n      setCalendarInstance(calendar);\n\n      setCurrentActiveRange();\n      calendar.render();\n\n      // Add displayed sources to Fullcalendar\n      const _sources = [...sourcesToRender.value.own, ...sourcesToRender.value.shared];\n\n      calendar.batchRendering(() => {\n        _sources.forEach(_source => {\n          if (_source.show) {\n            calendar.addEventSource({ ..._source, events: [] });\n          }\n        });\n      });\n    });\n\n    return {\n      isEventSelected: computed(() => !!Object.keys(currentData.event as any).length),\n      isLoading,\n      showRecurrenceSelect,\n      isCalendarOwn,\n      sources,\n      settings,\n      currentData,\n      calendarToolbar,\n      calendarFormData,\n      sourcesToRender,\n      writeEvent,\n      onCreateNewCalendar,\n      onCancelNewCalendar,\n      eventAction,\n      eventToForm,\n      editRecurringType,\n      selectedSource,\n      state,\n      onAfterCloseModal,\n      refFormEvent,\n      modal,\n      modalActionTitle,\n      isRecurringEvent,\n      hideCurrentItem,\n      hideFollowingCheckItem,\n      handleDeleteEvents,\n      onConfirmEditEvent,\n      restartRecurringEventPosition,\n      handleUpdateRecurringMouseActions,\n      onClickDeleteEvent,\n    };\n  },\n});\n","import { render } from \"./Calendar.vue?vue&type=template&id=261a596e\"\nimport script from \"./Calendar.vue?vue&type=script&lang=ts\"\nexport * from \"./Calendar.vue?vue&type=script&lang=ts\"\n\nimport \"./Calendar.vue?vue&type=style&index=0&id=261a596e&lang=scss\"\nscript.render = render\n\nexport default script","export enum CalendarHttpHeader {\n  PRIMA_TOKEN = 'x-prima-access-token',\n  CALENDAR_TOKEN = 'authorization',\n}\n\nexport enum PrimaHttpHeader {\n  TOKEN = 'x-access-token',\n}\n","\nimport { defineComponent, onMounted, ref } from 'vue';\nimport Calendar from '@/components/Calendar.vue';\nimport { primaApi } from './api';\nimport { PrimaHttpHeader } from './utils/enums/http.enum';\nimport { useCalendarSources, useGlobalProps, useModeFilter, useUsers } from './composables';\nimport { calendarService, ContactsService } from './services';\nimport { CalendarMode, CalendarOriginalSource } from './types/calendar.type';\nimport { CalendarColors } from './utils/enums/colors.enum';\nimport { ModalBackground } from './types/types';\n\nexport default defineComponent({\n  name: 'App',\n  components: {\n    Calendar,\n  },\n  setup() {\n    const { setWhoami, setUsers } = useUsers();\n    const { isLoading, setAwaitLoading } = useGlobalProps();\n    const { setSources } = useCalendarSources();\n    const {\n      activeModeFilter,\n      setFilterData,\n      setContactData,\n      isModeFilter,\n      contactData,\n      setCasesInCache,\n      setContactInCache,\n    } = useModeFilter();\n\n    const bgModal = ref<ModalBackground>('active');\n\n    /** Params for list events */\n    const showCalendar = ref(false);\n    const hasError = ref(false);\n\n    const hasUserCalendars = (userId: number, calendars: CalendarOriginalSource[]) => {\n      return calendars.some(calendar => calendar.userId === userId);\n    };\n\n    const fetchData = async () => {\n      try {\n        setAwaitLoading(true);\n\n        const { calendars, whoami, users } = await calendarService.getCalendars();\n        setWhoami(whoami);\n        setUsers(users);\n\n        // Create default calendars\n        if (!hasUserCalendars(whoami.id, calendars)) {\n          const [firm, personal, appointments] = await Promise.all([\n            calendarService.createCalendar({\n              name: 'Firm Calendar',\n              isDefault: true,\n              color: CalendarColors.LapisLazuli,\n            }),\n\n            calendarService.createCalendar({\n              name: 'Personal',\n              isDefault: false,\n              color: CalendarColors.Blush,\n            }),\n\n            calendarService.createCalendar({\n              name: 'Appointments',\n              isDefault: false,\n              color: CalendarColors.ForestGreenCrayola,\n            }),\n          ]);\n\n          calendars.unshift(firm);\n          calendars.push(personal, appointments);\n        }\n\n        setSources(calendars, isModeFilter.value);\n        showCalendar.value = true;\n      } catch (error: any) {\n        console.error(error);\n        hasError.value = true;\n      } finally {\n        setAwaitLoading(false);\n      }\n    };\n\n    const getParams = async (url: URL) => {\n      const bgParam = url.searchParams.get('modal-bg') as ModalBackground;\n      const modeParam = url.searchParams.get('mode') as CalendarMode;\n      bgModal.value = !bgParam || !['active', 'blank'].includes(bgParam) ? 'active' : bgParam;\n\n      if (modeParam === 'filter') {\n        let contactId = url.searchParams.get('contact');\n        let caseId = url.searchParams.get('case');\n\n        if (!caseId && !contactId) {\n          throw new Error(`[Filter Mode]: The params \"contact\" or \"case\" are required!`);\n        }\n\n        if (caseId && !contactId) {\n          throw new Error(`[Filter Mode]: The param \"contact\" is required`);\n        }\n\n        if (isNaN(contactId as any) || (caseId && isNaN(caseId as any))) {\n          throw new Error(`[Filter Mode]: The params \"contact\" and \"case\" should be a numbers!`);\n        }\n\n        activeModeFilter(true);\n\n        const field = caseId ? 'caseId' : 'contactId';\n        const value = field === 'caseId' ? caseId : contactId;\n\n        setFilterData(field, Number(value));\n        setContactData({ id: Number(contactId), caseId: Number(caseId) });\n      }\n    };\n\n    const onCreated = async () => {\n      const url = new URL(window.location.href);\n\n      getParams(url);\n\n      const baseURL = url.searchParams.get('base-url');\n      const token = url.searchParams.get('token');\n      // const token = localStorage.getItem('token');\n\n      baseURL && primaApi.setBaseURL(baseURL);\n\n      if (token) {\n        primaApi.setToken({ [PrimaHttpHeader.TOKEN]: token });\n\n        fetchData();\n      } else {\n        hasError.value = true;\n\n        return;\n      }\n\n      if (!isModeFilter.value) {\n        return;\n      }\n\n      const getCases = !!contactData.value!.caseId;\n\n      const [result] = await ContactsService.search(\n        { filter: [{ field: 'id', value: contactData.value!.id }] },\n        getCases,\n      );\n\n      if (!result) {\n        throw new Error(`Contact not found`);\n      }\n\n      const { cases = [], ...contact } = result;\n\n      setCasesInCache(cases);\n      setContactInCache(contact);\n    };\n\n    onMounted(() => {\n      if (bgModal.value === 'blank') {\n        document.body.classList.add('blank-modal');\n      }\n    });\n\n    onCreated();\n\n    return { showCalendar, isLoading, hasError };\n  },\n});\n","import { render } from \"./App.vue?vue&type=template&id=c9853290\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=c9853290&lang=scss\"\nscript.render = render\n\nexport default script","import { App } from 'vue';\n\n// Ant design components\nimport {\n  Button,\n  Input,\n  InputNumber,\n  Menu,\n  Switch,\n  Dropdown,\n  Checkbox,\n  Modal,\n  Radio,\n  Select,\n  Form,\n  Col,\n  Row,\n  Tooltip,\n  TimePicker,\n  DatePicker,\n  Popconfirm,\n  Popover,\n  Card,\n  Tabs,\n  Tag,\n  Result,\n  Spin,\n  List,\n  Avatar,\n} from 'ant-design-vue';\n\nconst components = [\n  Button,\n  Input,\n  InputNumber,\n  Menu,\n  Switch,\n  Dropdown,\n  Checkbox,\n  Modal,\n  Radio,\n  Select,\n  Form,\n  Col,\n  Row,\n  Tooltip,\n  TimePicker,\n  DatePicker,\n  Popconfirm,\n  Popover,\n  Card,\n  Tabs,\n  Tag,\n  Result,\n  Spin,\n  List,\n  Avatar,\n];\n\nexport default (app: App) => {\n  components.forEach(component => app.use(component));\n};\n","import { createApp } from 'vue';\nimport App from './App.vue';\n\nimport registerAntComponents from '@/plugins/ant-design';\n\nconst app = createApp(App);\n\n/** Import globally ant design components */\nregisterAntComponents(app);\n\nimport '@/assets/scss/main.scss';\n\napp.mount('#app');\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CalendarEventForm.vue?vue&type=style&index=0&id=685c7ca5&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CalendarSettings.vue?vue&type=style&index=0&id=1c0ed85e&lang=scss&scoped=true\""],"sourceRoot":""}